(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    595411,      12692]
NotebookOptionsPosition[    576091,      12361]
NotebookOutlinePosition[    576524,      12378]
CellTagsIndexPosition[    576481,      12375]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simplicial complexes, homologies, shifting", "Title",
 CellChangeTimes->{{3.866620234199237*^9, 3.8666202508083844`*^9}, {
  3.866620289548801*^9, 
  3.866620291460784*^9}},ExpressionUUID->"9b7d178a-63c6-404e-a7d1-\
cb651b4100eb"],

Cell[CellGroupData[{

Cell["h-vector characterization", "Chapter",
 CellChangeTimes->{{3.8662908005800486`*^9, 
  3.866290812364739*^9}},ExpressionUUID->"e5e8e854-e884-42b8-bba1-\
08deb7915938"],

Cell[CellGroupData[{

Cell["Complexes, shifted complexes and their \[OpenCurlyDoubleQuote]relative \
homologies\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.8662910918779173`*^9, 3.8662911238988085`*^9}, {
  3.866291188730238*^9, 3.866291191492872*^9}, {3.8663024991412487`*^9, 
  3.866302534077053*^9}, {3.8690225538370314`*^9, 
  3.869022557510846*^9}},ExpressionUUID->"bd29b991-36de-4a15-817e-\
63daaa0cbd62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Generate", "[", "faces_", "]"}], ":=", 
   RowBox[{"Delete", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{"Sort", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"Subsets", ",", "faces"}], "]"}], ",", "1"}], "]"}], "]"}], 
      "]"}], ",", "1"}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "minimal", " ", "complex", " ", "containing", " ", 
    "faces"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplex", "[", "n_", "]"}], ":=", 
  RowBox[{"Generate", "[", 
   RowBox[{"{", 
    RowBox[{"Range", "[", 
     RowBox[{"n", "+", "1"}], "]"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SphereSimplex", "[", "n_", "]"}], ":=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"FullSimplex", "[", 
     RowBox[{"n", "+", "1"}], "]"}], ",", 
    RowBox[{"Range", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8662715578682823`*^9, 3.86627156497904*^9}, {
  3.866275749231715*^9, 3.866275817217001*^9}, {3.866275877028662*^9, 
  3.8662758789167585`*^9}, {3.8663027835350666`*^9, 3.8663028480572577`*^9}, {
  3.8667112097879715`*^9, 3.866711251798554*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"aefd0d2b-57a2-4219-b259-74fc5fa0e3cc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AllShifts", "[", "s_", "]"}], ":=", 
  RowBox[{"Union", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{"Range", "/@", "s"}], "]"}], ",", 
      RowBox[{"_", "?", "DuplicateFreeQ"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenerateShifted", "[", "faces_", "]"}], ":=", 
  RowBox[{"Generate", "[", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{"AllShifts", "/@", "faces"}], ")"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Generate", " ", "minimal", " ", "shifted", " ", "complex", " ", 
    "containing", " ", "faces"}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866270871426818*^9, 3.8662708741773195`*^9}, {
  3.86627100467502*^9, 3.8662712327682333`*^9}, {3.8662713087648115`*^9, 
  3.866271311179499*^9}, {3.866271350233291*^9, 3.8662713714102526`*^9}, {
  3.8662714114106894`*^9, 3.866271436799286*^9}, {3.866271492449815*^9, 
  3.866271685480892*^9}, {3.8662718642745533`*^9, 3.8662718704012856`*^9}, {
  3.8662757913304653`*^9, 3.866275829486375*^9}, {3.866275873571353*^9, 
  3.866275875301077*^9}, {3.867749257270547*^9, 3.8677492678686457`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"031f3af4-0ea8-4873-b187-7157c2b991d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FVector", "[", "cmplx_", "]"}], ":=", 
  RowBox[{"Rest", "[", 
   RowBox[{"BinCounts", "[", 
    RowBox[{"Length", "/@", "cmplx"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"f", "-", 
    RowBox[{
    "vector", " ", "of", " ", "a", " ", "complex", " ", "starting", " ", 
     "with", " ", "f_", "0"}]}], " ", "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.866271665998167*^9, 3.8662717496244535`*^9}, {
  3.866271805198642*^9, 3.866271890671827*^9}, {3.8662720063026314`*^9, 
  3.866272008978237*^9}, {3.8662721390825896`*^9, 3.8662721566467667`*^9}, {
  3.8662721921178904`*^9, 3.8662721973636084`*^9}, {3.866272435545845*^9, 
  3.866272480543721*^9}, {3.8662725145976458`*^9, 3.866272524800361*^9}, {
  3.8662758352488937`*^9, 3.8662758716376576`*^9}, {3.869023150421965*^9, 
  3.8690231508046236`*^9}, {3.869023190606219*^9, 3.869023191354946*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"5c72f04d-6264-4c03-bfad-fa6fd8705fc6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ShiftedHomZeroObstract", "[", 
    RowBox[{"cmplx_", ",", "k_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ck", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"cmplx", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "#"}], "==", 
            RowBox[{"k", "+", "1"}]}], "&"}]}], "]"}]}], ",", 
       RowBox[{"ckP1", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"cmplx", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "#"}], "==", 
            RowBox[{"k", "+", "2"}]}], "&"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Select", "[", 
      RowBox[{"ck", ",", 
       RowBox[{"s", "|->", 
        RowBox[{
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"Range", "[", "r", "]"}], ",", "s"}], "]"}], "!=", 
          RowBox[{"{", "}"}]}], "&&", 
         RowBox[{
          RowBox[{"Intersection", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Union", "[", 
               RowBox[{"s", ",", 
                RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", "r", "]"}]}], ",", "ckP1"}], "]"}], "==", 
          RowBox[{"{", "}"}]}]}]}]}], "]"}]}], "]"}]}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"return", " ", "k"}], "-", 
    RowBox[{
    "faces", " ", "contributing", " ", "to", " ", "basis", " ", "of", " ", 
     SuperscriptBox[
      SubscriptBox["H", "k"], "r"]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShiftedHomDZeroObstract", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Union", "@@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ShiftedHomZeroObstract", "[", 
      RowBox[{"cmplx", ",", 
       RowBox[{"d", "+", "k"}], ",", 
       RowBox[{"k", "+", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"FVector", "[", "cmplx", "]"}], "]"}], "-", "d", "-", 
        "1"}]}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"ShiftedHomZero", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ShiftedHomDZeroObstract", "[", 
    RowBox[{"cmplx", ",", "d"}], "]"}], "==", 
   RowBox[{"{", "}"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"check", " ", "if", " ", 
      SuperscriptBox[
       SubscriptBox["H", 
        RowBox[{"d", "+", "k"}]], 
       RowBox[{"k", "+", "1"}]]}], "=", 
     RowBox[{"0", " ", 
      RowBox[{"\[ForAll]", 
       RowBox[{"k", ">=", "0"}]}]}]}], " ", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.866272745516243*^9, 3.8662727878455324`*^9}, {
   3.866272875950761*^9, 3.866272934057305*^9}, {3.866272974518086*^9, 
   3.866272977145084*^9}, {3.8662731063863935`*^9, 3.8662732886111746`*^9}, {
   3.866273474758215*^9, 3.866273491071311*^9}, {3.8662736991166744`*^9, 
   3.866273702963773*^9}, {3.8662738622333574`*^9, 3.8662739189926205`*^9}, {
   3.8662740573005905`*^9, 3.8662741046036797`*^9}, {3.866274579745243*^9, 
   3.8662745893661394`*^9}, {3.866274677739441*^9, 3.8662746788361945`*^9}, {
   3.8662750156472287`*^9, 3.866275026303711*^9}, {3.8662751979155664`*^9, 
   3.8662752024748473`*^9}, {3.8662752379297743`*^9, 
   3.8662752398045263`*^9}, {3.8662753553594513`*^9, 
   3.8662754133321705`*^9}, {3.8662758852583537`*^9, 3.866275945563843*^9}, {
   3.8662759809312115`*^9, 3.8662759940757*^9}, {3.8663022873716283`*^9, 
   3.8663023455676603`*^9}, {3.8663023789695644`*^9, 
   3.8663024881576347`*^9}, {3.8663025911488857`*^9, 3.866302661587659*^9}, 
   3.866302955154252*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"5797908c-7036-43fc-9350-b5bf87b6240f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HVectorHyp", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", "=", 
      RowBox[{"FVector", "[", "cmplx", "]"}]}], "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "d"}], "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], "j"], 
           RowBox[{"Binomial", "[", 
            RowBox[{
             RowBox[{"k", "+", "j"}], ",", "j"}], "]"}], 
           RowBox[{"f", "[", 
            RowBox[{"[", 
             RowBox[{"k", "+", "d", "+", "j", "+", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", 
            RowBox[{
             RowBox[{"Length", "[", "f", "]"}], "-", "k", "-", "d", "-", 
             "1"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "f", "]"}], "-", "d", "-", "1"}]}], "}"}]}],
        "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HVectorGeom", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", "=", 
      RowBox[{"FVector", "[", "cmplx", "]"}]}], "}"}], ",", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "d"}], "]"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"cmplx", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "x", "]"}], "==", 
             RowBox[{"d", "+", "k", "+", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"Complement", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"k", "+", "1"}], "]"}], ",", "x"}], "]"}], "==", 
             RowBox[{"{", "}"}]}]}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", 
          RowBox[{
           RowBox[{"Length", "[", "f", "]"}], "-", "d", "-", "1"}]}], "}"}]}],
        "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"two", " ", "definitions", " ", "for", " ", "h"}], "-", 
     RowBox[{"vector", " ", "in", " ", "case", " ", "of", " ", 
      SuperscriptBox[
       SubscriptBox["H", 
        RowBox[{"d", "+", "k"}]], 
       RowBox[{"k", "+", "1"}]]}]}], "=", 
    RowBox[{"0", " ", 
     RowBox[{"\[ForAll]", 
      RowBox[{"k", ">=", "0"}]}]}]}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8662769689302597`*^9, 3.866276996727681*^9}, {
   3.8662770715637417`*^9, 3.866277077144082*^9}, {3.866277268466915*^9, 
   3.8662773174661646`*^9}, {3.8662773858141828`*^9, 3.866277433561928*^9}, {
   3.8662774812999907`*^9, 3.866277540360794*^9}, {3.866277587177548*^9, 
   3.866277606285185*^9}, {3.866277707481325*^9, 3.866277708012385*^9}, {
   3.866277869434416*^9, 3.8662778854607906`*^9}, {3.866277943304283*^9, 
   3.8662779932305713`*^9}, 3.866278052438558*^9, {3.866280197502598*^9, 
   3.866280201200926*^9}, {3.866280312567918*^9, 3.866280315058344*^9}, {
   3.866280522397833*^9, 3.8662805303859262`*^9}, {3.866280565159376*^9, 
   3.866280572875478*^9}, {3.8662806135837803`*^9, 3.8662806210015545`*^9}, {
   3.8662806592853374`*^9, 3.8662806842405767`*^9}, {3.8662906545052843`*^9, 
   3.866290753320546*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"71a2dbec-7e36-4eac-8e24-8f85dc7d336e"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"B", "=", "Binomial"}], "}"}], ",", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"B", "[", 
       RowBox[{
        RowBox[{"n", "-", "k", "-", "1"}], ",", "d"}], "]"}], "-", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "j"], 
         RowBox[{"B", "[", 
          RowBox[{
           RowBox[{"k", "+", "j"}], ",", "j"}], "]"}], 
         RowBox[{"B", "[", 
          RowBox[{"n", ",", 
           RowBox[{"d", "+", "k", "+", "j", "+", "1"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"n", "-", "d", "-", "k", "-", "1"}]}], "}"}]}], "]"}]}], 
     ",", "\"\<Testing equivalence of two h vector definitions for full \
simplex\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Top"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.866290407807424*^9, 3.8662904484588175`*^9}, {
   3.8662905796222696`*^9, 3.8662906180705595`*^9}, 3.866295207455505*^9, {
   3.8662952458963356`*^9, 3.866295247943118*^9}, {3.8662952977038755`*^9, 
   3.866295304738448*^9}, {3.866295406123664*^9, 3.8662954087384167`*^9}, 
   3.86629559488577*^9, {3.866295886100395*^9, 3.8662959035052166`*^9}, 
   3.86630013781538*^9, {3.866300820034486*^9, 3.866300820503319*^9}, {
   3.8663008811307974`*^9, 3.8663009065021696`*^9}, {3.8663028721400185`*^9, 
   3.866302935499078*^9}, {3.8663029786726503`*^9, 3.866303057864795*^9}, 
   3.8663030929105854`*^9, {3.866308596188651*^9, 3.8663087115303063`*^9}, {
   3.8663087714395843`*^9, 3.8663089317483835`*^9}, {3.8666199410376787`*^9, 
   3.8666199971800313`*^9}, {3.866620057978172*^9, 3.8666200655508375`*^9}, {
   3.866644569128723*^9, 
   3.8666445785779676`*^9}},ExpressionUUID->"48e8bc53-25f2-4f9d-a963-\
8178976deb2b"],

Cell["Testing polynomial relation on h and f vector:", "Text",
 CellChangeTimes->{{3.8689553828132277`*^9, 
  3.868955410866206*^9}},ExpressionUUID->"af0f4b9e-4c65-4a1f-9f26-\
d8d1bd6a4d21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmplx", "=", 
      RowBox[{"Generate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}], 
       "]"}]}], ",", 
     RowBox[{"d", "=", "4"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"FVector", "@", "cmplx"}]}], ",", 
       RowBox[{"h", "=", 
        RowBox[{"HVectorHyp", "[", 
         RowBox[{"cmplx", ",", "d"}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f", ",", "h", ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}], 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "f"}], "]"}], "-", "1"}]], ".", "f"}], 
         "*", 
         SuperscriptBox[
          RowBox[{"(", "x", ")"}], "d"]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Length", "@", "h"}], "]"}], "-", "1"}]], ".", "h"}], 
         "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], "d"]}]}], "}"}], "//", 
      "Expand"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8689554392008452`*^9, 3.8689554948516073`*^9}, {
   3.8689555287725406`*^9, 3.8689555431322374`*^9}, {3.868955734220138*^9, 
   3.86895580365869*^9}, {3.868955884867201*^9, 3.868956109006726*^9}, 
   3.868956159593919*^9, 3.86895682722085*^9, {3.868956872328596*^9, 
   3.868956877509979*^9}, {3.868956921358659*^9, 3.868956934376727*^9}, {
   3.868958445180934*^9, 3.8689584607447567`*^9}, {3.868958507169971*^9, 
   3.868958529457241*^9}, {3.868958805048756*^9, 3.868958807194412*^9}, {
   3.8689588488385687`*^9, 3.8689588617507343`*^9}, {3.8689593119775476`*^9, 
   3.8689593299778814`*^9}, {3.86895941471181*^9, 3.868959461730711*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c3d2c06d-c405-4ac7-bc96-ccd619651c04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "16", ",", "14", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "16", ",", "14", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{
    SuperscriptBox["x", "4"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "6"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    SuperscriptBox["x", "8"]}], ",", 
   RowBox[{"8", "-", 
    RowBox[{"16", " ", "x"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"14", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"5", " ", 
     SuperscriptBox["x", "4"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["x", "5"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "6"]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    SuperscriptBox["x", "8"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8689560644358068`*^9, 3.8689561098788586`*^9}, 
   3.8689561605709314`*^9, 3.868956828612804*^9, {3.868956864739216*^9, 
   3.868956877887454*^9}, 3.8689584617413754`*^9, 3.868958531895507*^9, 
   3.868958807958522*^9, 3.868958862793807*^9, {3.868959319540703*^9, 
   3.8689593311277013`*^9}, {3.8689594158818455`*^9, 3.868959462610114*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"b18990f3-f3d8-4906-afad-31deceee6edd"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmplx", "=", 
      RowBox[{"Generate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}], 
       "]"}]}], ",", 
     RowBox[{"d", "=", "1"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"FVector", "@", "cmplx"}], ",", "d"}], "]"}]}], ",", 
       RowBox[{"h", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"HVectorHyp", "[", 
           RowBox[{"cmplx", ",", "d"}], "]"}], ",", "d"}], "]"}]}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f", ",", "h", ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "f"}], "]"}], "-", "1"}]], ".", "f"}], ",", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"Length", "@", "h"}], "]"}], "-", "1"}]], ".", "h"}]}], 
       "}"}], "//", "Expand"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868960004257971*^9, 3.868960101408618*^9}, {
  3.8690257052648945`*^9, 
  3.8690257088581004`*^9}},ExpressionUUID->"a088ea49-dd10-47a2-8b3b-\
42d7b13694d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"16", ",", "14", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"7", "+", 
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}], ",", 
   RowBox[{"7", "+", 
    RowBox[{"5", " ", "x"}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    SuperscriptBox["x", "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8689600882820797`*^9, 3.868960102044688*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"3a7bfcfe-58f0-4f27-adae-c1d7ff584ef5"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmplx", "=", 
      RowBox[{"FullSimplex", "[", "5", "]"}]}], ",", 
     RowBox[{"d", "=", "6"}]}], "}"}], ",", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fs", "=", 
        RowBox[{"PadRight", "[", 
         RowBox[{
          RowBox[{"FVector", "[", "cmplx", "]"}], ",", "d"}], "]"}]}], ",", 
       RowBox[{"hs", "=", 
        RowBox[{"PadRight", "[", 
         RowBox[{
          RowBox[{"HVectorHyp", "[", 
           RowBox[{"cmplx", ",", "d"}], "]"}], ",", "d"}], "]"}]}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "x"}], ")"}], "d"], "*", 
         RowBox[{"fs", ".", 
          SuperscriptBox["x", 
           RowBox[{
            RowBox[{"Range", "[", "d", "]"}], "-", "1"}]]}]}], ",", 
        RowBox[{
         SuperscriptBox["x", "d"], "*", 
         RowBox[{"fs", ".", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "x"}], ")"}], 
           RowBox[{
            RowBox[{"Range", "[", "d", "]"}], "-", "1"}]]}]}]}], "}"}], "//", 
      "Expand"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869022589557517*^9, 3.869022638105974*^9}, {
   3.869022793827292*^9, 3.869022840224948*^9}, {3.869022877737218*^9, 
   3.8690230109809165`*^9}, {3.8690239483127728`*^9, 3.869023978100768*^9}, {
   3.8690240086604624`*^9, 3.8690240595971766`*^9}, {3.8690240927840633`*^9, 
   3.869024098674012*^9}, {3.869024135754088*^9, 3.8690241505768757`*^9}, {
   3.8690242029070387`*^9, 3.869024203055044*^9}, {3.8690242360961504`*^9, 
   3.8690242382089376`*^9}, 3.8690245222403517`*^9, 3.869025510646721*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"c10050f5-c10e-420c-9fbf-4978c22c85c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"6", "+", 
    RowBox[{"51", " ", "x"}], "+", 
    RowBox[{"200", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"480", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    RowBox[{"786", " ", 
     SuperscriptBox["x", "4"]}], "+", 
    RowBox[{"923", " ", 
     SuperscriptBox["x", "5"]}], "+", 
    RowBox[{"792", " ", 
     SuperscriptBox["x", "6"]}], "+", 
    RowBox[{"495", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"220", " ", 
     SuperscriptBox["x", "8"]}], "+", 
    RowBox[{"66", " ", 
     SuperscriptBox["x", "9"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["x", "10"]}], "+", 
    SuperscriptBox["x", "11"]}], ",", 
   RowBox[{
    RowBox[{"63", " ", 
     SuperscriptBox["x", "6"]}], "+", 
    RowBox[{"129", " ", 
     SuperscriptBox["x", "7"]}], "+", 
    RowBox[{"111", " ", 
     SuperscriptBox["x", "8"]}], "+", 
    RowBox[{"49", " ", 
     SuperscriptBox["x", "9"]}], "+", 
    RowBox[{"11", " ", 
     SuperscriptBox["x", "10"]}], "+", 
    SuperscriptBox["x", "11"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8690241859034824`*^9, 3.8690242386660814`*^9, 
  3.8690245229994507`*^9, 3.8690255138698797`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"56e94eee-09b2-43cf-8f8c-5026b227b7d5"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Algebraic shifting", "Chapter",
 CellChangeTimes->{{3.8666200815231824`*^9, 3.8666201222112703`*^9}, {
  3.8690254249856753`*^9, 
  3.869025437825952*^9}},ExpressionUUID->"9be8a5b0-2c41-45cf-98b9-\
98723c1ccf77"],

Cell[CellGroupData[{

Cell["Implementation", "Subsection",
 CellChangeTimes->{{3.8666201375863123`*^9, 3.866620171993124*^9}, {
  3.8671669893935285`*^9, 3.8671669895484533`*^9}, {3.8672075436330023`*^9, 
  3.8672075487638483`*^9}},ExpressionUUID->"61069992-2fc4-4cb4-849d-\
e88b192118bb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "AlgebraicShifting", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "AlgebraicShifting", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<Numeric\>\"", "->", "True"}], ",", 
      RowBox[{"\"\<Parallelize\>\"", "->", "False"}], ",", 
      RowBox[{"\"\<Colors\>\"", "->", "None"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AlgebraicShifting", "[", 
   RowBox[{"cmplx_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"FVector", "[", "cmplx", "]"}], "]"}], "-", "1"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"Flatten", "[", "cmplx", "]"}], "]"}]}], ",", "xmtr", ",", 
      RowBox[{"cols", "=", 
       RowBox[{"OptionValue", "[", "\"\<Colors\>\"", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"xmtr", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<Numeric\>\"", "]"}], ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          SubscriptBox["x", 
           RowBox[{"i", ",", "j"}]], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Not]", 
        RowBox[{"SameQ", "[", 
         RowBox[{"cols", ",", "None"}], "]"}]}], ",", 
       RowBox[{"xmtr", "*=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Boole", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"i", "/.", "cols"}], ")"}], "==", 
            RowBox[{"(", 
             RowBox[{"j", "/.", "cols"}], ")"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}]}], "]"}], ";", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<Parallelize\>\"", "]"}], ",", 
        "Parallelize", ",", "Identity"}], "]"}], "[", 
      RowBox[{"Union", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ck", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"cmplx", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "#"}], "==", "k"}], "&"}]}], "]"}]}],
              ",", 
             RowBox[{"xk", "=", 
              RowBox[{"Minors", "[", 
               RowBox[{"xmtr", ",", "k"}], "]"}]}], ",", 
             RowBox[{"ksets", "=", 
              RowBox[{"Subsets", "[", 
               RowBox[{
                RowBox[{"Range", "@", "n"}], ",", 
                RowBox[{"{", "k", "}"}]}], "]"}]}]}], "}"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mk", "=", 
               RowBox[{"xk", "[", 
                RowBox[{"[", 
                 RowBox[{"Flatten", "@", 
                  RowBox[{"(", 
                   RowBox[{"ck", "/.", 
                    RowBox[{"Dispatch", "@", 
                    RowBox[{"MapIndexed", "[", 
                    RowBox[{"Rule", ",", "ksets"}], "]"}]}]}], ")"}]}], "]"}],
                 "]"}]}], "}"}], ",", 
             RowBox[{"ksets", "[", 
              RowBox[{"[", 
               RowBox[{"Fold", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "#1"}], "<", 
                    RowBox[{"Length", "@", "ck"}]}], "&&", 
                    RowBox[{
                    RowBox[{"MatrixRank", "[", 
                    RowBox[{"mk", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}]}], "]"}], "]"}], "]"}], "==", 
                    RowBox[{
                    RowBox[{"Length", "@", "#1"}], "+", "1"}]}]}], ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"#1", ",", "#2"}], "]"}], ",", "#1"}], "]"}], 
                  "&"}], ",", 
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Length", "@", "ksets"}], "]"}]}], "]"}], "]"}], 
              "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"dim", "+", "1"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8666203353414683`*^9, 3.8666203587593546`*^9}, {
   3.866620646095465*^9, 3.8666206498971767`*^9}, {3.8666207123816824`*^9, 
   3.8666207713809214`*^9}, {3.866620869826851*^9, 3.8666209036023955`*^9}, {
   3.866620958313983*^9, 3.8666209669177217`*^9}, {3.866621018698207*^9, 
   3.866621056091505*^9}, {3.866621129826333*^9, 3.8666211944671364`*^9}, {
   3.8666212342214785`*^9, 3.866621264705397*^9}, {3.8666212988777423`*^9, 
   3.8666213198900824`*^9}, {3.8666213583556843`*^9, 
   3.8666213894225445`*^9}, {3.8666216511890144`*^9, 3.86662168516468*^9}, {
   3.866621922465994*^9, 3.8666219379345417`*^9}, {3.8666220589435596`*^9, 
   3.8666220609290133`*^9}, {3.8666222930453005`*^9, 
   3.8666223043109827`*^9}, {3.8666224475931635`*^9, 3.866622459706169*^9}, {
   3.866622565204218*^9, 3.8666225923861637`*^9}, 3.8666233827389374`*^9, {
   3.8666234191069174`*^9, 3.8666234923658557`*^9}, {3.866623672824682*^9, 
   3.866623799909213*^9}, {3.8666238479977503`*^9, 3.866623881507821*^9}, {
   3.8666240050929728`*^9, 3.8666240479561253`*^9}, {3.8666240792475863`*^9, 
   3.866624148494075*^9}, {3.8666242599178143`*^9, 3.8666242649658947`*^9}, {
   3.8666244124813585`*^9, 3.866624459182226*^9}, {3.86662518026075*^9, 
   3.8666251993569555`*^9}, 3.866625243544235*^9, {3.8666252790800114`*^9, 
   3.8666253261759415`*^9}, {3.8666255673822336`*^9, 
   3.8666255698649163`*^9}, {3.866625604101556*^9, 3.8666256574081764`*^9}, {
   3.8666257060286264`*^9, 3.866625841899089*^9}, {3.866625877191129*^9, 
   3.8666258793752394`*^9}, {3.866625979716273*^9, 3.866625999781459*^9}, {
   3.866626054164466*^9, 3.866626065829099*^9}, {3.8666272201361003`*^9, 
   3.866627223235696*^9}, {3.866627629952854*^9, 3.866627632210045*^9}, 
   3.866641669311332*^9, {3.8674925336187115`*^9, 3.867492543182829*^9}, {
   3.867492608279359*^9, 3.8674926423396654`*^9}, {3.8674926939907274`*^9, 
   3.867492785224347*^9}, {3.867492840574803*^9, 3.867492856358839*^9}, 
   3.867492970690175*^9, {3.867493092202896*^9, 3.867493158117219*^9}, {
   3.867493251061609*^9, 3.867493275702628*^9}, {3.8674936444828796`*^9, 
   3.8674936472655697`*^9}, {3.867493706613056*^9, 3.867493745650113*^9}, {
   3.8678375072824106`*^9, 3.867837599742693*^9}, {3.867837720812318*^9, 
   3.8678377344076486`*^9}, {3.8678378837571297`*^9, 3.867837885411811*^9}, {
   3.86783797119888*^9, 3.8678380855074797`*^9}, {3.867838352416452*^9, 
   3.8678383884470263`*^9}, {3.8678385002787423`*^9, 
   3.8678385087597322`*^9}, {3.8678389621732244`*^9, 
   3.8678389955802593`*^9}, {3.8678393336446466`*^9, 
   3.8678393497720118`*^9}, {3.8678395566322947`*^9, 
   3.8678396292164783`*^9}, {3.8679015623255095`*^9, 3.867901566477228*^9}, 
   3.867901654878409*^9, {3.8679017463851266`*^9, 3.8679018031316977`*^9}, {
   3.867901835230988*^9, 3.867901852038371*^9}, {3.8679224969684315`*^9, 
   3.867922508039378*^9}, {3.8679225639114404`*^9, 3.8679225679424963`*^9}, {
   3.867922741397047*^9, 3.867922765978505*^9}, {3.8679228522372885`*^9, 
   3.8679229017307434`*^9}, {3.867926002650107*^9, 3.867926007543022*^9}, 
   3.867926038929098*^9, {3.8679262192087383`*^9, 3.867926244932234*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"f3896fb1-5958-47d3-b7a9-b59dd9ecd463"],

Cell["\<\
Test on an octahedron (should have maximal faces \
{1,2,3},{1,2,4},{1,2,5},{1,2,6},{1,3,4},{1,3,5},{1,3,6},{2,3,4}):\
\>", "Text",
 CellChangeTimes->{{3.8666268042548556`*^9, 3.86662685896908*^9}, {
  3.8666269045462723`*^9, 3.866626909230142*^9}, {3.8666269433533*^9, 
  3.8666269651454945`*^9}, {3.866627011976646*^9, 3.8666270860251384`*^9}, {
  3.8666271248389564`*^9, 3.8666271346573687`*^9}, {3.8666271651070776`*^9, 
  3.866627172968031*^9}, {3.867493649764249*^9, 
  3.8674936509048386`*^9}},ExpressionUUID->"41f12410-3396-44ac-aaba-\
0c34efb23121"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicShifting", "[", 
  RowBox[{"Generate", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8666206394588804`*^9, 3.8666206415955725`*^9}, {
  3.866622469312216*^9, 3.8666225315200405`*^9}, {3.8666241787852964`*^9, 
  3.866624198317876*^9}, {3.8666260787813005`*^9, 3.866626093146162*^9}, {
  3.8666267171395564`*^9, 3.8666267713999023`*^9}, {3.866641733447324*^9, 
  3.866641735796687*^9}, {3.8666418417957354`*^9, 3.866641852667308*^9}, {
  3.8678380988124933`*^9, 3.8678381137495174`*^9}, {3.867838280546849*^9, 
  3.867838281591593*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"d4f4fd64-4e4d-4fa4-8c5c-c1d9eb118da3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "6", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.867493636043998*^9, 3.8674936569661236`*^9}, 
   3.867493751390998*^9, {3.867838093371872*^9, 3.8678380958049045`*^9}, 
   3.867838195893866*^9, 3.867838282130521*^9, 3.867901944994405*^9, 
   3.8679260460381684`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"14927b3e-3774-4fd5-9c54-7f7a717df116"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Collapse type theorem", "Subsection",
 CellChangeTimes->{{3.867167042775653*^9, 3.867167054008355*^9}, {
  3.8671671632668276`*^9, 
  3.867167174869828*^9}},ExpressionUUID->"a920a7e9-2613-49f1-9eee-\
515c48301644"],

Cell["\<\
Checking if a collapse can be passed through algebraic shifting (preserving \
the type of collapse) :\
\>", "Text",
 CellChangeTimes->{{3.867167023650847*^9, 
  3.8671670278695846`*^9}},ExpressionUUID->"b6c476a7-51c2-4937-8551-\
7b1e4c8a84ac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Collapse", "[", 
   RowBox[{"cmplx_", ",", "face_"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"cmplx", ",", 
    RowBox[{
     RowBox[{"\[Not]", 
      RowBox[{"SubsetQ", "[", 
       RowBox[{"#", ",", "face"}], "]"}]}], "&"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IsFreeFace", "[", 
   RowBox[{"cmplx_", ",", "face_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cont", "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"Select", "[", 
        RowBox[{"cmplx", ",", 
         RowBox[{
          RowBox[{"SubsetQ", "[", 
           RowBox[{"#", ",", "face"}], "]"}], "&"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"cont", "!=", 
      RowBox[{"{", "}"}]}], "&&", 
     RowBox[{"SubsetQ", "[", 
      RowBox[{
       RowBox[{"Subsets", "@", 
        RowBox[{"Last", "@", "cont"}]}], ",", "cont"}], "]"}]}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867135236770206*^9, 3.8671353167403774`*^9}, {
  3.86713536091028*^9, 3.867135364318204*^9}, {3.8671354585508566`*^9, 
  3.8671355417471623`*^9}, {3.867135586762149*^9, 3.867135596060478*^9}, {
  3.867135662078148*^9, 3.867135782343014*^9}, {3.867136111794525*^9, 
  3.8671361158831725`*^9}, {3.8671361499318695`*^9, 3.8671361514702225`*^9}, {
  3.867147142723771*^9, 3.86714715856269*^9}, {3.8671660896692467`*^9, 
  3.867166102089523*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"63f51f3c-d609-4154-a305-3d3c614b5990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomDCollapse", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ff", "=", 
      RowBox[{"FirstCase", "[", 
       RowBox[{
        RowBox[{"RandomSample", "@", 
         RowBox[{"Select", "[", 
          RowBox[{"cmplx", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "@", "#"}], "<=", "d"}], "&"}]}], "]"}]}], ",", 
        RowBox[{"f_", "/;", 
         RowBox[{"IsFreeFace", "[", 
          RowBox[{"cmplx", ",", "f"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ff", "!=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"Collapse", "[", 
       RowBox[{"cmplx", ",", "ff"}], "]"}], ",", "cmplx"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CollapseType", "[", 
   RowBox[{"cmplx_", ",", "clpsd_", ",", 
    RowBox[{"checkCorrect_", ":", "False"}], ",", 
    RowBox[{"init_", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"initcol_", ":", 
     RowBox[{"{", "}"}]}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"type", "=", 
       RowBox[{"MinMax", "[", 
        RowBox[{"Length", "/@", 
         RowBox[{"Complement", "[", 
          RowBox[{"cmplx", ",", "clpsd"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"cont", "=", 
       RowBox[{"Complement", "[", 
        RowBox[{"cmplx", ",", "clpsd"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{"checkCorrect", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IsFreeFace", "[", 
          RowBox[{"cmplx", ",", 
           RowBox[{"cont", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Collapse", "[", 
           RowBox[{"cmplx", ",", 
            RowBox[{"cont", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "==", "clpsd"}]}], ",", 
        "type", ",", 
        RowBox[{"Throw", "[", 
         RowBox[{"{", 
          RowBox[{"cmplx", ",", "clpsd", ",", "init", ",", "initcol"}], "}"}],
          "]"}]}], "]"}], ",", "type"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz1kow3EAB/DZg8mRKxK2zBFGHpAi5I8HHlx7MGXmJsoZqb24r0Qspmlt
ytgDHjZCHiSWJHPlTs4pbXMmt7Hv7+Hbp759X77sgipuMZ1Go/mZA8W+Wy5f
20bKqBYyYXBzMRvuSuaIgpC7AEi5Z4dB1vd4HDSFOSSTvcY5C4rKRwvgiU7l
8W029k7GJA7YBEFWTmk0fFjiUvBVVZMMq9yWMmDR2GYRdOW5l0HZwnY5VFZw
6uEIfVQIBYKjFhh5adUJ44+HeqCmYaIPHtiKB6G+qUwMc2ccZ6ET/3cRVtal
L0NRkEED06ItaD9mFYZmBrTtirGD155ye8hvPUyFbZOWAthRnVIC9WsqIt/N
uRLueT2L4HnF1Tqc07droU69uw8DFYlnsEU6cANX5jk6+MA7fYTVpfQnWGev
/IDv04Gf8EKqYP6aHTSks6ClTuUN1VO1PtD7lgqF1txVoiz/ioIehdkJME8S
JYddnffEpP3weZgoHCaatK0bsL+bsUl6jvbPhP/sU2KEXi75w4+bRinMZPif
wCRe9xl8Wd9jKXeMVG/uG/EfP0dw4Q==
  "],ExpressionUUID->"05156151-098f-4bec-b26f-52e8dac00bbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomCmplx", "[", 
   RowBox[{"nVert_", ",", "nSphere_", ",", "nSimp_", ",", "maxSimSz_"}], 
   "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sphsz", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", 
           RowBox[{"maxSimSz", "+", "1"}]}], "]"}], ",", "nSphere"}], "]"}]}],
       ",", 
      RowBox[{"sisz", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{
         RowBox[{"Range", "@", "maxSimSz"}], ",", "nSimp"}], "]"}]}]}], "}"}],
     ",", 
    RowBox[{"Generate", "@", 
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "@", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"Range", "@", "nVert"}], ",", "#"}], "]"}]}], "&"}], "/@",
         "sisz"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Sequence", "@@", 
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Sort", "@", 
             RowBox[{"RandomSample", "[", 
              RowBox[{
               RowBox[{"Range", "@", "nVert"}], ",", "#"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"#", "-", "1"}], "}"}]}], "]"}]}], "&"}], "/@", 
        "sphsz"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[196]:=",ExpressionUUID->"e34cc335-e4fe-408d-8284-333fde5c3f5a"],

Cell["Counterexample on five verticies:", "Text",
 CellChangeTimes->{{3.8671661957215424`*^9, 
  3.8671662137492905`*^9}},ExpressionUUID->"56634f6b-521b-4e7a-b434-\
e826d11e1630"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"shift", ",", "collShift", ",", "complex", ",", "collapse"}], 
    "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rndcmp", "=", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomCmplx", "[", 
           RowBox[{"5", ",", "3", ",", "3", ",", "4"}], "]"}], ",", "1"}], 
         "]"}]}]}], "}"}], ",", 
     RowBox[{"Catch", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"col", "=", 
             RowBox[{"RandomDCollapse", "[", 
              RowBox[{"cmp", ",", "d"}], "]"}]}], ",", 
            RowBox[{"shf", "=", 
             RowBox[{"AlgebraicShifting", "[", "cmp", "]"}]}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"col", "==", "cmp"}], ",", "2", ",", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{"CollapseType", "[", 
               RowBox[{"cmp", ",", "col"}], "]"}], "==", 
              RowBox[{"CollapseType", "[", 
               RowBox[{"shf", ",", 
                RowBox[{"AlgebraicShifting", "[", "col", "]"}], ",", "True", 
                ",", "cmp", ",", "col"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"cmp", ",", "rndcmp"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", 
          RowBox[{"Sort", "@", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"Range", "[", "10", "]"}], ",", "5", ",", "1"}], 
            "]"}]}]}], "}"}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8671413616822023`*^9, 3.867141383704874*^9}, {
   3.8671421452509556`*^9, 3.8671421990849357`*^9}, {3.8671439353902693`*^9, 
   3.867143943612566*^9}, {3.8671440206774035`*^9, 3.867144123600441*^9}, {
   3.8671442654905424`*^9, 3.867144291165143*^9}, {3.8671453386818247`*^9, 
   3.867145341894511*^9}, {3.86714537192999*^9, 3.867145396459973*^9}, {
   3.867145479007071*^9, 3.8671458183413105`*^9}, {3.8671458617155867`*^9, 
   3.867145928685156*^9}, {3.867145992885798*^9, 3.8671460163901963`*^9}, {
   3.8671460536282897`*^9, 3.867146057389386*^9}, {3.8671461095542536`*^9, 
   3.867146147173479*^9}, {3.867146569029908*^9, 3.8671465963905535`*^9}, {
   3.867146651988474*^9, 3.8671466669078703`*^9}, 3.8671467012766576`*^9, {
   3.867146831965296*^9, 3.867146906882477*^9}, {3.867147252475109*^9, 
   3.8671472898932514`*^9}, {3.867147354151759*^9, 3.867147395226554*^9}, {
   3.8671475293546224`*^9, 3.867147542992502*^9}, {3.8671478608368626`*^9, 
   3.8671478628148656`*^9}, 3.8671479028279324`*^9, {3.86714793515298*^9, 
   3.8671479457470765`*^9}, {3.8671484651169944`*^9, 3.867148541584469*^9}, {
   3.8671485716634064`*^9, 3.8671485762038684`*^9}, {3.867148609979868*^9, 
   3.86714864221611*^9}, {3.8671486747694407`*^9, 3.867148709325143*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"823b14fd-51ce-444d-82c5-d73d19b97ad3"],

Cell["Check it is indeed a correct counterexample:", "Text",
 CellChangeTimes->{{3.8671662807179604`*^9, 
  3.867166305147008*^9}},ExpressionUUID->"f4252157-4f38-4045-ab24-\
2bd7fd6361cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"complex", " ", 
  RowBox[{"(*", 
   RowBox[{"the", " ", "initial", " ", "complex"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8671470214271145`*^9, 3.8671470779062824`*^9}, {
  3.8671471134050426`*^9, 3.867147128677491*^9}, {3.867148104966427*^9, 
  3.8671481845516243`*^9}, {3.8671483573312426`*^9, 3.867148373669964*^9}, {
  3.867148785418788*^9, 3.8671487899144983`*^9}, {3.867151119155261*^9, 
  3.867151127109788*^9}, {3.8671663072203183`*^9, 
  3.8671663211437435`*^9}},ExpressionUUID->"8951ddb5-3856-42dd-ac06-\
12b9a1648ae7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.867147078709981*^9, 3.8671471289988184`*^9, 3.867148107347785*^9, {
   3.8671481460914803`*^9, 3.867148185103633*^9}, 3.8671483751287794`*^9, 
   3.867151128144706*^9, 3.867151645054062*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"68da77e0-410e-4a27-ac03-2baa4d5bb5cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SubsetQ", "[", 
   RowBox[{"complex", ",", "collapse"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"'", 
    RowBox[{"collapse", "'"}], " ", "is", " ", "the", " ", "complex", " ", 
    "after", " ", "collapse"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.867151140541336*^9, 3.867151162451564*^9}, {
  3.867166333062399*^9, 3.8671663640588026`*^9}, {3.867166525972946*^9, 
  3.867166527739113*^9}},ExpressionUUID->"ffc8fb51-1b6b-4d15-8a92-\
db944289a9ab"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.867151163458776*^9, 3.8671516488670692`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"b4d58cf1-e6d9-4110-8d6b-00d8f6bf3095"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Complement", "[", 
   RowBox[{"complex", ",", "collapse"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"deleted", " ", "faces"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8671511739099727`*^9, 3.867151191098255*^9}, {
  3.8671663787382994`*^9, 3.8671663889630384`*^9}, {3.867166529741022*^9, 
  3.867166531157772*^9}},ExpressionUUID->"d1e0276f-644c-496a-8302-\
08ca75b58759"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.86715119165798*^9, 3.8671516518516874`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"5ac57b83-227c-4635-a0fe-126af1eecb6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shift", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"algebraic", " ", "shifting", " ", "of", " ", "complex"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.867151629190609*^9, 3.867151630437002*^9}, {
  3.867166394979915*^9, 3.8671664498744373`*^9}, {3.8671665328689775`*^9, 
  3.867166535890439*^9}},ExpressionUUID->"ea4eff1e-c444-45d8-8307-\
447e01ec87d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8671516333762074`*^9, 3.867151655127139*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"7508e722-b0c6-47a2-b9c9-21104e54879a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"shift", "==", 
   RowBox[{"AlgebraicShifting", "[", "complex", "]"}]}], "&&", 
  RowBox[{"collShift", "==", 
   RowBox[{"AlgebraicShifting", "[", "collapse", "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"'", 
     RowBox[{"collShift", "'"}], " ", "is", " ", "the", " ", "algebraic", " ",
      "shifting", " ", "of", " ", "collapsed"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.867151229487672*^9, 3.867151238429183*^9}, {
  3.867151299614371*^9, 3.867151329790196*^9}, {3.8671664660320215`*^9, 
  3.8671665406775975`*^9}},ExpressionUUID->"62140bd5-a841-4cbf-be3c-\
12864a97f999"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.867151303467044*^9, 3.867151345060886*^9, 
  3.8671516595379777`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"5ebe018f-67c6-42cb-9c43-81c7b8e351b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubsetQ", "[", 
  RowBox[{"shift", ",", "collShift"}], "]"}]], "Input",
 CellChangeTimes->{{3.8671513549408717`*^9, 3.8671513903036966`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"baa7b6cc-2b11-4a39-b523-2479a1f9c2f6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8671513909809713`*^9, 3.867151663423228*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"958725c0-5918-445c-a103-40b8f84c4bd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Complement", "[", 
   RowBox[{"shift", ",", "collShift"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"deleted", " ", "faces", " ", 
    RowBox[{"don", "'"}], "t", " ", "form", " ", "a", " ", "segment"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8671514052359934`*^9, 3.867151406961532*^9}, {
  3.867166547758218*^9, 
  3.867166566192508*^9}},ExpressionUUID->"710414e1-e610-4eae-a2c9-\
ec98f0a60ccf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.867151408141205*^9, 3.8671516664331136`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"878114f6-68c0-43dd-accd-95844944a0c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"shift", "==", 
   RowBox[{"AlgebraicShifting", "[", 
    RowBox[{"complex", ",", 
     RowBox[{"\"\<Numeric\>\"", "->", "False"}]}], "]"}]}], "&&", 
  RowBox[{"collShift", "==", 
   RowBox[{"AlgebraicShifting", "[", 
    RowBox[{"collapse", ",", 
     RowBox[{"\"\<Numeric\>\"", "->", "False"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8671516899377155`*^9, 3.867151695270898*^9}, {
  3.8678382009212656`*^9, 
  3.8678382178950267`*^9}},ExpressionUUID->"2f2510f7-f04f-4fa8-bfd1-\
c897554bc8fb"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.867151722321497*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"38bf1358-5ebc-4655-a6b1-83b9b72c7246"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"shift", ",", "collShift", ",", "complex", ",", "collapse"}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8671662376087713`*^9, 3.8671662690803595`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"883ecb77-f093-477d-8706-1ce090e6d99c"],

Cell["Even simpler counterexample on 4 vertices:", "Text",
 CellChangeTimes->{{3.8671654440531054`*^9, 3.867165457419461*^9}, {
  3.8671656335222864`*^9, 3.8671656344916024`*^9}, {3.867166010439556*^9, 
  3.8671660153075113`*^9}},ExpressionUUID->"ef92fde5-018f-472f-aabd-\
d8cace5b7c14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "0", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rndcmp", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomCmplx", "[", 
          RowBox[{"4", ",", "1", ",", "1", ",", "3"}], "]"}], ",", "5"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{"Catch", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"col", "=", 
            RowBox[{"RandomDCollapse", "[", 
             RowBox[{"cmp", ",", "d"}], "]"}]}], ",", 
           RowBox[{"shf", "=", 
            RowBox[{"AlgebraicShifting", "[", "cmp", "]"}]}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"col", "==", "cmp"}], ",", "2", ",", 
           RowBox[{"Boole", "[", 
            RowBox[{
             RowBox[{"CollapseType", "[", 
              RowBox[{"cmp", ",", "col"}], "]"}], "==", 
             RowBox[{"CollapseType", "[", 
              RowBox[{"shf", ",", 
               RowBox[{"AlgebraicShifting", "[", "col", "]"}], ",", "True", 
               ",", "cmp", ",", "col"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"cmp", ",", "rndcmp"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"Sort", "@", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Range", "[", "10", "]"}], ",", "4", ",", "1"}], 
           "]"}]}]}], "}"}]}], "]"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"gives", " ", 
    RowBox[{"{", 
     RowBox[{"shift", ",", "collShift", ",", "complex", ",", "collapsed"}], 
     "}"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8671533989279714`*^9, 3.867153430099945*^9}, {
  3.8671534723817463`*^9, 3.867153489374651*^9}, {3.8671535425549126`*^9, 
  3.8671535713944197`*^9}, {3.8671536967800536`*^9, 3.867153698586666*^9}, {
  3.867165460952281*^9, 3.8671655031465015`*^9}, {3.8671655875095654`*^9, 
  3.867165629067064*^9}},ExpressionUUID->"f9c0f799-4388-41f0-baa3-\
87412095dab8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.867153435395132*^9, {3.867153484425783*^9, 3.867153494613877*^9}, {
   3.867153562078126*^9, 3.867153578916381*^9}, 3.8671537074493933`*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"5285cc50-e7dc-432e-b787-4b840d2e0f91"]
}, Open  ]],

Cell["Many counterexamples can be generated:", "Text",
 CellChangeTimes->{{3.8673991385447187`*^9, 
  3.8673991525221305`*^9}},ExpressionUUID->"4941c31d-15f7-4062-93e1-\
f8ca5368dc81"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rndcmp", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomCmplx", "[", 
          RowBox[{"6", ",", "4", ",", "4", ",", "5"}], "]"}], ",", "6"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{"Catch", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"col", "=", 
            RowBox[{"RandomDCollapse", "[", 
             RowBox[{"cmp", ",", "d"}], "]"}]}], ",", 
           RowBox[{"shf", "=", 
            RowBox[{"AlgebraicShifting", "[", "cmp", "]"}]}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"col", "==", "cmp"}], ",", "2", ",", 
           RowBox[{"Boole", "[", 
            RowBox[{
             RowBox[{"CollapseType", "[", 
              RowBox[{"cmp", ",", "col"}], "]"}], "==", 
             RowBox[{"CollapseType", "[", 
              RowBox[{"shf", ",", 
               RowBox[{"AlgebraicShifting", "[", "col", "]"}], ",", "True", 
               ",", "cmp", ",", "col"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"cmp", ",", "rndcmp"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"Sort", "@", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Range", "[", "10", "]"}], ",", "4", ",", "1"}], 
           "]"}]}]}], "}"}]}], "]"}]}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8673990605757403`*^9, 3.8673991133218527`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"cf72a158-5dac-4591-9965-ba48a70a1e05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "3", "}"}], ",", 
     RowBox[{"{", "4", "}"}], ",", 
     RowBox[{"{", "5", "}"}], ",", 
     RowBox[{"{", "6", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8673991167605114`*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"ade3543f-4f72-4aca-95e4-906a7bf68ff3"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["d-collapsibility", "Chapter",
 CellChangeTimes->{{3.867753033842395*^9, 
  3.867753057359519*^9}},ExpressionUUID->"c180eaa2-f528-4c80-9c7b-\
9a3ea93c95c3"],

Cell[CellGroupData[{

Cell["Zig-zag d-collapsibility", "Subsection",
 CellChangeTimes->{{3.867167200886874*^9, 3.8671672162573314`*^9}, {
  3.8671700488412113`*^9, 
  3.867170078803195*^9}},ExpressionUUID->"8445997a-408b-4a63-b9b7-\
1b9ad428fa5f"],

Cell["\<\
Check if being zig-zag d-collapsibility implies d-collapsibility\
\>", "Text",
 CellChangeTimes->{{3.86717008620471*^9, 3.86717011344156*^9}, {
  3.86717017503985*^9, 3.867170186871394*^9}, {3.867173433721153*^9, 
  3.8671734345512533`*^9}},ExpressionUUID->"92561be6-9ab3-4c02-9468-\
4dc1fcb327a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpecialDCollapses", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Collapse", "[", 
       RowBox[{"cmplx", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Select", "[", 
      RowBox[{"cmplx", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "#"}], "==", "d"}], "\[And]", 
         RowBox[{"IsFreeFace", "[", 
          RowBox[{"cmplx", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{"cmplx", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Select", "[", 
      RowBox[{"cmplx", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], "<", "d"}], "\[And]", 
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{"cmplx", ",", 
            RowBox[{"s_", "/;", 
             RowBox[{"SubsetQ", "[", 
              RowBox[{"s", ",", "#"}], "]"}]}]}], "]"}], "==", "1"}]}], 
        "&"}]}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellLabel->
  "In[197]:=",ExpressionUUID->"74c1acf7-f8bf-47d3-860e-29a17c86686b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ExistsZigZagCounterExample", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dead", "=", "False"}], ",", 
      RowBox[{"colap", "=", "False"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"NestWhile", "[", 
      RowBox[{
       RowBox[{"cs", "|->", 
        RowBox[{"Union", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cls", "=", 
                RowBox[{"SpecialDCollapses", "[", 
                 RowBox[{"#", ",", "d"}], "]"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"cls", "==", 
                  RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"dead", "=", "True"}]}], "]"}], ";", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"cls", ",", 
                   RowBox[{"{", "}"}]}], "]"}], ",", 
                 RowBox[{"colap", "=", "True"}]}], "]"}], ";", " ", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{"cls", ",", 
                 RowBox[{"{", "}"}]}], "]"}]}]}], "]"}], "&"}], "/@", "cs"}], 
          ")"}]}]}], ",", 
       RowBox[{"{", "cmplx", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Not]", "dead"}], "\[Or]", 
           RowBox[{"\[Not]", "colap"}]}], ")"}], "\[And]", 
         RowBox[{
          RowBox[{"Length", "[", "#", "]"}], ">", "0"}]}], "&"}]}], "]"}], 
     ";", " ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dead", "&&", "colap"}], ",", "True", ",", "False"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExistsZigZagCounterExample", "[", "cmplx_", "]"}], ":=", 
  RowBox[{"Or", "@@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ExistsZigZagCounterExample", "[", 
      RowBox[{"cmplx", ",", "d"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "1", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"Length", "/@", "cmplx"}], "]"}]}], "}"}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8671710576080875`*^9, 3.8671710794331493`*^9}, {
   3.8671711408134003`*^9, 3.8671711434405456`*^9}, {3.8671716074554358`*^9, 
   3.8671716299215765`*^9}, {3.8671716674580283`*^9, 
   3.8671717262324886`*^9}, {3.867171784327406*^9, 3.867171842640832*^9}, {
   3.8671720533016434`*^9, 3.8671720686749115`*^9}, {3.867172108779149*^9, 
   3.867172137462705*^9}, {3.867172204543578*^9, 3.8671722356878586`*^9}, {
   3.8671722661807814`*^9, 3.867172326858346*^9}, {3.867172364669792*^9, 
   3.867172439268383*^9}, {3.8671725397856717`*^9, 3.8671726002758417`*^9}, {
   3.8671726609869595`*^9, 3.8671727055000215`*^9}, {3.8671727438251195`*^9, 
   3.8671727845631123`*^9}, {3.867172896680006*^9, 3.867172943403638*^9}, {
   3.867172990095312*^9, 3.867173111280672*^9}, {3.8671733255292783`*^9, 
   3.8671733847630205`*^9}, {3.867173734870324*^9, 3.8671737612800865`*^9}, {
   3.867173850244864*^9, 3.8671740016432133`*^9}, {3.867174297835503*^9, 
   3.867174345880974*^9}, {3.8671743856913424`*^9, 3.8671743875224123`*^9}, {
   3.8671745280665245`*^9, 3.867174530749897*^9}, {3.867174569558201*^9, 
   3.8671745943674803`*^9}, {3.8671746276636114`*^9, 3.867174737218667*^9}, {
   3.8671747724918547`*^9, 3.8671747963130417`*^9}, {3.8671752532565536`*^9, 
   3.8671752970607986`*^9}, {3.86717662468093*^9, 3.867176624793748*^9}, {
   3.8671766796274014`*^9, 3.8671767093720984`*^9}, {3.867176850933394*^9, 
   3.867176882300351*^9}, {3.8671769532244415`*^9, 3.8671770470945463`*^9}, {
   3.867177102689601*^9, 3.867177149833574*^9}, 3.8671775924992304`*^9, {
   3.8671798866012907`*^9, 3.867179890283596*^9}, {3.867180008221037*^9, 
   3.867180011141259*^9}, {3.8674886461715035`*^9, 
   3.8674886479323373`*^9}},ExpressionUUID->"a21c89b2-7422-41e9-bdf3-\
929c8e58666b"],

Cell[BoxData[{
 RowBox[{"All", " ", "simplicial", " ", "complexes", " ", "on", " ", "less", 
  " ", "then", " ", "5", " ", 
  RowBox[{"verticies", ":", "\[IndentingNewLine]", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsvQ+sXVWd9y28PDxNp+MgImk6NuENERhQmjQoOqmElwyEt8owIGJoYDoP
TqsEkWH6ouLUWKcpDdRqX/lTmwq8FREeQJyIFWojlZFAY6cBBki1hD/yx1Lq
FC5MEVJ793u+6+7fvuuce+6956y79zl7rfP5JItb9tn33H3WWXvt9Vl/fuv/
vPjycxcf/K53vWvJtMZ/zv1fX/6//vmf/9dVnzqs8T+f/uKSSz73xUX/+H9/
8f9Z9LlF//zRi/+PxsFj/kfjrMY/Dmn8OwMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADoFcMH+n0FAAAAAAC9h3YwTJEDBw5k+/fvJ5FIJBKJRCKRBiap
DQwQRO7gX1u2LDv1tNOyT5x1VnbG/PkkUlTpzPznaaefPuYYiRRTcuX2zDOL
RDkmxZCKctoos6qHz/SO2U+/fcExjtXl2Ef++q+z62+80bWF5VQAnWLl5ZYN
G7JDp03LDjroYJfe9a53kUhRpoMPOaTv10AiTTVRF5NiTn493K4cc4xjdTjm
17PvOeKI7Iknn2xqGwNMxjvvvON+XrFkiStH+rljx45s67Zt2bbt20mkKJLK
q+q/n9x7ryvHc+bOzX710EPZ9sce6/u1kUjdpIe3bs12Pv206x9VW/Rba9a4
OlnH+31tJNJESfXtLx980NW/qodVH6tepj1BqnPa3kgal1KZ3bTp565NjEdB
p5hHfXXpUleGVq1e7f6fMgQxYfOan3nmGVeO551ySvbmm2+OvMjaUYgIq3s1
x1pl+af33990HKCW5PWs6t2PzZvnyu5zzz3njrHuBOrO+Rdc4MrsA1u2uP+n
voVOMY/6yle/6srQymuuKY73e80fidRNEurHVzn+6F//dfba0JA71u/rIpG6
SX98+21Xbs2j1KdPnUyKIYm9r7/uxlJVdtWvRR1MqnOS4w83yuh555/vyuzm
X/yiKLMAnTCeR1GGICZax6PkUeOOR/3pTyr4Iz+7Qe+j31FijAsqwureVo9q
rZNV5lV/Wx3e7d/w2xEAUyavE4ca9W7hUe3Go3ReSP3b+rcsAZQAHgWh4FGQ
Al15VLeM97zmGQ4V0KlHhb53O2/CpWDKdOpRZfwd6l4oGTwKQunYo4ZH95YK
qsOo+6BCOvKo/Oe+++/L9lz+xeyPv9zS/Pok7N+50/3O2488nB14Y2j0dynX
UCKTeZSVdcWe0LpWrWn9w969I7/cQVlUna9YAHfedZd77127d4++L2UZQpnM
o/K6UvXof/3LV7Oh764dHZPqtNzZeW+9lf3ppZeyA6++WvKHgEEFj4JQejEe
VfgXQEV041FyqCca5+hZ3vR6OxqvvXnH7dmLHz4pe+bww7Kn/+f/yJ6Z8WfZ
88d+INu7/BvdtwMAJmEyj7Kft99xh3t91uzZ2Y5G21S07ffPy6ZcS3sEzj3p
JLfHhX73kEMPzY4+5pjsC1dcETQ/EKBgMo/K68r//tHd2VON11Snyof83+2I
RjlVHf7Mke/LXv7kfPqyoBTwKAhlUo+yGDz79rk40oplYn2fw5O9eT6GZX9H
70F9B1XQqUepzMp/djTOcR7kv+6Tr4F67Zur3Ll6Zr902qnZrnP+zv2US+m4
nufFe1C2oQQ69SgdnzZ9enbs8ScU6/nbeZSdv+HWW937vffII92+k59dtDib
d+qpxT4/CxYsGPkFyjKE0KFHaT6A+qNUj2bm7p2UN3v/767NdjbeW+m52X/Z
+e8DTAAeBaFM5lH2U3tAvPuww9x+ZRaHt5M5zzrnvk2bsosWLnTtgrvvuafj
3wXolG7GozQONalH5cc0j0/nay7KcP53dE/s+7cfO7fSs1ztAsdU1k0D5HTq
UT9qHJcDaTxpIo+ysrz71VezdevXF/tM2ntpz0CNS2mM6kclrsWCAaNTj7r3
J67edB7V6XhU/vo7Tz3p5gX87kMnuDkB8qjhTn4fYBLwKAhlMo/y5+LPPuoo
51JWzsZ1obxO0/NaMfn1rLf9ojWvxH9/gDIo3aNyhrPRcVf3NyzOVON3di/6
x+YxKYAS6MijGuWvY48a529YfHXV00cdfbT7W9+7+WZ3jDl+0DUdeJTq0q49
ylsT5eYCNDxKY1L6KZea9PcBOgCPglC68SjNw9c8kk2bNze95lO0Zxv1pz2b
Tzv99Oz4E090/75m1aqm9wcog6o8qnjdH2tqeZ9dn/k066SgNEofjzKGDxR7
UFnMdCGPUh+Z/pbWXPl/A6BjAsejJh1Pyl+zOdaqt995/DH3HngUlAUeBaGU
7VFFTLRG/aj5IurfVL/nGWeeiUdBZVTqUa3k60fsfTqKVwHQIb0YjyrmSTXq
/89dcon7O2r7Dr3xRtPrAB1TxXiUN796Zx6bQu+hmKlaY4VHQVngURBK6R7V
5r31bLY2AR4FVdBTjxKNNoGe6ayPgrKpbDwq59bbbnN9XIqZrr+h95h3yimj
66Zok0IIZY9H5ccOvPZa9rs5J7p5fBqH0nF5FR4FZYJHQShVepS9/trQkJvb
h0dBVfTMo/K2gObn78j7R4s9THiWQwlUOR6l31WMPr2vxembNWtWEV+CMgzB
lD0elde1Wn+qulZ1rq1XZTwKygaPglB64VEaj8KjoEp64lH5c10xo/T8ZiwK
qqDS8ahGWVf9rfnWt2zYkF162WXZjD9/t/s7F198sevzsvMAuqLM8aj8/7XX
lM595aILR47n74FHQdngURBKlR5V1Kt4FFRM5R6VP78PvDHkxqCmPC8QYBx6
sj7KY9OmnxcxgarYhx0GhLLGo/J//+mll5wnKWnfCf2+6l8xZl6f3od6GKYA
HgWh4FGQApXH68tGHEqx+fS7inne+jpAGVS9Pkq/r3rfktB6Kf2tuSedlO3Z
s6fj9wIoKGs8Kv+37Zeuc+2nn+RRSvb6/uefa/p9gG7AoyAUPApSYEoele8H
NSbZa9nIWudd5/zdqEPpvrF46Dy3oURCxqN2Pv108ZruBT8VDB8YU2db/a+Y
E/pbGpd6zm/7AnTKVMaj/Do4r3M1p0/z+VTftv58+ZPznUMp9oQdZ50qTAU8
CkLBoyAFKhmP8vZ/NIdiz12omm7Hoz5w3HHN7dXJyPeRsr2kxBeuuKK4b2w8
ivYodEXIeJTt99xpWcvPY30UlA0eBaHgUZACIR6lnxpn0jx8JfVnKrl/N46r
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
9ssHH3TnjJe3eo/9eaIemYRYPCq/TtVbn7vkkqI+8+s2HS+ume99YvL82bR5
c/aeI44Yk5cfnDMn27ptmzunVuWgBTwKQsGjIAXwqPKxOkBtTc2FOnTatOzd
hx3m/m1Jeb3muuvceXV+RsYEHlUeKpNnn3OOy0eVXfMojUvp2LxTTx2ZzyWo
J6ZGZB6l+0ptfZUHq9f0c/qMGe7a79240Z3HfTc5msMnX7L7zJ4Pdp9pnE/U
eR44HgWh4FGQAnhU+VjdcP2NN45phypZe+MTZ53lzmuqM9rlOd9DR+BRJZCX
tb2vvz6m3FpSO0/t6CeefNKd29rWV/n/jyeeyDY/9FC25ZFHsl27dze9N7QQ
mUdpLp++f9VjfrlQedG1ax6ofz6Mxb7X+zZtGpOP9oxQ/9us2bOL+6yu9Rge
BaHgUZACeFT5WB3w1aVLJ/Soeaec0nR+wfBIvCY7PtzTq48XPKoE8nteMfra
OZR5lPK3yaO831u5dm121bXXZmtuucX9/Kfly7NHn3qq6f3BIzKPUv9PO4/S
/x98yCHu/uMZMjFWJ2lOgnxpvHtN8/1sbl9d6zE8CkLBoyAF8KjysbpB8SQm
8ijFnRB+7GD1469avy67+oYbsqWrv5l9/5573NiAg+9jQvCoEvDGo9SGa9fG
s/ZyO49S/BSNQSk2pdC9oPL89W9/uzkOGYwSmUddMM54lPn1pZdd1ucLrT/2
vf7qoYeKud/txqNmzprFeBQkCx4FKYBHlY/VAb9oPFfseejPfTePWrtuXdP5
aoOqL/9/37cxe+q3v3Xt0UuXLs2u27BhtF7hOxkXPKo8VC8obljrug2bu6X2
/mR+b3WLyvJFl1+e7X711QnPH1gi8yjNRdM1qh7z13xavXbnXXe587jvJsdf
H+Xnpd1nchRHjWOg41EQCh4FKYBHVYPlq+qHdnGtNDemiNc3PLqnlOuz956Z
Gp9adOWV2TMvvND0vjAWPKocrIwpFvP7Zs4cU3a1Bv6n99/vzmmXt63x2rY+
+qgrw5rzN+wdh5zIPEr1luLf++XCysbixZ8fnYfM9zwxef7cfc89RVwJPy+P
Pf6E7NHHH3fn+PdU3WJh4lEQCh4FKYBHVY/2VVlw4YUub+VPmu83UR6752Re
j7z8+9+7vvydzz5bvAbtwaPKw8qZ2nGKZa05qIrRp33Qutk/SudojqrWStn5
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
5JN9vy4SqZukulftz5NOPtmV5etvvJE6mRRFUn2relf1r/UBqF7u93WRSBOl
Rx9/PDtj/nzGoyCIVo96zxFHZH9x+OHZuw87jESKKlm5nTZ9ejZ9xoy+Xw+J
FJpUllWGVZbt//t9TSRSp4myS4otqZw6j9q82bWJ8SjolFaPOuroo7MPzpmT
HX/iiSRSVEnl9tjjT8gOnTbN1Yl/9cEPUZZJUSb156sMqyxTJ5NiSSqnqnet
7Ko+puyS6p5URmfOmoVHQRCtHvW1ZcuyN/fty17+/e+zXa+8QiJFkVRe977+
erZ12zZXjjUnSmul9uzZQ1kmRZVefPElVy/Py9eY3Hrbba5O1vF+XxuJNF5S
Pav6duezzxZzUlUfq16mDibVOe1+9dXs7HPOYV4fBEGcCUgB4kxAKhBnAqLE
izPxUeKeQ2RYnAk8CrqFuOekFJLVef7+UUNvvOGOEXOXFFMi7jkpxkTcc1Ks
SRD3HEJhH15IAasL2YcXYod9eCFK2IcXIgaPglDwKEgBPApSoWOPUrlW/Z3X
4ZOi8ztNAN0S4FE6rjaI0nCXf0v3gyXKLEwVPApC6cqjeMZCTenKo8pqL3I/
QAUwHgVR0qPxKPdebep0xrxgKuBREEql41H0eUKP6Nl4VN4PyjMbqmJSj8rr
z/3PP5ftufyL2d7l38iyt94afW0cDrz2mvudP730Utuk15SK9wLohi48yv7/
Vw89lH120eJsxcqVxXrWccuw50r6G3ffc0+2dt0693PIr+tpW0AAeBSE0rFH
/elP2YFXX3XPW/0boE5041EWh1frobuhdf6I/n8fbU4omUk9Kq9///jLLdmO
xuvPH/sBVzc72o295uxe9I/ZTrVtj3xf9szhh41Jz83+S/dz6Oab2r8XwER0
4VFWltdcd507T3v4qE5ud27r72lvltlHHeV+76CDDnZJ/6/j9G9BKHgUhDKp
R+V1o/zpdx86IXv6f/6P7J3HH2t6bQz58X33/iT7r3/5qusvbU2vfXNVdR8K
Bo6OPCr/ueDCC905l152Wed/IP/dP779dvbLBx/MvrVmjat3P3HWWaylhlLp
1KPefuRh5z2/m3OiG2tyTOBRqovlXC+ddmr24odPako69syMP3Ne9uYdt7d/
L4CJCPCo7918s/Mg1de7876AMfWoNw51xZIl7n21Z+qXGm0WeZjq8fcccUSx
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
vD7Go6oFj6oWxqN6Bx5VHlZuFefn69/+drZr9+6RFyi35YNH9Yx9b73lHGo/
+VoaeBSEgkdVgz03LM4E41HVgkdVS7vxKAd5Wzp4FEQJHgURg0dBKHhUNfge
Rdzz6sGjqsXy99GnnsoWfeUrjEdVCB4FUYJH9Rbq3lLBoyAUPKoa/Hl9i668
0s3Pd1D3VQIe1RtUX2g+yTvUD5WBR0GU4FEQMXgUhIJHVYM9N3bt2ZPddOed
zqfEcD8vKmHwqAoZPjCaoHLwqBLxyy7lt1rwqOqhLFcGHgWh4FHlM+4zg7qv
MvCo8lGetivLqhvoD6gOPKoc9ucxopvK6nD7Mg0lgEdVRtu6mLJcKngUhIJH
lUz+LPnj229nu199NXv5979386CK+o42fSXgUSWT55nyde/rr7tyrPJs9QV5
Wh14VAl49fCePXtc+dVPl4f051cDHlUNeXlV3Wtl2cXqa5Tl8fq6oHvwKAgF
jyqR/DnyywcfzD5x1lnZzFmzsmnTp2fHHn9CtmLlyuy1oaGm86A88KgSyfNL
z+pvLF+efeC441w5Vnk++5xzsoe3bm06D8oFj5oa/t59Kq8qtzP+/N3ZrNmz
s89dcgl77lQFHlU+eZ7Kny6++GJXht992GHZUUcfnX120eLsxRdfajoPwsGj
IBQ8qiTyemzn009n7z3ySJeXh06b5tqfhxx6qPv/L1xxhTuHZ0r54FEl4fXV
6zmtvFT5VTlWedb/61n+fL7ej7wtHzwqnGJd6iuvZHPmznX5p7Lrl98zzjyT
uqEK8KhyyfNTZXXeKac0tSmsLOu4HEuQx1MDj4JQ8KhysDpMfUbKR/V/2vPb
/j19xgw3ViXI33LBo8rByuWmzZuLMqvkl2Xl76WXXTZyPs/u0sGjwrF64Pob
b3R5p757K7tK+n8dv/Ouu5rOhxLAo8pleLQsH3TQwU1lWXWyleXv3XyzO4/6
YWrgURAKHlUO9pyYe9JJrs7z257+8/uWDRvcecU6EygFPKocrFyuXbeubTtU
5VrH1U4S1BPlg0dNDeWT5vO1q4f1/zq+8OKL+32Z6YFHlUuenyrLBx9yyJiy
bH1aCy68sOjPIv5POHgUhIJHlYM9Jz44Z47Lx/E8yvqO8KhywaPKwcrlmuuu
m9CjPopHVQYeNTUUW0Lzndq1PfX/Oq62KZQMHlUuk3iU1cV6nfg/UwePglDw
qHKw54Q9P8brO7L5JORvueBR5WD1wYZbbx0zP9V/dquNLyjH5YNHTR1b29da
fq0eVtwfB3VDeeBR5ZLnp+ZQT9Sm+NqyZU3nQxh4FISCR5WDPSc0H0rr8m1d
iZLVd3/1wQ+59c/++VAOeFQ5WD4qtq7W6WsOlMqvX55Vvm1+KuW4fPCocCyP
Htiypcn9rR7W+vzZRx2V7dixw51H+S0RPKpc8vxUfNR2Y1Eqy4pptW37dnce
9cPUwKMgFDyqJIZH40TpeW0x+jQer596dluMCZ4p5YNHlYfd+19q1AnyKIsN
ZeX5Lw4/3O0l5SBvSwePmgLe3qQW80d1scqx1cWK1zdE3VA+eFS5eGVT8fot
9qTKcxGv79RT3f5+gjyeGngUhIJHlYPll2Kbu/pt3jzXDtV6Zq01sX0eqOuq
AY8qieHR9cqad6+8PO300125Vnm2+Lta2yyoJ8oHjwrH6gGNN6nvSu1NldWL
Fi50z7j3HHGE86n7Nm1qOh9KAI8ql+HRuQHaw099AR/++MedO51+9tmuLCuP
NQdbkMdTA4+CUPCoqWP116OPP+7G2f3ntJ+P1HPVgUeVg5XXW2+7rRhH1Z5o
huaYaDxKZfzue+5p+h0oBzxqCuT3+hVLlri8O3P+/KbjX1261B1XPKBiX3Qo
BzyqXPL8vPLLX3Z5efyJJ2ar1q/L1mz4/7Lrf/CD7G8XXOiOH33MMc61/N+B
7sGjIBQ8aoq0mUeivk+hPHSveXubQjXgUSWQ59Mf9u4t2kHLV6xwx1SWrU6w
57pi/O/avdsdo51UHnhUIN56Es2tluv/6qGH3DF7zqm82v68cipBvpYEHlUa
ll9a+/S+mTPdXL5FV16Z/b+3fj+7Zt3abNVN67NrGk6lNddN+/lRloPBoyAU
PGpqWD5p7ZPqOsWJZh1U78GjSiDPp1WrV7s8PPb4E9r22e976y3nUDpH/f7+
78LUwaPCsPw5/4ILXL417RHVKJ/2umKm2jo/8yzytgTwqNKw8mh9s8pPudOq
9evdmNQ169Zl123Y4NzKYve1mwMDnYNHQSh41NRRHtpaEmtX8tzoLXjUFMnz
SPEjNBff3+vML8v273s3biz2NFH/v/8eMDXwqO6xvNFcU/VnaX711m3bml4T
Vn7Ntdh7p0TwqFKw8rp58+bCkS696qp8LGpd7lLr3b81v++UM88s4qdo7zQH
Zblr8CgIBY8Kx54N6t/UGlCt+yzWklCP9RQ8amq0ztlTG75tTDNvjurixZ8v
Yka1vgbh4FFdkpc5Pcs+cdZZLs8UF0WMybPh0TgUs2bPdudef+ON7hht/SmC
R00dryyfe955Rf3a6lA2LrX65puypau/mc18//vdud9as8b9PvndPXgUhIJH
TYG8zlNsPn9vR+qw3oNHhWP3uuKkqG2pcaaJ9ou2Y2qLHnX00S6/FZNyvPOh
O/Co7rB7//Y77nD5NXPWrAnX3dv5anPqfJVh29ePumIK4FFTJ89DrQ1Q36zm
nl517bXOl+RNzR41Oib1mcWL3flaS/X8Cy80vRd0Bh4FoeBRYVi+2VoSxcyx
sSieGb0HjwrEG0OyPUoU51xMVI6tflBfvrVdbW/T/ZT/KYFHdY/W7CkGn/Lr
a8uWjRwc77639v4bbxR5bOv0qbunAB41daxvNt9fQvHN19xyS1uHah2bOunk
k93vnPvp8917kOfdgUdBKHhU91j9pD5PW29/zapV7hj51h/wqDD8mP3aa0fz
8W3tfSf5JmeSdzWt6ye/pwQe1Tnm7OsabcnWGNCd9ANonZ/tbfrT++9veg26
BI+aElbutB/USN/U+7Ovf/vbLs752Dl9zWNSmve3ZNnXXZwrleWJ5hNAe/Ao
CAWP6h57JsidlGeKo0t+9Rc8KpA8b9SHafvrdtrm8R1MawM1r0Rzq/zXoHvw
qA7x4vRb/Gf5lOgkr+wc22vqY/PmZXtff73pvaEL8KhgLH/8uPzaH0pz9lyc
8wnHokbn951x7qeKNonNVSXvOwOPglDwqC7JnxUvvviS26NUeaY9SwX1Vf/A
o7rH8mzT5s1uLEpz8eVEotP7387TXCrlu9qzujf894fuwKM6w/LjG8uXFx6k
+X2OTu55L0alrfOz5x9lNwA8KpjWedIaV51oDKrdvD7FRb/6hhuKsmzzW8n7
zsCjIBQ8qjssXxQPyuKa0V7vP3hUl+R5oji51l63mP3d3PuW7xoTsPn5Fiut
2IMaugKPmhwrd088+aRbW++PhYaU31s2bCjW+VlfAu3PLsGjwhgeXSegOD8q
y3//+c+NxOibdF2UNya1fmR+36LLL3dz+9Qvpn18/b8B44NHQSh4VOfYs2D7
Y4+5/UlUV23cuNEdI7/6Cx7VHVZe1fbUc1t9mMo70W2bx9aoaH2J7gntKWVr
rGg/dQ8e1QH5PW1x+hXv3D/e1fvY3NY8zrTaU62vQQfgUWHk+fbVpUtdnh1/
4onZyrVrvX13u0uKS/Hhj3/cvdeZ8+e79yb/JwePglDwqA5p1HVWF9ke4/a8
pd+9/+BRXeCtK/lo3t6xmP3B931LzD+NTRV7QkJX4FGTMDw6FqU9ShWnX3Gi
RUh70fJVfffqH/PnapPnXYBHdY0/rqqyp7Ks8aT2+0V1MCbV+B15lGKla2zV
3x+t2G8a2oJHQSh4VGdYfuh5rbpO6+ptzJxnRP/BozrH8srm4h97/AnOqRyB
eWXv+Vyj3WT7m2pPAEFd0h141MRYPpx/wQUufz67aPHIC1MYP2pd56cxAa35
L94XJgeP6hord9b/pHGkkb2i1ncQ63w8l1rrYk787YUXFfX7c3wPk4JHQSh4
1OQM5z/Vv06M53qCR3WINxf/A8cd5/JKa0PEVJ+xVmf4a03Uz+pe4/ndMXjU
+Fge3H3PPS42iuI8/6LEdo8cwNb5qW0raHt2CB7VFVZeNQda5VjzoS+96qo8
Rl+YQxXpppH1Uranmu2PxrNwfPAoCAWPmhx7Bqg9o7UkGouyPUepl+oBHtUZ
dl/buhLt92hjUVNu6+T5rL+h9Sp6f40ZFHUJ30NH4FHjYOWrUU5tLZO5Thl5
Y++xadPP3Xtrnf7WbdvcMTygA/CozsnzSvmivSaUV6eceWbwfL52MSe075S8
TH6mdav35mu5+S7ag0dBKHjUJOT13TuN/FBcXeXR8uUr3DHyqD7gUZNjY0I7
du4sYuNqz0f3Wkll2b4HtT/V39C01oTnd0fgUe2xsqWxKBvvfP6FF0ZeLOMe
b7MG9oxG27ZY50c9MjF4VOcMj/bNap2AnP1LK6/O5/RN3aNsXqBc6rT58913
oe+EPq3xwaMgFDxqYt7J80H7Oyp/NBcqNK4ZVAceNTmWR7bvqMU4K/tet7+z
fMWKYk+pqa6/GiTwqPHR/lAaQ/Vjo5RZpqzs7nz66aKvYe26de4Y+T8JeFTH
WH7YPX762Wc75ynPoUZjTixd/c1izeo1q1a5v0tZHgseBaHgUeNjdZ3Wktg8
Y+qheoJHTcLw6DiR+j41z8Nik5eeP/n7vTY0VLQTFi/+vDvGfTM5eNRY7P5W
7BLliRzH9nsuu/y27omqcS/6zjoAj+oIK1/ycytfch05Txlz+trFnNB+VKrz
NUdA+7b41wEj4FEQCh41Plb3y52UN3NPOikbeuONPl8VtAOPmoSWPXIuWriw
0nyx+kP7q+n5rfjU923a1PQatAePasGL02/9WRbLuco80bORuEJdgEdNiuXD
3tdfL+KZfHLBgjy2xNpSHcqf36e4E3M+8pGi7mevlrHgURAKHtUei9Gnsaij
jznG5c2dd92Vv0j9UzfwqPGxvNm0eXM2bfp01yf56OOPu2NV3uf23l+44gr3
nWh9YWkxLRIGj2rGnlE2T1TlSPP7HBXd234sNa3TV2xArcvyX4MW8KhJsbLz
rTVrinHV0T13yx2Laoo5ccstbv2V5iIoVlZZMVpTAo+CUPCo9lj9Yvs6aF/w
N/ftG3lxwNvldQSPGgdvTx2tmVfeaH2UqPwez//unj17irUmNi+W5/f44FGj
WDlRfFTNf9KafOvPqjo/7P1tPaHcQHNV/esCDzxqYrw9J2YfdZTzmQsWLhyJ
0VeRQ7XG75v/qfOKNavsj9YMHgWh4FFjsTpfffa2J/ggt2ViAI9qj5VXxcyz
/k+LcdaLto39jdvvuMP9/ffNnFnsKTXI38tE4FFjsf4sxZjoGXn53P3qq67d
6WK1riBW67jgURNieWB7PStmlRxndN/daj1Kf0dzB7Uvr/6+5gkIyvIIeBSE
gke10Cb2rdaUCOYU1xc8qg1eO3DO3LkuX7RvlOjZ/W37BjTqGVubde6nz3fH
aFu1B4/KGR4di9I+pRqLsjV2vSo79ne0P4DtKWX9AJTfFvCo8RkefT6pL0ll
edHll5e2X1RnMSfWub+36Mor3fxu3VMWa2jg6pY24FEQCh7VjH3uXz74YFHX
sBdj/cGjxmJ58r2bb3Z5onV+cipHD/PE7il/fFfX5L8Go+BRI9jn1dwn5YP2
Ky3KbS/v6bxvzfZL1Rzvnl9DDOBR42Jl+bOLFrt8UYyJ0XGo3niU71Lz/uZv
3HWojin2Rxtw8CgIBY8ai993TpymOMCjWhgejQul+SPKE+2BJvrRprH6RPWL
rkVzS3o5vzAm8KjRz6o2jeI8KDbKw1u3Nr3W62tRP8B7jzzSjSWUvX91EuBR
bfFjlihuqfpnL73qqp6ORbXO71OcdZVlfUdrrruu6ToHFTwKQsGjPPLnwObN
v3BrQDX+rv0Y/degnuBRzdj9u3z5SIyzeaee6pxK9LNNo+uyfVS15sUxgN/P
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
TEoeeOnSpS5mhvzw1ttuc5811bKMR0EoA+NReR2/Z88e1zbz57APSvssZQbJ
o+yzPrBli2uv6Tm3bft2dyz6+zb/rvTdWb++XFFE/9k6JHWPat1/+aSTT3ZO
JWJvb9tnU8xoq4cGZk+pAfQo+75tXFX7Lmlt0cieuzGORTW7lHxw/qfOK+5T
tZ9Eit8nHgWhDIpH2eextSRqowwl2s4eRAbGo/LPMtxIFuMstX0+/PjBWq+t
mJqpucREpOxRdp9q7qb1Z33v5pvdsRQ+nx970vbhWb5ihTuWYtuziUHzqOHR
/cM0L1Wf9+8//7mRGH2RO1SRGj64cu3a4vN9KeGYXHgUhDIIHuWvJXnvkUe6
z/mjhNomMDge5ce10+fUOiKVa5HSs80+p9VL2hsr6vUzXZCyRxl+bBT3uRK6
R618ah6UxSHcsWPHyIsJfc4xDJhH2WfS3su2752cY2QsKo0kH9T8vkWXX+76
szRXdftjj41kQGJlGY+CUJL3KC8OmO0xrvtFuOOJ1QWDykB4VP45NE9o3rx5
7nOuWLnSHUvmfm1B6/Zb95RK5vsch2Q9Kv/eFKdfe/b5bZak2tn559T3pZiT
A/PMGSCPss+jsmyx7uUase0X1WlSLHTtTajPqfnWqfV9CDwKQkndo+xzaC8a
22/e9qVJrW4fZAbJoxTDzsZobF1JMp/Ro3W/bPWFPrx1a9NrKZKqR9n1K/aX
v+7NkVj5tc+6dds2FzdanzfWvd06ZoA8yr5D65vV2qHRcai0PMrioGs/LJvP
Y3FU30moLONREErqHiX0WWxPmoUXXzxyMLHn9qAzEB6VjYzPyJ/0GW/ZsMEd
S62NUuCtBbO4hOoLLWJsJvS9+qToUe1i2aXeXrHP9aX82arYhLZOP8myOyAe
5TuyvEJ7Tlx61VV5jL60HKrVpT71D/9QxFG1uaqpfLd4FISSskfZ/a1nt8ai
9OxO7d6HEVL3qNY4KYqxa/HAUy7L9rk1f8biEmivU/+11EjOo2yeW6Ocnnve
eQO3t5LqIY1X6HPr/nUkUCeNYRA8yvve1Cerz6j5bqnO52uXtA5Mn/vSyy4b
kycxg0dBKIPgUdYesfUVydTpUJCyR+3PP9uOnTtdXF1/LCqF+3Qy7DNqjyHr
C1W8N5HivZyaR/nzM9WfpXluz7/wwsiLkd+bk+GPw9ncVO1XIJIruwPkUfdu
3Oi+T60T0Hw3rR9KbT7fmDGp9aN7Sk2fMSONvd898CgIJVWPsutXe9PaXurT
9l+DdEjZo+yz2Z40inHmHx8YGt+j7SmlZ16qnz81jxJ6zsw75RT3eb6Sx06O
/b7sCC/O0eLFi93n134F9lpSeTAAHmWfQ3WwPt8pjfpoxKH67zm9cimNvZ02
f37xnNVcc0fkZRmPglBS9Cir6xTX7KN5fX7NqlXuWMyfC8YnWY/yYpxpLyX1
Ad63aZM7lkrbpBPss27fvt3lgb+nVGr5kJJH2XdjsVE0nmpjUal9b+NxoM14
sq3Tj/E7HZfEPcq+qw233urGVY+c9f5s6epvZmtuuWVg5vTpc8obv/7tbxfz
rFOJGYtHQSgpe9Sq1avdZ1Lc5NeGhvp8VVAlqXqUfa4FCxYU4zAx35tToXW/
Fq3bt3iFKbTTjGQ8Kr/v9B3puxqEtW3jYeVTn9/mR6iuckRcPzWRsEf5fbO2
1u0Tjbp4JLbE2r77TW9dam124x0/dHsOH3TQwS7uewpzffAoCCVFjxKKi2R7
cGvPUkcqzysYQ4oeZZ9J9bpinGkuvmJEidjvzyC8dpq1Zb6UzxGLvZ3mk4pH
2bNFcwEsNvSb+/aNvBjpPTlV/vj228X3qvjvIpmyOwAetea66woPTm3P3ZBx
qQ9//OPFXNUijmqk4FEQSmoe1bqWRM+soTfeGHlxQJ/dg0ByHpWvnVDMbz2j
/PhIsd6bZdC6bl/rnX/10EPuWOxtNSMFjyrmsu3Ykc2c9X43D0rzoURMn6NM
7HOrvKpPxJ+jm0SepOpR+efa9corzp80BvN3f79wJEZf4rElxvWoPOaEYmyo
LKsuVhwZEet3jUdBKCl5lP/snjV7tvs8dm/H+Hmgc1LzKCuvGkvVc9vFqHv2
WXcs1udUaeTfp8Udlm/E3hfqk4JH2Xdk/VmKMRHjfVg2rfsXaIzO9pSK/r5O
1KPs2rUOSJ/pA8cd58aiBiFGXycu9YncP7R+Iua9OPAoCCUVj1K/fWtcpLPP
OSd/MbG4SDCGpDwqv161r7RPlL/vTGz3ZSXk+aN4BTZ3N9Z6qx3Re9TwaH+W
+qr1GTZu3OiOxdi+KhVvbEPtTuXN8hUr3LHo8yZFj8o/03ONzzHz/e93n2nR
5ZcP1H5RE3mUXFJOKbf051lHU1d54FEQSioeZdf78Natbr6E9un45YMPumPR
1uHQMSl5lH0Wi9mvGF/WzxfbZ6kKu9/XNZ7nY/Y1iPx+j92j7DovWrhwdB2Q
lVvKb3F/33rbbW6+43uOOCLbtn1702tRkqBH2XVrTrWNH47GOR9sj3IutW4k
DvqiK68s9pSyedax1FcGHgWhpOJRQtdscc3Ov+CCkYM8tweCZDxqeDQu1LHH
n+A+i1xBxNoWqYQ8n5Qntn5M975zqMjHn2P2KLtGtUXUl6X0C9olbXmnkR+a
MzFmT6lYScyj/PVsKsdyBPnCSIw+HKpwKc3vu+WWbN7f/E2xv6HiqcQGHgWh
JOFRef2t57X697TPjuaU+K9B2qTiUXbf2Vx89X/ufvVVdyzGtkil5N/ro48/
Xswfs9icMedVtB7l3WfWn/W5Sy5x/1/7a+8xVj41hmprea+/8UZ3LNq8Ssmj
vH4aW4cpT3B7RTEO1ZJG5vdpLy0ry4praPkXC3gUhBK1R9le8Y2ful5rd9ha
kpju4b4zfGBsioioPWp4tAwL9QHYHoea2yfeieF+7AP2vX9t2bL2e0rlMQ9j
IjqPyuthP5airvt9M2cWcy1rfw/2AcsvPXOVX8efeGKxR7F7LbZ6OAWPaqmL
H9iyxcX5UT/NkhUrnEcxn29s0vicxuk+9Q//MLo/Wv7dx1KW8SgIJUqP8uo5
+/m9m28u7l/tG+9ei6Xu7jPjPeNqXQZaiNWjimeMyH9aLC/Nj2h6HcbSJiaH
YsQJK7/mU7EQjUdZP5aHnid23d9Yvrw4D9qQ54vy7GPz5rk8+8IVV4y+5tcL
MeRhzB7VpiwLK8tnnPspF5uOsajx0ki+KH/mzJ3r8kzxvoRf/9b5eYZHQSgx
epT1fSrm0abNm7O169YV+3Jqv3hR5+uvFXmdJudQ37F8VLE61KevfK798y8n
Ro+y58trQ0NubprWnStOv9ada99di5NS1+uvC37fsfJOfcdfXbo0u3fjRte/
7+bqx9IWzeLyKKHyqzpDY6dyJ82tVvwuG1uJpQ7pB/5e28o3rcNRHaC9tnTM
ja1GUm5j9yihsrz9scfc/GCVZa2Jeu+RR7qxKGL0TZxsTOrSRt2rcqzyrLKs
+mvTpp+7vq46lwM8CkKJ0aOEfEn3qq5Z4+4W90jPc1Hn+7U25M8O5Zl5qPJR
PzXP+Ud5+y2G53hsHmXXq2e29d9ZOdZP9U/ve+utPl9lJHixOfxybPmpWFvF
uucaloVWovGobGR/M8WTtPKr/Tj954h7vrSbM0wqkuoCzT3VWjLlnfJQeal/
qw2vdVPF/mh1Lr+xelR+3brPbB8Fvy4+bf787Lu3/cDF9x4ZdyGNl+RSGrdT
nqkcWx4qT9U+Uz9tXcsCHgWhxORRdv+pr07Xqr4ixdpUMqc697zzRs+t8zOn
33jzoWzvB+Wh5aXNCd8eSTzemDzKrlV5r/U8ft5b7FitLbFYyHW7/rphdZX6
j1vzUsnf1ySGvKy7R1n5Vf+Lxk3VXmqtO3T/2f6yMeR5v9F3a+04Py9VF9Sx
DLQlRo8aHn1uKD6VjQla3aGyrX6Cr3/72248SvEUtEaKNDYpb5SUT/NOPdXl
nV8PW1m+tdF+E3Ury3gUhBKTR9k1WZ+z6js9x5XsPtUx7oPJaV3j7OelksU/
U1++KPpDa0pMHmV5aftDKa/9vLe2v9t3J6txG6QGWN5oDpnaO2oHKf/8/FRS
G6koDzWn7h5lWEy+1rrD+rQUr19jhC///vekCZLm7t1+xx0uz1rLreWl4qLX
fkw1Yo+yscDxyrLiJ1yzbq2LSSenIrVP//qd77h9iq091q5Nceb8+bUcX8Wj
IJRoPCq/3/Tc0dh7u/aS1XlFjLOat/37ieWN7S843vND+5uIuo/vxeRRdm9d
s2rVhB6luX3++TAW+961vmw8h7I8tf0h61YeWonBo9SmV3+W+pzb5be1mzQv
jTR5aq0D/KT2qOInvfjiSyOZX9fyG7FHKabPRPWHnoeal6b+GP0kjU2WN+OV
ZRvfq+ue6XgUhBKbR6ltrP1JNXcEjwqnU4+KZZ4kHjWYdONRsewpl4pHqV01
c9YsUgdJeTWZR6kP0VHX8huDR+Xr0YrnWYcepTq632UkljReWfY9yupiWxto
30k/2xl4FIQSjUdlo9dkMWJb5/VZ+19xu/zzYSyWN4rXISdlXl/vsLxUfL52
HmUOq/0fRW3aIDXE8kZ99ZrXZ2t1Wp/h6vNnXl+5jDcXyuoOrSlXnu/avdvt
JU1qn4beeMPF62hXdv25UP68Pmtz7q9T/1bdPapNPtl1aa+Eicqy5qhqDz+5
bL/LS12T7nPN41Wc2XYu5Zflpj0p2n1PfSjTeBSEUkuP8u+j1n83UCzN1jgT
1od/0cKF7py6j5/0nTxv9Gz+qw9+yOWduajlpfqW1M8vavEcnICYPMqPM2Ht
Db8c21rnnU8/PfILNbv+umF11arVq4s1Jq31wvIVK0ZOjiAva+NRXt07nP//
sHcdqhuU19aP78f70ViV7YccQ573G+Wp5lC31gVyKz3nJm3b1SGP6+5RDXY1
6lztL6lUlM8GzzWuU3PSbJ6LX5Y1/8XmVNblc9SWvAycf8EFY8qyyrHyV2sB
RbEHaCNPf/fyy9lTv/1ttvPZZ1356Qd4FIRSS49qR8tzQrFgVe/pGa6k583F
F1/s+kXanQ9tyPNo67Zt2bxTTinyUknPDhvXiyEvY/IoR35NciW1ly3f9ZxR
/ET1FfjnwQR4fQKK2Wcx45Sfauerr7ntumavX79O7aPaeNR4eH6lcmrzrK0M
q7/Z+gCKfTdJ4yYre9oPUW05ixdt+8pbXWDnqZ35q1//Ovvxzzdl9255wLU9
a0EdPSq/Jo0laR+PL6282sVC0H5QV117bfYfTzxRnKf2s8VP9fefsDlolOXO
y7Ic9bOLFhd1gsXwV6zl4vxspM6+6c473fehuPL/1Ki/9f3Y3nN2Xi/AoyCU
unmU6jvVbdrP7boNG9xP9R0Ne+fYPry6V+UAqh/Vt1/HGDC1J8+rN/ftc31u
ml+i54b2I/TrxbpTa48aPtB2/rf9W9ep/lCX942yPlSX646NPJ81t0TPQu3R
XdQL3rPbzm2lLmW9Lh6l+vXun9/v6uHV69e7dnu7vmLbw1vtfbWb2fcsHOWd
6mF953q2ac6fX3ZVBtTulA/op9qc2vd0yyOPuNf7WoZr7FFqr9/+s59m//mb
37j6QNeo/Y6Uj/64lMqynn9q76svoDbPkAhRnmsepJ5rmuunerm1HOj/1Sfw
TMObVLY1LiWXUvz0d6y+61He41EQSm08Kr9XtC+p6rYf3vuT7Ge/+ne3r9ui
r3zF1X/FecMHxr2+urSFYmK8PBtzfPjAqM+2tkv7TK09agLGm39KOQ5gnDI5
Xh6rr0Deqvkket7XJc/76lFee13+dPUNN7h6WD6l9rp8yu+vGm99Q13yMiYm
rAu842prqt/LXtPePRpb6fs8yjp6VDuGR8dMLrr88uzRp55y/9/2/pqgrQHj
M94YfzGmNwHqF1d5dn25Ao+CmlMbj8pRHez3D+k65FJ6no+h3dgyhBGalzXJ
8zp6lDmn2uiaf6P+fPUbWxuouC7KcblMlJf5/6vtZHN8tO/JZcuWue+oDtRi
PKqRT1o37mIb5Hmmviz1aamvy62TOkD5LZ1u8jJ/TeVWZXlXv/c9rrtHteSp
8qvJow60yXvK8tToJC+911R2VCd/vw/z2vEoCKVuHmWo3rVr09iU+kKhf6jt
r35p9VGr/1NzSjSf31GDZ03tPCofu9PcHDdPYf367Lu3/cC11/Wc0BwHd1rv
rwwaaB6J5pNoHpVcQXWMHEFjU44+lulaeJSR98dbfIlFV17p6oG+XQ+MfCd5
f7/GptQPoPJrr/XzukRtPSrHruV/37exHuN4kG1+6CG3hkPPSj0nre3Xy+cj
HgWh1M6jWvsuhkfmLVyzdm1/rmfQ8fqi9bzWmIraUdrXXXWe+qz98/pF7Twq
R+31Yk5qNjI2pXzrR38bjMXKjb4X9embI+BR2Zi6WG1i9WfZ2vw67aE5MOTf
hephOYDGU9TurIWnROBRRUyPxnNLfVrKR/849AfVu+qb1dwjtfX60Z+FR0Eo
tfOoHPv7aofaXBIH7c6+oO+jmI+WjezX4z+H+v291NWjCrx59hrTk4cKnt99
xHMEPcfr0i9QG49quR71F6svxd/HCPqDYvRtffRRN6dP34nGVvpel9Tco+wa
3sznjql/tt/tHMjJy45iS6hfQP01Nk+1V2UHj4JQaulRXowdPSPU7rR7iXlQ
/cXvz1O70+JE9btNVVuP8tfc59ehOFHF+Cpt0Z5j34di62pcUG0qjUUVcUH7
/J3UyaPsb2p+qto2TfF+oL/k34HqYI1L2XfT79h4tfSo/NrUF6j7XfWvxZXs
+7UNMvnzUfWMtUXlT59ZvLgYk8KjoO7UzqPy+k51nNaUKL6Ei/3qvQb9QV5r
+xhaXPqib7rP1NajcmwOlPqR1R5Vu9RRg2sbNIqy0vAozSVR/6f6axSTrohF
10dq41FeTA6NPddhziOMYG1PoTpYHmV9Wv1+dtfOo7zrsnWq7JFSQ7z6Rusw
bV80PArqTq08yneom29yfUb92tsaRvHbnZqPpnmWcgH5lKMGz6Jae5QXS9rN
/24k1pbUBP/Z3SjXcinRz3ZfLTzKy5c6jTsPPG3GtzW/z98bhPGosdekGNra
51X5pLja6hPQnEjd78VaHOgZB7x+Rc0J0JpLlRXFm1B9ozmX7B8FsVArj8pG
5sdqnEP9w4qjY+ty1OfG+Ht/eSff+1hjUpqPrz5qfz/4flJbj/LW4Nj+mcSH
6j/FXBJvPon8VvWOvd4v+u1R9tnVvlSbxtZAqn9LqQ5jdoOG35elMqq2p9qc
qlPUp6Wf+3vc7hxDDT3K/q76A5asWOHmtyj/FKNDfYI6ZuOsrBnoHf7can0n
+j7se1HsyX7sRY9HQSh18Si7r9QPobmxaqOrzamfepbr34qp5aD92XvyON6W
9/q+NF5o8RL6/Z3U0qO8cSi1c/SMsFjx9AnUBO870nNc4+BiUD3KPrfiaWuu
mObXqO5VHaw2p9rsRaxJ6B2eo2gcxcWwbXi/+hwVv78Wbb4aehTEgdZuaM11
P/to8CgIpS4e5cfX1hiH4vNpvoIlHbN1odBfrGzIDdS+cuBR416X2p02vuou
p29XA45GedB4qvqhNa9EfdVqj9YljkJfx6O8trDW8Clv/DpYxzQmAv3HlYc6
9SnW3aPa7bFbp/wbVPzvoI/fCR4FodTGo6DWyAGcxw6P9lfLoeRSDjyqLVrT
rPFViztp+2PoOPFT+ofmjvhzSbR2oljv12f6Pa8P6o3vT25+ah0cRdTdo6C+
1MBp8SgIpW4eZc+F1kQ93Cfyuk0OYHuNa+6T+u5XrV9fmzGWunqUxj00HqUk
57SfascX+3HhUX1BdZ/W+u19/fV+X0oTtfCo4fb1MHVxjahbvYFHQcTgURBK
3TwK6smeRntT8/DV/leMI81/spjn/XYoUVePgppi6/28/69LOamFRwF0Cx4F
EYNHQSh4FARTo7ZnXT1K99F4CWpAjcqwgUdBlOBREDF4FISCR0FH2L4lebuz
+HdNqKtHAXQLHgVRgkdBxOBREAoeBSmAR0Eq4FEQJXgURAweBaHgUZACeBSk
Ah4FUYJHQcTgURAKHgUpgEdBKuBRECV4FEQMHgWh4FGQAngUpAIeBVGCR0HE
4FEQCh4FKYBHQSrgURAleBREDB4FoeBRkAJ4FKQCHgVRgkdBxOBREAoeBSmA
R0Eq4FEQJXgURAweBaHgUZACeBSkAh4FUYJHQcTgURAKHgUpgEdBKuBRECV4
FEQMHgWh4FGQAngUpAIeBVGCR0HE4FEQCh4FKYBHQSrgURAleBREDB4FoeBR
kAJ4FKQCHgVRgkdBxOBREAoeBSmAR0Eq4FEQJXgURAweBaHgUZACeBSkAh4F
UYJHQcTgURAKHgUpgEdBKuBRECV4FEQMHgWh4FGQAngUpAIeBVGCR0HE4FEQ
Ch4FKYBHQSrgURAleBREDB4FoeBRkAJ4FKQCHgVRgkdBxOBREAoeBSmAR0Eq
4FEQJXgURAweBaHgUZACeBSkAh4FUYJHQcTgURAKHgUpgEdBKuBRECV4FEQM
HgWh4FGQAngUpAIeBVGCR0HE4FEQCh4FKYBHQSrgURAleBREDB4FoeBRkAJ4
FKQCHgVRgkdBxOBREAoeBSmAR0Eq4FEQJXgURAweBaHgUZACeBSkAh4FUYJH
QcTgURAKHgUpgEdBKuBRECV4FEQMHgWh4FGQAngUpAIeBVGCR0HE4FEQCh4F
KYBHQSrgURAleBREDB4FoeBRkAJ4FKQCHgVRgkdBxOBREAoeBSmAR0Eq4FEQ
JXgURAweBaHgUZACeBSkAh4FUYJHQcTgURAKHgUpgEdBKuBRECV4FEQMHgWh
tHrUipUr3f//8e233WskUixJ7Hz6aVeO9Rzf+/rr7tne7+sikbpJ+956y5Vl
86gf5R6l4/2+NhJpoqT69g979xYepfrY2hkkUl3T/obn41EQisqQMI/61po1
7v8pQxATreNR8045hfEoiJLW8aj7Nm1qOg5QS/J6VvWu6l+V3ecYj4JIWLBg
gSuzv8CjoEtaPWrBhRdmd951V3bLhg3ZhltvJZGiSbffcUe2avVqV46PPf6E
bN369dmtt93W9+sikbpJqnvvvuee7PgTT8wOPuSQ7IolS6iTSVEk1beqdz9w
3HFFv6zq5X5fF4k0Ubq1kT42b97IeNTmza5NjEdBp7R61CGHHup+kkgxpoMO
OjibNn26a3/2+1pIpKmkQ6dNc6nf10EidZtU/6oeVn3c72shkTpJVtfiUdAt
rR6lfqR5DS/X/OaPkkgRJfUnzT3pJNcX8J4jjshOOvnkvl8TidRtUt2rOvi9
Rx7pnu1/9cEPUSeTokmqd1X/qh5Wfax6ud/XRCJNlmbNno1HQRCtHqV5UYIy
BDHB+ihIhdb1Ufdu3Nh0HKCWeOujbI4U8fogFs6/4AJXZlkfBd3S6lEW91zH
VfeRSDEkq/MsXp/6l14bGnLH9Fq/r49E6jRZndwa95w6mVTnZHWw6t0i7vkz
z1AHk2qfBPH6IJTxPIoyBDFhdSH7R0HssH8URAn7R0HE4FEQCh4FKYBHQSrg
URAleBREDB4FoeBRkAJ4FKQCHgVRgkdBxOBREErHHqU6cv87+oXu26U6/09/
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
3rMn+vipn3R2fNQHjnb+KA60FD8/eOyx0RtvvZV6jxgt0lGikkhHiQojHSXy
Ih3VBhsT9u+PPnbKKa5tmHcy37SfPHb3Pfe419W+vQpGOqozyR4mL7yQ0k+t
x+FHHBGNjz/SfJParRCkozKI6/twaE5eUqSjsvFsVzWqyot0lMiLdFQ21u+v
W7/e+Z5a5578TXt94bzzor+++27zTeofC0M6qjN+++BzaqejiO+TjioW6ag0
WXNw1ZYsIdJR0+C6W69dtltOpKNEXqSjsrG+71sXX+xioCzuyY+DYu3+1NNP
j/bu3dt8k/rGwpCO6kLcBntefz36xGmfcmsDvk37v5ML6L9HjBbpKI/YBt8+
cCD6zdatbo7z8st/Tj0nSoJ0VJq4PdjffPvTT0ebNm2Knnrmmam2kP2WCuko
kRfpqGysryMHqpOOOu2MM6SjSoB0VHfsnv7RqlVJnKrvZ+UxavaJYpGOamL3
9M8b1//ZsbHoI7NmOV8qcdZXXn2101YO3d/lQDoqwY+jnjd/fjRr9mw3Z5j1
0Y9GFy5cGL3y6qvNF8p2S4N0lMiLdFQb4v6NNdAsHXX0Mce49qJ+n71e+0kV
h3RUD3h1z22Ojl+K9QDsmfFdNSaKRzpq6lq5dstFJebU6vTzN/YqSoR0VJO4
HfCbUtPHt12ri/r5c85J+tpatU2JkY4SeZGO6kKjT2S89vtCW7tnfRR/Pai9
ikU6qjtmo9SfZF3/w8cf7/aRog46j4HG9OKpvY7y9uWzuQ32amtZ+FDpi/nJ
XtLJe0SxSEc1idvhe0uWpOpTWRwLa1asX92/caN7XW3u65IjHSXyIh3Vgbg/
pI4EcSS2byl7lo6dfXa0dds293ytxoiSIh3VBW9uyh5RtNHXLrjA/Z2q3a+2
Kpy66yg/Jor9JvCXtsYDWG1JjVclQjqqSdwO+JyyYlmsRhVzCv/1oliko0Re
pKN6IK5bSg10cqHIwyd3VJQH6ajO+HNT1kMZz20dgD5A93t5kI5q2ip7nZ9w
4onJftGtOoo5KvmrUJe2KTXSUU161FFJToAoBdJRIi/SUd3Jql1qj4tyIB3V
hbgNiOOzev1274tyUXcd5e/dNzZ3bhIb1aqjeEyxUSVCOqpJ3A4LFy1ybdAu
t3r1mjXudbLdciAdJfIiHdUHFvek+KfSIR3Vgfj6d+/Z49b3aZ+f121uXiFq
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
QtJR1sarbr7ZXcupp58ert16NoXPAr8b10yNd9OOfo2K4AhMR9n39PgTTzgf
I3lRtmd0Fa9HdEY6SuRFOkq0IxnzO8whGTN/8ch4tLIxv+e4ef366E+vvNJ8
coRzz6B1lJ1/4yexQlzf0mXL3EN2/4o2eHNb5u/EWfEzsesW2/jLG29EP3vg
36KVd9werVi7JvrxXXdGu/fsaX7UiE45RB1l12I+1JDt1r6nvXv3RhcuXOiu
m7qa1Hu3fVur+F12JTAdZddzVTw34ruESl5LWZl8Lx0nUCDSUSIv0lFiGu10
h/94/Pt//P730XW33hr98vF/j7b89rfR92+8Mbr02mtdPaPMGKkhEbKOsnvx
3vvuc9dGjQly9qHosafM+PqJvP+TTj45OuoDR7v2W7z4265eR/K6yanaa8tX
r3a2vPmJJ6Jrbrghumr5dck+q6MgFB1l57t+wwZ3HbS/5QuFbrd27Vwn+7Va
ztTnzzkn8WkEVxs9JB3l7Rn9oeOOc/uE2V7nQX1nIkE6SuRFOkr42PdOrakH
H37YxePYWJi1fs/4yGttrZ456z8tXep8VMl7RkCwOio+d+5T9tvl2tAEULm5
ySiJ2431f/PhkSf+/iOPdD/5e+zss53PAJL9VRs/XZ8Yv39i5063LoCm8j93
mAShozy7ZY9a324rdR0zwfOF8h2yb9Zhh73P6fhfeXO1mdzH/lp+4f1BQDrK
ztd8UcyxEx9qlceTEoHt/+7ZZ6P7H3k4uvuXD7o+ljxKRwFtLB0l8iIdJRLi
votYfuoSsXbPnPPoY45xebYWk5LVx9m4gx8KHcV6frvXDoNQdZRd17bt211s
EN+FxZmJ9li7keOPPdBu+ATQUfzk7061OuzvnS+95HTUUzt2NJ+QjuoJO1fW
8LHbj8yaVU+7nXwvGWPpm/BHmT2yRsVzuTVQh364EELRUfF1YK/4UKt6D5YW
8/0/9VR0xbJlLnb69nvvjS5ZssTFUidaasRIR4m8SEcJx+RUrSnsgDgGW7/n
mBYf7o3h9HvkRDHXXLVunesXR53/EKqOsnO3NX1yLETvUF+LdjMNZQd/4xug
XZM5XtzW1JLHnhnnr1+zJvope3SpzkTf0K7mQ/3O5Zc3H6zyvTgDEn9n4zv8
5kWLXZtwLFy0yOXk2XMJk53rShrM9el3Wdd3ealFtm8gOsrGru815vVWv972
Aqur/faFb7tdcqt3x/EAgA1f9N3vjnwN1pCOEnmRjhJg4xw1pphf+vNO+x3/
lMWI+/EoL+7aFS1Z+S+uD2Ttfsfzzzc/VHUmZkZ83uRTUPOL9id/B3R/9gZz
IPwhWTqKx/EPWFvanrDk/JEXhT2zXvpinIs2KjuqvI7ycktoZ2x3YmLCPVal
+fSg8bXU9StWuPuZ75fv2fIdea71e27nr2K+ie+f/FTLSyVPtTAC0FF+TuVp
Z5zhrmHd+vXuscrcfwUy7Xue7F6f0o9lob8dZQy1j3SUyIt0lDCwBeIYsuad
Fgd19z33uNf69sHvjJ3E/ZEXhX+etXyH4vpyY21sPpV2/kCRQdw+9Ge0HXNW
355tDotvoJWDsT3jJ8AXxfwUbeV/7jCpuo7KtFuv5mSt8eL8mK+xv5TV4Hho
fDx5GX0XdVDMV+W3m+WiEnOKXb4X5/RZbNSodf/UiVVfR5nt2p7RaCnni6q7
3faAfcfYIjoUX6lfbyULnuf1zB3oa394003OfopAOkrkRTpK2Bix5/XXXS40
Osqfc/rzTmrGQWIfGb576p+znu9/9rAJTUdZ+5IXRW4JuvbRLVtSz4n2mD1s
f/ppF59KnCptaIfFqo6PP5J6fWLPk1O+A9b6r/f2/xk2VdZRdo7sn4Td0s7j
mzennqs93ho9803LmaKt2M+APeLwo6Kt2HOb+hyd9tzyc/nwT9ka1si1S9V1
VHz+aFfzRVn+ZBXHkJESt8/PG30VsdLsuU0bsk5lMRR+G/o2i3ayWJYi9kwx
pKNEXqSjhCPutxj/0FH++r0/9+w0l7fHWBdlPPc/d9iEqqOWLV/urucL552X
elz0QPy9My/FnolXxbY50FXW17WL47c4PzQUYz1IR3XGztFyS5hT+Y+LKcyW
qKnPfNNsk3bDVrFR+5t462m+Kc9u8VGx7xnx1baeP6r9zhIC0VGWI/zxUz+Z
6Q8ULcRtQ/yj1ff3bXf2CSek8gH89+zbvz/J72PvSfpZWzNQXJ+oCtJRwhH3
WbbXC/0gc0+rc2a1X1vjc4hppi9srW/mcvO91w2boHRUfL7E9eAf5HruH3F7
BoOXY0YNY/L6Wd9/PCsGv/E7YzjzQLMnxnhipR7Y8miqjvUwqaqOsrahVjxz
J+ZR5r+uxDy6APx8KFszoc+l77X1K4upZox2eHZIXB91fdjjjBiAouag/v+s
tI5qHOyHwLmTwwaVOPeCIfaRev7of5szWG6krae01vNJ8PaowI6pVQWjbnfp
KJEX6SjhQ24IsSXUPbeaUvihqLuVyhWP+z7WkNBN/Lx+9Wo35+T3pEb6iAhR
RzGOWx56UbVgK0+nmlGtzzV+Zw9efKnYMPn72DP+1VG2f1V1lLXlipUrm/tz
zZ1bvXuvAGwMtn22mYdm1UTBJ2X461b4obBR1vLZi+dgUXZSYR1l9xbrVbQ1
eWtVOfcisbah3Vpzqs12iatmPTC1/7RBjCv5ffFj9LuWEyAdJaqCdJRIEc8t
WVPevHmzyx/5zdatbffHQy/hk6e+BGv2jOujrnkOQemoqFlL/tTTT8/OSRP9
E6/hJ3Um29gEcTzkl2DP1D4jZ3/U7V5ZHRU17ZZ4KM6bfbxB89AuxLb4z9de
m1kThYO5Pf1Bp/djtxddeWWzZt+IfKdZ51E5HeW1Ffsk+ntGFzGWVQnrk8gj
8/dJadVRHz7++Gj79u2p97Tua0zfiz8K/6r/+KiQjhJ5kY4SKdrVKe1nXO6y
b8QwCEVHWdubL4o1aNu/tNRzkRDJyEMZBVXUUWabZrfUR6Bujf+cyMb3hWT5
o0xH+f4oR9xXH/RiA1nLt7iokdtLRXWUtRO5v8SzE4tBnRQo83mXAWsf4qSx
21YthY6iTfFHte59gO8J/z9rVvhU0VDk9yX7dUtHiYogHSWysLX7JH6/Q2yU
v+deUTW5g9BRXo04m0MTIwVaFx0RWfY8Yiqnozy7Za7POVPbA2S33bHvlbgn
1u2tzo/lmFit1NVxzch2+SXoF2JSLTf1kPxR3fHWSsidtL2RobTnXEKwYWr0
2Z7nrbl9tr+EPz8gtw9bRfejqYhnSfIBVK9PVAjpKBECIegoixFnjy6ugRj9
otbmRHFUTUeZ3VqNGuLP5IvqD2sntJLV9SFnn8Nq/Pg5euT1kxPF3JN9zx9/
8kmXz8c+poXVjq6wjsJXgl7Fd2K+KPW5PRK3E/481gHwSfm2i2/6D2W3g0g6
SuRHOkqEQOV1lFcH1upFkS8BZR57xOCplI7y7NbOl7pzUMrzLTPefJT1e/Y6
+PL550c/WrVqWl4ffxMLxd5mHMRD3XLnnVMaqsDzr6KOMl8U+VGttblFF7z6
stTpRIuy/xm1qcgza1c7Hpvwa/h1jHsZAdJRIi/SUSIEqq6j7PyZQ3H+7GFq
a/pVOH8xOKqko+ycftWYe3Cu5EGwH5LIQbfakhkwfjNPffvAgSGeWI9UTUdl
7C+hPaNzELcjc0erL4u/NPV8pzGsJOObdJTIi3SUCIGq6yg7R9agiYe4ytsr
RtSLKuko4N7Db+LXOZPdzoDJdG5qOw2SykUtMDc1oWI6yuY+V8VzH/reQ15u
pOidrPqytG/hNtkH0lEiL9JRIgSqrKPs3KkvT24E9aIy99oQtaAyOmpyqlYX
sTzkRrBfApRx3hwsZZn3V0hH2b1EXhT7x1Lbg7xU/znRHWurn9xxR+XrdEpH
ibxIR4kQqLKOsnvtWxdf7M79kksvTT0u6kVVdJSdz4ULF7rzvPyKK9zfVZs/
iQFRQR3FvkecJ+cLZTvPUjM55bsjH8rPjaxinU7pKJEX6SgRAlXVUXafbd22
LfrQcce5OrHkSPnPiXpRBR1l54Iv6oPHHutqnWn+UXOqoqPi89y7d2+yZ/SG
u+5KPSe6Y/c5/ROx6OSY7XzhBfdYqb7vHpGOEnmRjhIhUFUdZef9vSVL3HmT
ZwK6/+pLFXSUjRvkQ1mdM/9xUUMqpqPWrV+fxKIltVFKPFaUiridJhsHtSX9
OIpSfdd9IB0l8iIdJUKgijrKzpm9NWz/zQcffrj5ZEnPWQyfsusos1ty+Kgr
yX4x4+OPpJ4TNaRiOmps7lx3jsT2QVnuryrgj7f4ojksp7eqY5d0lMiLdJQI
gSrqKDsvW9P//DnnTNWLLes5i6FTdh1ltmljBnY7WfApiRJQAR1l95DtGU1c
X9nOsRLE3zU5kS6O4qtfK0//lBPpKJEX6SgRApXUUQ3Y9+Wkk09252y+KN17
9ab0OqoBexax56a/547moTWn7DrKq2v4xS99KbXXueJR+4fxNdl3K/ZHl6mP
6hfpKJEX6SgRAlXTUXZ//WDpUne+nx0bS/Z9L8WcQxRGmXWUnQN1uTi3sbPP
jt7ct6/5ZAnvMzFCSq6jzHZZr+LcWAeocl2Eomgdu+in9u3f33yywn2AdJTI
i3SUCIHK6KjGuRyM7y10EznOfoz+Qd13tae0OsrmyY050xlnntmsc7Zhg3us
8HMTxVNmHRWfG/Mdmy9XvS5CIcTtyNj6t/F3vHrNGvdY1ccu6SiRF+koEQJV
0FGcI/dVa4z+aWec0XysJOcpiqWsOsrGCqtzxj2WzJ1ku6ICOopaCO8/8khX
G+UP8bnJdnvH+qD7N25Mxq5Q/NHSUSIvpdZRjfuS/tc/hMii9DrKWw+dmJiI
fv3YY8l63o9WrXLPyb4FlFJHxfbLnIlYPn/PzVKMFaJ4Sqyj7P9/7YIL3Hkt
WrRoalwow/hQBbwxjP05/Pyyor/fQSAdJfJSVh116L33Mvu399o8LupNmXWU
nRv761Lb7MSTTnL1oqlzToy+5UUJAWXUUfa/N23a5M7pY6ecMrXnjhBQUh1l
//upZ55x+0vgi2IdC4qe51SK+Pvdtn27G7vYf5vx1n+uykhHibyUUkd5cfis
3W9/+mnXB77y6qvu8RDWPsRgKauOsvNiLsy4w7kxBjGWH3nUUdHhRxwRXb9i
Req1ot6UUUcBMXysA3BOjBeOAOZPYkCUVEfZfZPU6I73OteabD7Mp7d48eKi
T2WgSEeJvJRNR1l/Sx2dc+fPd/NNzouDGpvklGi+KVoppY7y6uyeO2+eO6+j
jznG6Sc7bG2f+ueFnqsoDWXTUf5aAGsArOmrzpmYRgl1lN0z5EUxf2DdSvtL
5GByal42a/Zs992G5tOTjhJ5KZWOslowjTmlzTttr2wO+kDfJ685pzDKqKPs
Hnr8iSeSeBK0E3nO/sFjd99zT+o9or6USkdRXzIeI1r33JGtihRl01Ge7a66
+WZ3Pl8477zizqfCWD0Z2zOefXeTNgxkHiYdJfJSJh1l/xM7trV7f76Jljrs
sPclfaEQRpl1FLr/Q8cd53RUq4ay2lE/ueOO1HtEfSmFjornoEmfvHmz64+J
TWVdYOTnI8pPiXSUXxd17969zufP+dh6VShz/1Fg390fd+2KTj399OZ+B3fd
5R4LqQ+QjhJ5KZOOsvt1zdq1iS+qdc5JXMnHT/3kyM9NlJsy6qjknBpziZNO
PtnZrm/T+KHQUMxNqUEB6rtF4TrKu18OvPOOqyfxrYsvdudy4cKFoz0XUR3K
oKO8WOq/vvuu01Dmi2JMCGG/2FFj97rtdzDnrLOaTwTWhtJRIi+F6KjJ7Frm
rfvqtNNRrC0J4VO0jkrZ8+R0m/7O5ZcnNs26Pge/8xgxrKM6T1F+itRRdh+9
/PKfXW3osblz3bqV2St5Jg7ZqmilaB3l6afvLVni6vPjP7F8nvXaM7p/vJpf
9AUh79MhHSXyMnIdlTX+xo/Z/3xofDwzro/1e+L6qD8hhE+hOqqDTfvjEPGo
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
5JO4OhN79iSvCQLpKFFhpKNEXqSjRAhIR4lQkI4KE38t/5obbnC1fhyh9E/S
UfWhdZ/pAJCOEnmRjhIhIB0lQkE6SlQS6ShRYaSjRF6ko0QISEeJUJCOCpxA
8vimIR0lKox0lMiLdJQIAekoEQrSUaKSSEeJCiMdJfIiHSVCQDpKhIJ0lKgk
0lGiwkhHibxIR4kQkI4SoSAdJSqJdJSoMNJRIi/SUSIEpKNEKEhHiUoiHSUq
jHSUyIt0lAgB6SgRCtJRopJIR4kKIx0l8iIdJUJAOkqEgnSUqCTSUaLCSEeJ
vEhHiRCQjhKhIB0lKol0lKgw0lEiL9JRIgSko0QoSEeJSiIdJSqMdJTIi3SU
CAHpKBEK0lGikkhHiQojHSXyIh0lQkA6SoSCdJSoJNJRosJIR4m8SEeJEJCO
EqEgHSUqiXSUqDDSUSIv7XTUX99919mRDh1VOMyOd77wgrNjxvE33nqraeMl
OD8dOno96HuhVUepT9ZR5sP6YPpd01H0xzbPKPr8dOhod6DzpaNEXlp11IqV
K93fsiFRJVr9UWNz58ofJSqJ9b2mox58+OHU40KUkrifpd/97NiYs90/yB8l
KsLXLrjA2eyvpKNEn7TqqMWLvx39+rHHogc2bYoeGh/XoaMSB3PNR7dsidat
X+/s+NTTT4/u37gxGt+8ufBz06Gjn4O+9/EnnojOnDMnOuyw90U/WLpUfbKO
Shz0t/S7p51xhuuH6Y/pl+mfiz43HTraHePjjyTrVps3S0eJ/mjVUUcedZT7
qUNHFQ/mne8/8sjoiPe/P3rf4YcXfj46dOQ9sGFsWXaso0oHfbDZLr8XfT46
dPRyHPWBo93PzZs3uzmxdJTolVYd9fFTPxmNnX12NDY2pkNHtY65c6M5Z50V
HX7EEdGHjjvOxZbwWOHnpUNHnwdrox8+/ng3H8W3qj5ZRyWORn9LjR/6X/ph
+mP1wTpKfzRsdPYJJ0hHiVy06qgfrVrl/pYNiSqh/CgRCq35UcSd+I8LUUq8
/Cj6X2xX+VGiKixYsMDZrPKjRL+oXp+OEI5O9fqKPjcdOvo5VK9PRxUP6qKC
6vXpqNqhen1iJmj/KBEC2j9KhIL1vdo/SlQK7R8lKox0lMhLPzqKvtA9nmde
ynt6fV/jdfwv1/dqDix6oB8dZXace2zvx5YH8T5RK/rWUdjUf/7nzGyrl/ea
/WYdQvSro2ZqtzN5n+xWtCAdJfIyCn9Ur3NWXmfnkzA5A+0masMo/FHJOkIO
ZMOiV0bqj2Iey9GNThpKdi1gVP4o32b7sT1ey/xC9ioykI4Seemqo+I+58A7
70Tbt2+Ptm7bFr25b19vHz45Ne/M1Eht2Ld/f/THXbuil1/+s/u/qfMRIoN+
dBSv+c3WrUkOdC8kOqhxkKfS17wgfh/23/d7Re3oV0cd+uMfond/+5vovddf
7/2fmC9AiEHRj45ibrBzZ9Nu33yz9/+Rx3+VofXf29+Yw8RzCyFAOkrkpZuO
sp/PPvdc9MFjj3WvYU896GU+yGvYQ/JbF18czZs/P5kTpN4b93HotBUrV7r5
AzUoTzr55OiLX/pS9JM77kj0lNaSRBY96aj4p/WX37xocW8fHr+POQH2ee68
edH3lizpaV3Azmtbw7bZLx3bRsOB+mmRRb866rULvx4923jdvh+vbj7QRx95
cMdz0f/5X99zn/HXX2+Z/v5Ya719z93R7n/4arTnov/pXstP/3dpMtGTjjLb
aoznr/z9/GhH4zXYVuq5Lp/PusEbS3/g7PHA//eLzu/1NBS67c1/WeHs9eVP
z8l1v4hwkY4Seemmo6z/m5iYiE448US3V5nZWVsdFfdLO196KVq4aJHbA8X2
Ovvna69Nfb6v0z4ya5Z7Dfv3oaFMt3Ggw/zPFsKnHx2FTfKa71x+eU+fjQ/p
lttuc/Zv9njGmWd2jRu0c6J+ldUB5rh/40b3uPppkUW/Oop54USvOip+Dt8V
+unFY49x703e7/upvDkoc1bmvDvj1054v/MZ0lGiLx3VmHfs/tL/cDbUkxaC
hvZCB/3hhP+W2ODey/6f9u81W3/zTfe6F4//iHvPC//1v0QvHvU3zt6Vgy0M
6SiRl350FD4iNM54vE9Zlo6yx4iZOvGkk5p7+YyNuf192dv8+hUrMj9/T2Nc
v3DhwmjZ8uVu3snzbx84EC1evNjt58d78Uv57xXC6EdHYWe85pJLL+38ofHr
eR2vx56Z277v8MOb+1M17DP1+W3OibUD3v+xU05R/TXRlaHpKJtX7t8X/fnz
Z7v34BNgbZ757L47bk+/v+X16CXisLIOzUVFHh010U1HebaI7xMtj71it7wX
v1Tmez0flNn6nz71SXeP/Oef/9y8l6T9hYd0lMjLoHWUn0+FD2nVzTe7+Sax
UHx+q45qh302OVJnzpmT8h/IvkUrw9RRG+66y73nL2+84bQ87/3s2FhHHWXn
Q5+M7uL1qmMtemHYOgqYfzrdFM9PJ3wd1ZLDz7zzjx//mJuPTs7w2kTADENH
eWDfppv42VZHeX4o01DOb0VugOqiiDZIR4m8DFxHedh+ktSNsDlBJx1le6Id
jGtS8PnMhU2DXX7FFW3fK+rNUHSU99nYMnNI1gW66ihvLYH4P17PPUN+oHSU
6MZQ4/oM7zXE7HXSUeRQ4YtCbyWP8xqrfaZ5qYAh6ygfYlK76ShiAHlNym79
18gfJTyko0Rehqmj7Hnq+33+nHNy+aOw6Q8ff7xb039g06ae/q+oH8PUUWD2
2lVHTb6XnAv+WF//W46UdJToxMh0VDyPbOuPin8St8fzzEun1TmTjhLGKHRU
bJMpHeXboJf/hw8V/e/qWDb+H+sBB5952tWpiKxGkGxXxEhHibyMQkfhj+qq
oyan5sHMG8bHH0nl9lt9CvV7Iouh6ihPG3XTUWbX6zdscK+bc9ZZ0d69e91j
0lGiF0bqj+ohro96ai6/5IzTk9wU4qRcfb88+/iIMBm2jvL0Ult/VPzz//78
/iSeD/vFdqkv4eqiHP8Rd8+gq3r6v6IWSEeJvAxTRyX9ag86yj6LHCheh//J
avehp5LPU58nMhi2P8re20lH2Tm88uqr7l6htiV1KI2xs8+WjhJdGXVcXzcd
ZTXSyDUhV5/56I647hnvTfb/Ud9cb0bhj8rSURn+KPQTz7v6KA3dROwq9wfv
w09l6wLON9Xr/xZBIx0l8lIWHWWvXbd+ffTl8893Nk2dP2qmf+i445w/qtd9
fEX9KIOOcr82DvY88+8llyfYeE2rP0r2LLIojT8qxt1b77zjfrrj9dedtrI6
0m7/KCGK0lH+exs/6YOx6Z2x1n/7pz9t1kdp2DXnQd0U/KqpuunKlao90lEi
L6XRUW3ejy/K9pVq3XtKCKNoHdWaP+X2O2v5v6rXJ3qhNP6oLu9lfspclRwU
6kv3/L9FmJTIH+XXRZ+0x72cQO6VnbFPCl3V8/8XwSIdJfJSNh3FZyZ1++Jz
W7FypXsve/MyT+7pf4taUaSOMlu2e8T26aU+Hz4o5sMcVi+FOv4cP1q1KvV+
IaBs/qhpxM8z/yTOj/komqrn/y3CpET+KD6b2FNyo+z/+a9D9+NPJV5VawAC
pKNEXkqlo1r6MTs39u8hvu/oY45J/rdsXPjMWEf1kuMcddZRv9m61e03zX69
s2bPjj547LEuJtUO8qWwY/QUn3Hl1Ve79ym+T/hUxR/lx0f1/F4RLiXyR6Xu
Cb/Gefy81fJP6SjZbq2RjhJ5KZWOijGflJ0bOVOHH3GEm38+/sQTXd8v6kfR
cX3AvmfMG7hXdr7wQurgcZtbrFm7Ntr92muuHkXq/ISISuqPsrlofLDmz/yT
eSg5KNRG7/l/izApiT+KA1tO9o7y6/jHcwqr58c6gKuL3uv/F8EiHSXykkdH
mZ0NREfFr3njrbeiPX5/Fj9Ojv6CBQvce5lXtL5PCMijo6gNaUx2+wc91pno
hOr1iV7IraNMBw3aH9Xm88jRJ3aK+XDX+0eET4n8UfhKTeO7+vz+5zd+2t7T
Sf6UfFG1RzpK5KUfHcVeTsQmnTtvnqupR10yO/j7C+edl/YXeTqK9/D55Dr5
n2+vuarx/4mF4jwe3bIleuqZZ6J777vPzVd5H/FQ7MmTeq8QMf3oqIWLFkWH
HfY+l8OUZcfkNf1g6dLM91L3hM9HE2XpqKSmmXccei+7zoTi+UQWeXQUOUq2
rxN/89MO/mb93dFiz2C1zVI6LH4ePxNr9sw3+Z19TJn3Wh4/OSY81vqZoobk
0FHYHZqmnd0eePih9Pu6+aP88/jx6sRG+Z1YPmzY1g2oMaGa/cKQjhJ56aaj
7Cf74JDvwWuYg/LTP2y/J2KW7HOt78TXZHrI5qetNoqOss9o/fxPnPap6O57
7mm+UP2dyKAfHWV1ybPs2B5j/1z/c+29VvMEDTbt87vAe5J5sVfjTwiffnUU
81D8QswNW3/a70lt8ox9c5nPPuvHBfKa+Hnmsazr2+fYwfyXvXmYl062fJ6o
Kf3oqHfecVq8m92ilxwtdSJ4/Fl73vdH+f+j8R5sGvtt/XxsV/vwCh/pKJGX
bjoqGU8b/R559L9+7DHnc8o6eG5PRqwxn4V/6VcN+/zjrl3p573P5zX4nKhv
zoHmemh8PNq9Z497jWr0iXb0pKNi8K3i8+xkx8n+uS3vffnlPzs73v700333
s7yH3MK9e/dmfrYQ0K+OIk+J2CUOdE3Wz077jTKf5DVZ9Z9dHlTjvfigmJPa
wedqLV+k6EVHea/Fj2k22s5uM2uSswaFTTY0fmLXbc7H7Bd/LHueYbvOx9WY
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
rzef7PGets+g1gQ5UzZHPbfRbytnasBIR6Wwa2YvCfxQxFBfce33o/93w0+d
dkI32YGeWnH7WvfcRZddlsqZUg3/0SAdJfIiHZXGrpu+y+ryUXMCqEnaqpN4
zJ93ci/u3bvXPVfHsaMopKO6w1wSXxTtYzkm2DHzScZtfFK2fxT7QjL281ri
TexxxfkNH+moJnZPW1wevlPoV8/zOdZ2d99zTypnyuqqyK4HgHRUCrM58qhp
i09/7nMulq9VQ/laigMtRd6U5UwxByEeBhTvMjyko0RepKOysdo6ixcvbj6Q
McYm/VnjuVU33+z6O5t3mvbSGtJokI5qj93L2Cgx+sxx/vLGG+4xa7eFixa5
dmPMN1hLsNhV8qf8/H6N5cNDOmpqXEI7WW6++UVz2Z4X50ffbPN81gpMn6k2
+gyRjkowWyMvijUq/KDUk8jyRU3TU2uaWuq6W2912suPR7V2rFt7jgLpKJEX
6SiPyanaUIyv9F2mh9r2W974zJq97QPJmqdfd0f93nCRjsrG2oUcEVvXt7VN
7n17nnx800u2jwnQnhbbz1yA2tO2V2Qt+4gRUHsdFd+vb+7bl7QB+0DBTNvA
7H33nj3J2gH9/CWXXpqsLSh+NSfSUQlmp8uWL0/iqKkn4eL3OmgoX0tZztQX
GvN7+l7WwOiL/7hrl/ts2elgkY4SeZGOmsL6evNFkXN/sJfaTp6WYs30y+ef
n9RBI/fEnqvbWDJKpKOyOejFM9EuZ5x5ZnNfUpicimWiH6AOJa/BZu0x4PU8
hj3bfWG5JbLpwVN3HWXXOb55s7v+WbM/mmicgX1+bPuMd5YzRXtbbXTZdQ6k
o5rE7cBcwGr1k/NETN+KHnWUaSl+upypK69s3AezXZtSc2V8/BH3PxSPOjik
o0RepKNivL7Pckj6nb/Y68jfv6rRnjbv5P5MzTvV7w0c6agMJqdy7M2nZOv6
/rzG+gD227G8EfxX4MelEv9k9f7RY9u1Z+RQqLuOAq7VbJaxyTFIG/Ni+Ghf
q/lP3/+reB6lvrpPpKOaTKbroxCj4jTR7b3pp/TRrOd3y513upwpq1tJzQpy
WEFx1oNBOkrkRTqqibUD80xXz2nevNS6Zc94vinmpZYzxbzT6u64/6XxeaBI
R2UQX/dD4+PJvlCWY5Jqk/h34vXGxsamxf5NRul4f+qmWQwgfq4oUuzqIKm1
jpqcqnFm+5oRZw2Dtq9J7zOJ3x6bO9e199HHHONyCU1H1aLdB4F0VAJrV9Ta
ow0uvOwyp4O65UV1800RF/jDm26Kxv7u75K6VuRMWXyB4vxmhnSUyIt01FQf
z3hte+us37DBPZanHfz6UMwH0FBWd8c+V2tIg0U6qj22rk9ukyOjPfxaFLz2
8+ecM639/P14LAaQmCh/LJdNz5w66yi7Rstd+s7llzef6Hc9K8f/xK4tppsx
gJorqr3aB9JRiS2ZL4qae2gfcp16zY3qljNFfOB/X/B1p/etr7a1hjr0EcNC
OkrkRTpqqo/HT2719hwzGbe9dUzm9uzDYzlTtLXNUQ/VZHwZNtJRaaw9iFFi
T13G3G1+HF4b3j5wIIlr3bRp07TX2+fiuyJnir0BeC05gZbDoji/mVFXHWXX
R80T1pyIXfr1Y4+lnhsW/jyf/altjoqPij4lOQfZdXvqrqO86/9s7Ne/YOHC
6LZ7ftbQQKtnpKFaa6Pj3yLnyuKs6bP9faZq0d4DRjpK5KX2Osr6vv37XV4I
bWB19gYxZvp+J9qWdU6ru2Pjs+L8Zo50VBq7r20vaVvX73hfx+2Ef4n34HPK
fH28RkCb+/vx4HdlDpz8/xq2+yCou44y+8N2/ceHjrf2xVzK9u9hjvrgww8n
56I5ahtqrqPMdtgfwmr24osahH5qVxv9imXLkhrBFo9qvts6tPkgkY4Seam7
jrK+Zk2jbzJfVFIbakDzQD/O79777kvq7rA3j+1vqrXOmSEdNYUfU8q6PuOr
7Tfa6b62NpzYudP5AojZ2/70080nW9vQm3NS48zPmeJess/TWN4/ddRRvi2x
3w5+zgdif+hIbciza2oD2XfAPbS0MWe1flp2nUGddZS3Hmt5dtQrd/tFzTCe
r2PO1Lp10fLVq6O58+Ylda2IiWXPAAi+3QeIdJTIS911lPV/xBhz/VYDZ+DX
7429rNn/rbcPpOVMaXzOj3RUjJdHgg/K/ErQ1aa9drI8EX62fW9rvf+vfi3J
LbHa6SCb7o866iizPavzQ39cJH7OFHuxE0Ng90MqF7BOfUs3pKPcepWtJ33/
xhvjPaCGo6NSOVPr/7fLmWL9y+JRWQ8DrdH2hnSUyEuddZRdo+2tQ03RnS+9
5B4bVr9v/5M5/oIFC5Jcfea8Nj7Xoe0HjXRUE79mCmvorOubz7OXdjDbwxeA
HiI2ZWJiIvXZmf+z8dnkVlHLwnKm0G9WH1C1pHqnljoqaq7lW/3xVO3xgjB/
Knuwsb7GmpftM2X3hOJXPWqso+z6iNdHc5/75a84X9GwfFGtOVP8dPtMXXZZ
EmdNPOoDXo5r6N/BTJGOEnmprY7y1u1t39zW/UeHhb+OyX7n1AFwcQCNPtjm
ncG3/4CRjoppWdenfn9f9uzdF/Pmz0/V+ev0OX7sKvkBFrtK7d9UrYA6fRc5
qZuOsnsXO7N7d9Cx1Xlprb1q+/eg94jRttcUfZ6loKY6yq5tc1zTh1hq9nrC
RzSTWuf9HWuS2ujX3HBDkuvNGi21Ax2Kd+mIdJTIS111lJ9PbH5484OPYky0
sZc9TBiPbR2WnCmru6P8kt6RjoqS66RWs9XceyCj5l43/P3PbB9J0/cd7dGL
82sXuyqb7k6tdFRss+RzWL682UppfJieXePntRhw/K42XmqOGtVWR5ltUCff
xaTOnx/vFzWYGn156k9cd+ut03Kmdr/2mjtP6f5spKNEXmqpo+I+hGu3fXDo
A/3nRoU/PtvYg6ZzdXci+eN7RTpqypao22z+zYN2H+doA+4P2/vM1t576Rfs
Nbv37EnqBTKeU4dtn9X7D7l/mSF10lE2/tieE9QrIScJytbv2fyT88OWbS/U
RY05qp1zabRfEdRQR2XV6r9kyZIR+6La5EytWxf9w+LFSQ1/amjZ3heKR52O
dJTIS511FDHu+OFZV7R97Ebet3hrneSXsM8U4zPHJZde6vbpgaC/jwFQdx1l
1898jvHSr5mSa24Xt9mPVq1K2tPy93rBj+GjT7HYVbSB1fsPdW41U+qio+z7
x39q++2wBgBlvVZ/Xesnd9zh5s6cN7rBalvWNn61hjqqda+IT3/uc00NNYK8
qG45Uxz4pi655pok3oU1WuKuQX6pNNJRIi911FF2bRfEa+WsmSf9fEH9il9/
ws+ZIr+F+rugfq89dddRdh+z95mtPaLLHTmu39rzj7t2uTEYXW95Tj1/npdr
RS0XG8vZl8cfq4KdY+WkLjrKr2liuXTJPVtmvBi+8c2bk3hEcgJrnddfNx0V
Xy/jM7X68bmjWfADDbNGX7++KWIMyZmy2AKLR9UabRrpKJGXuukov/a47VOy
uTEWQuHX7PmmHhofT3JcmF+Me+cY5Jg0Q2qtoyanfFG2d4nVhpiJrdh7v7dk
SRInCP3eJ/Z61uvN70DO1C233Zb8n0Oy6YS66CjgmrArrpPaKI6K3K/2faAV
rE4b61/cezauhvidtaWmOsp8UegU54e6vXj91KqlXO3ANatd7pblTH3tggui
Pa+/7q6hVnbaBukokZe66Si7Lrte9rzxHy8cT0tR98LmncQ4u5gX7VWeiXRU
s14J107dW8vXmAl+nTJ0DzFMqX2jc3wW9QTIebbYVfIS31bOVIpa6KjJqRpn
2AG+nCrGe9p3wk/qvdoclbzbVF5/Haibjoqasfi23nnRlVfG9SXK4Ytq1VLo
O2IOicNhDdm031PPPOOupbbxqDHSUSIvddJRtuZNXhRzTca8ZI5Spn7e01Ks
F9meqFYPw2oCl+qcC0Y6KpqWYzKIuYvZodWLsL0B8vQPdj70OZyj7RlJ/bNn
n3tu6jWhf19dqIOOsmuxuQs+T//xKuHfZ+Qk+nNUy+uvxRy1RjrK6vcsXbYs
iRmhRl7TF1U+HdU8mjlTaD1qYZj+w16tjlCd12ilo0Re6qSjrH8gnshyjxwl
Hd/8GtHU70vtVR7vA1mL8bkH6qqj7LoffPhhF1PEmJhaXxzQ55P3QQwsOU5W
kyXXeOutERCr6udMWf5z3WNXQ9dR/vdPn4af0/Z6qOw1enZNHqGfM0VuIARv
1zXRUXYt7AVh3zM+nqJqnefxTd28fn30w5tuis74zGfc+TN2XNWYA9YyHjVG
OkrkpTY6ytunhLUjf5+SMs+z/X0gmU/ZGlLrXuVlvoZRUFcdZbZBfCrXTay+
//ggGYv9XVaTP/fcqGU/HtML7Bmp/XgC11He92p+dn5C5WuGe3bNHJvYPnKm
WH/A32bXF6xd10RHte6vxxpQGfOiumkpq41+zhe/6PpergUtQf1M/zrrgnSU
yEtddJTv17F6ZhYfV/p5tjf3IP7p3PnzkzUk6lJbjEFo31k/1FFH2ff96JYt
bhykpm0qPm5QxO1n8wY0/L79+2f8sX7s6uLF305iV/ndxvI6xvmFrKPsGvCZ
knNHH2Y5d6HMte066H/QT+goy8X9g68rQrPrOugobz3W9hn/yje+UYpa531r
qfh8Ofd//Pa3khr+fs5UkHbaBukokZe66CjTIra3zppG/wFVuk6/Njp7S5Gf
zRhN3R2rK1BX31TtdJR3TeTMWf1+GLRNW9uSN2++XOqr+8/N5LNtrG6NXTVN
WLc9I0PWUcZ3Lr88VQMyODzfFLknrHFwvcSBse4BwfXVNdJR3JNcH3HJxMfh
2ylvXlSnY2qfqSuu/b7zrVmtIvZHg+DjUWOko0Re6qCj7FrIAbacUPbFgar1
D605U5bTzLhl886QvrteqZuOsuslLo41ffSHrSEO43rNpmxfXub4/nnMBD92
lTyZj51ySjKWm4ao07posDpqckqPs/ZNzJvlRVWtH+4V+86oN3HmnDlJzX+b
o/r9eeWpkY6aF8eEfKEx966iL2qab2pNU0tRK4PvzuqpUlfIbDiY77AN0lEi
L8HrqMmpGAvqgvn7lFT2Gr04P9Y2/XlnXevu1E1H2TVhyy5m6Pzzh2rPfvsS
15eqdTmI/zs5tYcU9f5tTyH8rdevWFGr/OdQdZSdv9ks3/GBd95pPhniPQqe
X4qYPmIHuHbmqOT17xt0zX/b+3qygHWHwHWUfUfU9KFfYg3zquXXNXVUCWud
59FSzX2m1kTzv3J+kjPF2LJ7z56pNgj0XpWOEnkJXUf5taHMDz+I3I4ykOwD
2ZjbUnuQ68Mv4e9nGcL41Qu10lHx9bz88p+j2bNnu+tlbIdh3rf22bbvpNUH
GKSvyMZpPtP+D5ptwYIF6bE8YELUUXZ/YrMWO2RrPlW+rl6xe4Txln16bZ8p
tKTlTM04fjXjvSPt/2uio0wLU5+hKjX6etZScb0M6vldeNllSc4U8ajmOw41
zlo6SuQlaB0V3+t/fffdpDaD1TMLpR+w74l1XXKmiPGyXJlUzlTg1ElHte4l
zVwsqXU2xGu1NiZGiX2h0eyp/XEG+H/8WFwby5mb+fX+Jwf2H8tFiDrK7NNi
q7m25PsL7P5sR2vtVeIHaAviCaiVDodmuCaBhiFukjUHxj0Y2X0SsI7ya9oz
xtL/kU8Uii+qVUtxTWhEP2eKeFRqDUGIcdbSUSIvddBRzPWIo2A+xjwbqt6v
+/h9GnuV0MfbvDOVfxBYv+dTFx3lr+vb3iVWM+XgCO9Zyw+wfXkHjudLZVw7
9fTTM3OmQrqPjdB0lH1H1GC0+TV7+EFVryk3nl0zLlFPhfagz3Y5U3Ff1a9d
o78e2PKoizOj7sEVy5a5ufCfXnkl+b9DJ1QdlVHTZ+zss2NfVFgaKqWn4pyp
JSv/Jfr05z7n5lC2Zzb1CiGk+1c6SuQlZB1l18AeeVwb/hpHEbHjw8aLw9+6
bVv08VM/Wat9IOuio+w7tvr9zFdGqZGtnVmXNfsyv+cwsOtlDm45U8w5iV21
GMAQ+iqfUHUU+/VxPWji5N6sKX4cwYXx+EQ+CvP01pwp82PZ0Y5fPv7v0dan
nnJz3J0vvRT909Kl0fWrV4/EV+1/fqg6itpU9D18T+jU6tbo609Lueu8fW30
9wsWJPEu5JpbPGooOVPSUSIvoeoov/4X/mgO26ek6tfWCfs+8VfYPpDE4hOT
b/qx0mNaG2qhoyan1vWtfv+g6o/3ew5oJ1tLd7Y1xHPwP5e4XH8/HtsDLqR7
OjQdBcSYfTbex3nFypXNB0O5L3Pir38sXbosqflPrqvVk836zruum8T9PLoK
/xR7AifvGyaB6yjWYd3+Sp/5TFNnVGjf3ZlqKX7if2OfKavhTzzqr3zNMdP7
OZ6bFBVnIB0l8hK6jmLehZYY1t46ZcT6IL5bq43FQX6sxTWGsoZk1ElH4V+0
/XATX9AIr9H6DDQc50E957cPHBjqedj3i90Sx2j1/vnfqXr/AxjLC6t3FhOS
jrLvjZoSxAXN+uhHg4ytzouvie7fuNHd0zZHtZhsdBDPcb8Ra9AL5ERRK4A5
sNXBlD8qB35NnxNOcDZ80ZVXBh/TN/1I50xZvAv+Ofpj+34r+z1H0lEiPyHq
KDt3ctLp+/DHWD2zKt/n/eCv6TDvtjUkf6/ymcb5uXiT+Ci6Xeuko2wfGmL7
YNRtb/8PX5Cdi79n4zDx9+OxPYGpwWn5zzOy6Sw7KUBPhaSjLGfP6okuW77c
/V3FaxkmSe3Vhu4wPy8xs9SpZM5KLBnjGDm+fg2hxDbjn0/t2BHd/8jDLkeK
ue/uvXvTrxsmAeoomx/ZeiQ5qVP6qU46KvZNNa6Z2hrYFzli6EriA4hHtbom
eb5r3ssawU83bnTHLx4ZH/raXCvSUSIvIeqo1r11yKvwH68NcZ1dYG3T5rys
5bO+CQP1SxXYvqHrKFtT/nljTs3YRQ2lItf1W/cCIoY06TOG2d5ePtSe1193
9zbtwRzT1fufYewq70MfUvOMn0W2bdV1lJ3vA5s2OR0wa/ZHU2s4Io2fM7Vo
0aIkfpV4CtqP3BR7jPvN0aKjqDXBPJ/aAMzzTcdIR/VPMqY0rsH8L8S11c8X
1aKl4pwpDvaZsrpW1ERujXfx8/oy7/nYZsjrIwbVdBS5fWi1REuNAOkokZfg
dNTk1Fo569RcE3tHQRX78hnjzSmZG9reF8w7qbtje2n5c+BUjHKb8ZfnXty1
y60hPf7kky6vWTpqSMTagFgdq7XA/QqF3adevAvr5mgZi0MaxTnZ/+A7pi1s
fsn6PecEvv12tOn4b9bu2YfymhtuiL5/441uLGdtf2R5+i3XVmkd5bUV3wnX
sXhxc7+xSl3HKPHWvYjlY92L+4q8KXSUr6XI9zVN6o9rVuOcz/nxXXdGl157
rfKjcmJ2iq/d6qPUobZEr34pflLPjzjHWfE+hsSlWn/Vtr/MeJy1A8t1hf/4
/e+jSxrzky2//W3nzxog0lEiL6HpKOuvyX23+XQROSRlw/wZfK+s2zMWs87J
vHxvHPuRFRPVLueTHGbG6JWNvpR1I/o81kIdBbRzyDrK7sWHxsfdvIr1ActD
L8P8hPmx7Vk20j2dPN8U+TcWu9q6Z+S0vqyNv4pxHN1E29JnYM/sRTnKsRxC
0FF+/CV9DfFoEzt3Np+s+P04UGIbtr1NzS6JSec+Z70L7WQ6yg4e/9GqVe61
ydq/V9cP6P+wX9a5JqMR2E9IOiq+Fmof2rVQ9xfdcL101JSeimuj40uyvSmw
V2LO0fkLvv51V9uPfTKuaswxu43JZidof9axpKNEFQhNR9m4ZHvrWM3vZE25
xvj7QLLGZv468kz8eBvW8xnHs9b1bZ6ML+pFby6PLx4tZY+Neq4UrI7K2Ltk
8eJvu7+LvketzanzgL5jjXznCy80nxxVm3tainqcdt8Tu2o5W8C+pNg0Gsn6
grZzO2//7utuvdWt64+SEHSUYTXO8EmJKd5r0TyAvWGjxEEyp2vVTq06yuoe
Zq0TAP5VdBQxU+518kf1TkZNH9YL5Y/K1lLkTNFXWs4U9mnxfhab6vbdmjs3
8Y+2jhH0y8TxETdz+733upr9+KlGhXSUyEtIOsquhT0euRZqQ9t+cZXrx4eF
t+a5ffv2pH42fnnWN79z+eUuFpy/+cnfzEEhqw3tMfzwrB+R59zutcMkVB3l
f1es6zM2meYt/Lomp3ycNgbZHm0j7T88m2ZPky+ff34ydlOvc+myZU5fYdPU
QWONFD8JZNppfF3sYYrPVf6oPpmcuhfR1syprM5cLfvhWOunrt3T6o9u2eL6
Xur4t849LZbPj+uzn+ZzBTQT/lPiq/l9x/PPu3k/eVIji8cIUEehC7iOr3zj
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
hG27PaYb84Si+sAq6yjbb+f6FSvc32U+Zz9ez4ca4qyxU3eSGhGMLbYWjy+T
+5L+ETvK2ie0Xa5T8FRYR9kYSI1PzvvTn/tcs855MPF8Xrxe47qI18PXRtwi
epEae/iY/Hg96kpSs5A8CevHffhOk1jTDFpjVjvFsKZ8tJMZ/uARIB0l8lJl
HWVYbo/tqVG78WsG+HWK2VOH+YLVOO+25wvP45sqKg/GJxQd5e9dYntJWy3k
ss9FwM6fPUU5f+Yl/uMjp9N332u9sxHbT9V0lJ0X/QY+GuZj1OqHMtlsp3g9
YvCoEcGcEZ3kzydZi7caEdTg27d///QPt3X2CvU1A6eiOiqrps9Fl11WYV/U
lGZyf3vxevwkVpl9hdGKfo0IrpvrJ55gw113TWmndnGpPfafVYljlY4Seam6
jiKOjLgdzt18J1W4Z8uCfc+WG049A1tP7bQmlOpHS+CrD0JHxXN2fCW2dwl1
G6AMWrUXzJ4Yhzl/cpILn0t5NdZ6yesvukZ3pXSU7Z3QODfTzln1uIqi3Zo5
jzN2kA/P/In5ox+vx1o8j7OegSZsrRPRkx3VjYrrKHyonDMxbWiPqtWWmIrX
W5vUJDddZT4nao5b7SirK8VYyXoX86ekBn9MnXyr0lEiL1XVUdb32Xkz50jW
CWtwzw+EuJ2YIxD37++h2nMbxvP+oglBR3HP0ZZW86MUGiQvjTa3uESr51C5
ayiIKukoOyfmYC4WaPbstnvEjgw/Xs87B+aI5HZQA5O2pR6KzSeJ1xsbG3O1
8n/eaO+sdYvS18srmirqqPic0dTEY3DO//jtb1Umpm+qTsQap5vcfsGN34nX
w6dG3XbWBPw6kuQuohlYo7P9YXybtrWH0n5nQ0I6SuSlijrK36eEuSbnPS0W
TXTHy8W33HCLIavaXKHyOsrbu8Tq91sthMqNZ/G1mI8TPZWVRyKyqZKOMlrr
/IySTvF6zOPxjZLr6deI4EBHUfueeD1qi2X1F33FMNWdCuso1g9tDCTvt5y1
ztPxepyjxevhP8Pn9N+/fqGLBffXCIhRxfaZ4+Ffte+ktR2qEn83LKSjRF6q
qKPsnG1vHeYb3XJ5xHSszyT23//uq9iXhqKjWNdnrsc4aDkmlTh/Dz/nzuq2
2zpHFW1r1FRGR01O1Tizfefw98Cwv+d28Xr8jd3Rl6GRzP5sPsnf1BuhTbm/
fH2ftUeU6IMK6iizH4vHoM53ufKi1kzF692ejtdbvnq129Np7rx5bj25tc4u
NfiZI3F/uni9HvZ9rjPSUSIvVdNRyX7Xr72WxA1ZLFpZz7mMWFvRZzAHotYr
dc3856pEKDqKGsqcP/FFVcZsyOpfWQ2Yss6nykRVdJSdD7bKeS5q6JOEYdxz
lufWUgMM3cT6AzUiWIv38z9Yj6CGIDlb+JwsDnnSznHyPcXrDYqK6SizX/ZR
tvoo7HlQhpg+f18ni9dDN7EXA/F61IggL9zP6SMukVgG/KtZcSVW17+M30UZ
kI4SeamajrLzoraS1ej+67vvFnxW1aN13y2LISvr996NSuuo+Pyoj4SeZUy0
+v1V/T7svKkfzR47aHU3j42qe02jogo6Ktl3uWGz5F/g66FPhoGcZ5ua5Ab7
PbNXFfoIH5Plf3Awv2Q+SV4e+upgxmcoXm8IVElHWX2UxvzH4jHmf+X8Zn5R
XKuh0Hi9hpYjXo9zwef09wsWOJ+Zv0bAPcc4x/oB915SI6IlvlU+1t6QjhJ5
qZqOAnST9X1910UQyXeLv585Ln2zzXGr2t9WWUfZPWiadkFjzHQUXDduppid
EUdVtjpuZaYKOsrOxcaNQfkbD2XluMeaijg85oz8L/ot007EM1Fvj/uHuuTM
3VP5eJpLjoYK6Siz3wcfftidJ+tX37/xxhHmRU3F6/E/8TmZHwy/E7UuiNdj
jcBq8GPvrBGcO3++m/ewRvX/s/c2sJaUdZ5/NCxLXHdWHTSE1cSEiG8oCXF0
/KeHEDMSwswsq6ITOrA9YZZWgixDCAguE5nptB1oWzs20nZ6gW0blEHFzSAD
TUeRgQxE7AACaWyDKIq8zaLdbDMS5Nb/fJ5b37rPqVvn3HPq3nNOPVXfT1I5
956XOnWqnnqe5/v83uL6tvpdtq3WwzrK1CUpHVXKi4AdvirfjBmOxjSuNecR
TRo/nyKp6qjYbsO6PnPCW3ft6nstVXRNqMtL7MzrDz88aHdI/bdNkqbrqLje
DnEZ2E9li6rVh0R56ePnuJdZ37moNzbhd6D4Dzba0km9+aRqhRd+etEx2l9v
yqSioyJblObO5AQPcVET1lCFv97V24O9CfsXeS0uuOxzITbruP9vVWjbaue0
eexQrEWRo39Q3Wf76y0f6yhTl5R0lI6JGvNxbZ0mHmtjyccQ/KcVg33zLbf0
vZYiqeooHTdtmeOmbUPb2rTuWeKeAw2+JrOm6TpK1444DOVjrPKdG/TZYf56
rCeQ5xHbEutkmk+yHfHmN2d/fdba4K933549lfuwv94MSUxHkRMFWw85GS65
4ooVt0VdHvvrXd3vr4d2Is7pz3pzd+pVxWsEIQf/CSdk6zdsCPc+OdmrfoPb
+cpiHWXqkoqO0vHQr9DPYIdnLI1fMyNQmgOx1lX2DUiRJHXU3EL+ftX4wM8k
fi11dF1iG3JR581U0ngd1YN7S+sw5FKGYXNlrZmXbU48h3bCroR9STXVuRfo
57FDKUfE4705efx5+zA1jER0lI5F/sb4z81rqBXUThX+en//5S8Hfz1yRNDf
xzki8FPFX3Xnzp3Bf7UYk6HKXmtWHOsoU5ckdFQUJ0LsSJzPrKpeohlCfh6p
Ocl5ZO0XGnW9a5CyjmJ9nWMmT23ht9HUYx6X/HcwLyCXWtzmmjS3ahKN1VFz
C3YktVlsUcV6ebnNVsQl0b6ZJ+7avTv04cQ1Kf5DOSKYT5LnkRwW5f0Oyndu
GkACOkrHgX8xbQ070DmXXprndKhvi5J+QjvJX494K/z1TluzJqwHkDtSMX2s
EdAfYl+lJkRVv+91guliHWXqkoKO0rHgB0+/h/9wqrV1Zkls02MN7J3HvKeI
L2vKOFeXJHVUNj+vVO0S5qaQ+rUoo3anWpfoRWjb71wpGqejdP/kj7RZzZOx
a4O0TdU15Xn6bvTzGb05Jb4Esb8eNspPn39+qJe7J/cxKGN/vQRIQEdpvkN7
C33RCSeEWrbjxEUt5CRf8NdTbnK00xnnnZd9+JRTQuxgvEZAzlLWCL64eXPI
h+K6z83COsrUJQUdJZTPjPqKZkzmFmqVkxOY84gvDbTBppeajtL9Jf9K1iZV
86Mpc46VQr9n389+FuwPcV6CJvYzs6ZxOir/bubExFJiK+IaYovCzliOd9L/
aCd88pirxrHzzCdZO6D/IUaFtZyXKj7fxPvWDKHhOirOU6tc/cQojWKLmtdO
W/v99XL9hb/ex/7qr7IPrlrVl0dSNanwocH3lVz9ziPZXKyjTF0ar6Pyvpla
i4y/9H2MvfFrZml0PalLhE8BsbWKL2tDP56UjoryRWmurPuuDZq2CrU/rQO3
Jbf7JGiMjori91hHxxeAvoMtXMPTTw+vc+9RiwI/PI4VXyXl8StyRPTml8xT
yKfCPVqmMn7KpEWTdVS0jkjufMUGh9ilgRpq2yJ/PTZsTvgCVtV0CnWfe3oK
n1WtFZX7N+eRbCbWUaYuTddR6vtYu5Qtqphruh8anfxcsT7MeaTPiJ9PnZR0
lO4t/JhYu8RG89TTT8+/2LBjXTHmFuISsE0wx8ZeAU3pa5pCY3RU/p2q1ScN
xbxR/tWXb9wY8jHTL7M2o/mk/Ibpt1mLV777PvK57czn2GZlaKKOKuW1e+qZ
Z4KNiH6X+rboKOXoG+Svh3a6dNMXQo4I/PXIrxKvEdDuaf/4FlDj4YWDBxcd
hv31mo91lKlLk3WUjoG5sXLgNsHHJTk0hvTm6sTWMgbQ38evpU4qOkrHyfo9
a/wcK35S8WttR36l2KbMYpqgo9QWqWWGDwDaSTpKG1qKvkR+TMwniX2jPRPn
9OSvf73od3kdvsU0TEfFGl33DnUXOC60EPVu0Uvz/nrbgp8eugn9xP9op/9y
+hnZse9/fxg347rPfJ58f9wfjDnFWJMt+KV2pT9vC9ZRpi5N1FHq/3RsqhdL
XtyAfYHGIz9XrB2r7m6xZtaS89h4HVXyhce/kjkoc8+B+c5aRvm3k2+gmGu3
/LePQxN0lL4L+zXXqkpHseFrfcpHPhLW4qtsqoW/nueU7adJOio/lud/+9uQ
34Q2yrinvPrkgtiyY0fQUeSHQD+hm/DX++jHPxF8BOS/in6in+Z+ZO2HNchF
v2fOdZ9TxzrK1KVxOqrXB83lfxIThe8P8cxxPjO37zHJfRuUF071Xtp0HlPQ
UUBcPnEkjOnMT5mndoYoLky2OGIVwPPsBaamo6rui7n+9fuLeuNClY7if+xU
zDcX5fy0v143aYiO0nfR16KfpIVox7Rd2u3JHzs1++r112UXbfh89pdr14Ya
UtR5jv31WOchvyQ6jHmI6z63G+soU5cm6Sj1f8RnkvuGWGXik+VrH47V/dVY
lOu9UMdCNoA2zXOaqqN0XIzD2FNpx/ioMp4Tk9y1GCH9TmqmqD22zTa6XKZt
j+pbQ88f4/rJ9L/YnWIdRdtVnCX9snWTaYqO0n2C/lHuB3S/1gLwy+Nv+uI4
jyTPv+u97w05IshLXq77bH+9dmMdZerSFB2lvunaHTuKmguM3/ytcbuNdpSJ
Eq0tM4ePY3HalheuiTpK7ZS8iKwHqE1rXsr/n7300pkc26zQdcLfRnV5yVMA
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
8qwI+fm6ddeuoJdiDVXWUsxNoU9XtKWPnoaOijQUtv/Lt23z2tVymVvI8YsP
C3W2sKGi+88888z2+6PmWEeZukxLR8X5uC/d9IVgi9dac9vvz0mhfLrM5X9w
553Zjp07s3ce855gi6LWYPGeDjBNHaW1OdbqWA+NNZTbcn2Ua3L16tXhGn7i
tNOym2+5JVzTLmkp26MSI2+T9953X3bIoYdW6ihpqUod1RamZI+i32X+QGw1
fgCqg46uoj7vyx2yoSwb1T/onTP6W64Z8wfaK7qf/9/3gQ9MLdZ4llhHmbpM
0x6FhmLOSZ/nvm6Z5P0ZdbbeeMQRoc9jow888i1vCfEO8fvaziz8+hjDidWn
bgm+JdhY2TZs3dqN/FwrjPqEdevWh3asNs1G7D6+JoGWn1PrqMSI1vMV3xf7
9mFfVf6UqjqIrIMVtuyUmbSOivZP38saFnqKv3mk3yUHpecWo6NzRY5Urpdi
+qT71XbXrV8f3tdK/Z9jHWXqMq36UfjyET9CTijyQVF3nNgotiJfnxmN/Jyq
74t9SdTvrT799EXvbzOz0FG77747bOQ+Yx1Uj7Rv544eD10/ahMfdfTRQUfF
c1GuKXnRdU3bPEeyjkoPtd8rr7oqXDPsUvHaFpvy+Re50LL5uorM/9ECyTOr
OrymNupTqA+v/ChlGyo5J0886aTwvjZfR+soU5dJ6yjth/kleSVYr6deHrl2
eSTfLpoq0IH5/kqgvoyxqjzflB8+f1O3BLrQH8wy73mB229tlhrPWR9gPN+8
ZUt4X5vHc+uoBInufdoo9c//8E1vCnEm1JbWNQxvzR9pw/iiMRbi6548U9RR
1I2q2trcL6w4UW4J8vrIHlXWUTxPPUq9t61YR5m6TDM+6pWov1NcVFzH1IxA
lCOuat0+tkl1KUZqFjpKNXW1qe5GF873ihLFjmssqxrP0VHK49fmc2wdlS7x
PJP4/MdzHRHnktB7WFvER+Mfbr0lrC8mj+1RyaH539Zt24bao4idgkXXsS05
UjLrKFOfmdSPMvWJfPHfetRR1lE5jbBHmXpEawOqvzNIR/31WWvDexe16RaN
59ZRCTOoHcZ5EbN5jYWPO3Uq0FPn5LWlksY6KjnUp5AjBdsp8wn6Xvpb+bZw
HeXb0te2W9LfCusoUxfrqPSI/fqYW8ZzTvV/PEcOP+hCbT3rqLQp+/Uxplet
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
TZLk/WyfjrI9yiSCdZSpi3WUaQPWUaYtWEeZJJGO6vW71lEmNayjTF2so0wb
sI4ybcE6yiSJdZRJGOsoU5eRdRR9JO+Vj/64RH6oQ18f0ZfVmJhxdBRtm3Zf
t5/ku0adF/A+vofNcwkzCmPrqN//vn6/DOP0rbyH72NzX2xixtVRddpt3P7G
aYNut2YJrKNMXaZij7L+MRNmGvYoaaKRmKt4r57zvWCGMFV71Lj6qc5nTTeY
tD1qUHsbZX12lP2YTmMdZeqypI7K+5tXfvOb7Ddf2Jj93//52ez3v/pV32sD
ifqrVw7sn//ciy9Wv7f3PK+/8uyzlRuvhdd7+zGmzDg66hs33JCdc+652bdu
umn0fef74H7Z88AD2S9/+avBH4i+76GHH852Xn99+M69+/YtvO5x3AxgXB31
/779reyZs/579rt7/mX+iVF10ah9c/Re3nfwtluzf/vBHWFMGPn7TPsZR0f1
NPn+a67Onjvvf2QvPfhA3+eH0ut/eT/tL7T3fP4yUF+V2m34rmGfMZ3FOsrU
ZVQd9fLPH89+/va3ZXt77wl90ahzwd7+9391a/aL97w7fJ4xP96vHtFoj73h
ddnjb/nP2WNveuOiRz7LIzqu+Jz7QZMzko7KHz966qnhPdQ3HYn8c8xnV51w
QvaHb3pT9md/8RfZQc07o3ao47j3vvuyE086KftPb3hD9qpXvTp8H5+jzvXe
vXv73mtMzLg66ukzTs8e6r2PfjbW/EuivvnY94Z+9oUbvjH/fPz5aB7K99AH
P/ba/5D99N//u/AZ+m3PS01gFB2lNtLrO3/1oRNCu61sdyXQ+rQ15gG0vX3s
u9cOmVegxxZ9XmsEzz4btBrtls/xmV/+0fsWz0NM57GOMnUZVUcxjjLe0g8N
XT/Sc7//fXbw5n8M/Rzaa1++FX2efETU9/aeZ1zmO/q23ufp9+gH2Q994sDv
Np1lHB215swzw3s+ff75w3eav//+Bx8MuonPvPqQQ8Ijtc8H7Z/3H3HkkeF9
aKl169eH++u4970vPPfOY96TPdMb3/s+a0zOuDoKW9TeXEcFlmpT9M233Rr6
VT6neWnx+VLfzBoafTHvZe7LWhbfSX/Nc/xtzFg6qjfveOovPx7a3cH/853+
1yr2yXtpa+ioJ//85PA/7beYV8RtP/Khob0+0nud99JuWQugvbO98LWvDf5e
0zmso0xdxtVR9D+j6Cj6MK1z0sfRn+2L157Kvva94wg+ey++GB61yd8v2KPe
8Lpgy5+r+rzpNOPoqDPWrAnvwbdvKPn7sVvxfj73ybPPDn+vOv747IWDByv3
v/r00/t1Wv78k7/+dXbMscf23We2SZkyE9NRkR8f80r1zcxL+9a4Suv6T33k
v4b9P7/u70Lfq41xgH0wJqDLhn63aT/j6qi8XY2io5g3YI9iXqH2J3tqsE29
6Y1B78c6Ct3E/vke2rw+x2ekyUaOUTCtxzrK1GXF7VE59FeMrS/v2xf+1nrS
QB1VfXDhgf5T657WUKaKSeqo+/bsCfFNsG379vDZD65atVhH5Rx19NHhPd+/
447w/7/97ndhgyuvuiq8hm9hfNzGiEnbo+hDiS956ZGHw3tZo99b9hXI98H7
eA2/gGLOSb+MT2vvPeqb2UfxWdNNJqGjSvsvxv/e5/lbNqe+9p/N+/PJl6+Y
r9Bu85x9xWfK/jGms1hHmbqMpaN6Y+mS9qiIeN2IPjPYo2RLH5T7SVv+ur5X
+m1uhO813WMiOiom/+zmLVtG1lHqj+Mc63972WV9sVnWUabMxP36svl2p75U
a1xVOqpPJ1X0z6yVMSZ4bd9MVEepzZX6cvR8bC8V7JPnsLX25U/J5zu81/rf
xFhHmbpMUkfF426ho0a1R6lP7s0NHon7O4/RpoKJ6qi5hRzmQ3VUaf8nnXxy
9q/PP1/sBrsWuSZ47Qd33tn/WWNypqGjYv+nSntU3j/LN6qIgYq1VLbg28fa
f5Ev0HPSbjJpe1TFd6GR0ErsR7kjWB9Quy3iqUWvbfI68xDmMvi3Ou+kAeso
U5cVj4+KieaXS9qjKsCnmXVOPjdWTl/TORphj8of9/30p9nb3/XukJOCxy9u
3pxt3LQp2Kle+x//INu6bVv/54yJmJqOyhnm14c9ij5f6/ryL9C6Pn7bQUe9
4XUL/gLWUd1kBjqK9hdySPbaX4iPytE9EfJJgtqk7Kg3/2NhRy0+5/6401hH
mbpM3B6VP45ljyr5lOB3Us4hZUxMI3RUtnDfkNucvHy8l7znbOgqvjPESkVr
+sbETFVHDYmPQhOFeWqe53xRfure+1jvV5y/7VEdZwY6iva3yF6aza8NPBLP
N17uz82PdkJ7BR0V1/UzncU6ytSlcfaoON9fT7eFvKjKBeXx2QygEToqf/z5
E09kH/34J4J2Itc59ij66EMOPTR8dvXq1UXeCY/dpkwj7FH5e2IfKeadzFuV
Oy3Uo8g1VrGu7/WB7jItHZXPWbApMT/AHlpoobztLqWjmMOoXqVyYbnddhvr
KFOXxtmj8ucZ0/flOUuLfbmfMwNohI7KoWYUGooc6YqPQjfdumtX9rZ3vMN5
JsxQGmGPyl+THx9x+cw76ZMZA1RLiu/kf/7u+6zpHtPQUfl8JeigPB9f8fnI
H7Vo0+WaaPbrMwOwjjJ1aZQ9SraoA/uLelN9faQxA5i1jtL9orzo6CXipIB7
TPfZjd/8ZnidfBPknYiP3RhojD0qem/IMf3ssyGWnz5csVDKe4bNqvKzpjtM
WkdFMVHyVaHNh32X+ni1y6o8E8B6rtYCHDNgwDrK1GVZ9iit/5Q3Ma49Kn9/
Xx9nzAjU1lG95/gs7f3lVxb+XqRtRtRR519wQXgdm9Rv9u9f9Ppdd98dNBSx
Uso34f7axCxbRy3VL8Mo9qj4vRX9OvWnQow/NSmoRRXv13SPmjpKefaGttu8
TdLOYg1VvFb6rOYQwZ+lIu/5ojyUk9b/9qdpPNZRpi617FGjjpl14qN6fZ5q
5IW4KPc/ZgTq6KhPn3/+6F+whI7SfcQ+ef19H/hA9uSvfx2ew6fvYD6Wf6/X
R5Oz7w9e97rg5wfur01MbR0lHTQBe1RRw1Q+A88+W/TTi9b8TTeZlD0qb499
dqhBbT2ar+CHqjx+wT81rx3dN8eYhr9L1dqyaRzWUaYudXQUNe4ZR3muvPWt
/YxjjyrZovrq57nvMUtQR0etOfPMbG9vbCa3Xrw99PDD2S9/+av+LyjpqFXH
H19pj/p2b8576GGH9dmbdGzYu7CB8XnmGX3HZkxOXR1F7odB/XJRI0eMY4+K
6fXJrG9pHhpyqbqfNlBTR7G2OrDdHpi36TPnYP4hH1La86L39vYR05fLTxoq
W4i9Jk9KkX9iwuw/cCD7p7v+OduyY0f2iyefnD8VU/lmMyrWUaYu4/r10f/w
yEaMpv7WRn9X1BCJxmrVyqu0R0V9K33bwPcZM4BxdNQnTjstvOf1hx+eHXHk
kdkbjzii2PgfWxHvifdb1lHMEwbl6yO/hPKcs5/LN27M1q1fH+bFPM/37tq9
u/+zxuSMq6Okg+L+uPw38SKBilgQtNCgPBPhe/ftC3NRNvST8kzwva5hagrG
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
gHWUqYt1VAVzrxT9Pufn4IsvLnreNAvrqDGZ8zp+U7GO6gd/0zPWrAn+UcSZ
xBvn528vuyy8r6vnpzF0XEep/WGLIi7q9YcfHnJOwC9/+avsLW99a9/9/G+/
+122du2ninUB2vhzzz0XXuvC+Woa1lGmLtZR/cTrn9QkP+UjH8lOPOmksK70
3dtum3+T556NwzpqNKrGZ/vmNwvrqJwoHwqx+uUc0ugobFLEoTBPBc8/Z0jH
dZR+Pzkk+O3YT0H3LXpfcVF6nvNy+caNQXfxGvf8z594YuFz7penhnWUqYt1
VETeZ/3r889nxx53XDgfrIGyKffO/7rmmvCeTp6fBmMdtTQ6R7Rd5qa0c86R
nneeiWZgHZWT37ffv+OOoJfKOire9u7dG97bifl6U+myjppbGH+YJ5BXArsU
xPnQiZfiddo0YJOC3bt3h/UAzhmP1KAqPuvxaypYR5m6WEctoL5eOUtZA6XP
Y8OHGT2FbX7vvn3hfc7d1xyso5YgPwf33ndf9tFTT82OfMtbQrsmzpn1UOfe
bQ7WUTl5m/2Xe+8dqqPop9Unt36+3mSso7ILP/OZwhZV9KlzCzFPa9euDT58
ipuK8/djh9I9T9/MXEyvtf78NQDrKFMX66gF1FfJFlWuRy7b+zduuCG8r4vn
qKlYRw1Ba6W9OY189DUvZd00jof2eD17rKNyNC8/cKCoa1ruj+mjWeMnbh+8
fj9DuqqjSrnOlZcPyjoIGxVt9ogjj8zuf/DB4j16H34CccwUf2uO1upz2ACs
o0xdrKNy8r7wqaefDmv09GFlHcW6J+dIvn1ew28O1lGDiddCZWeNY0z0uGvX
7X3vN7PBOioiv3fJda51erVd+mjNN6nLI5vUS9ZSs6GjOuql/L5cv2FDYYsq
7tW4HeZ/8zrvo02Dzo1y9bFt3bYt+MDwvtC2c79Vzzkmh3WUqYt11ALqz445
9thKexT/M2YzryGWxH1ac7COGkCUYzL2Gamys5JXBdyuZ4t11ALxff22d7wj
9L+0Weyp73rve7NPn39+9vZ3vbuIK9G5ci7KGdBBHaXf9fxvf1vUiBoYQ52f
H2xVaq/EqMavxXnPsV3R5nkvftiycbltTwbrKFMX66gF1Ceec+65hY5iU4yU
1kA5V4E513poCtZR1ei8kE/3uPe9b6i/qnVUM7COWkC/mXPAuWBeyd9s3OuA
T9+qVauKNQKt80Nb5++NpIM6Su1z2/bt4fcSE7B/0LhTkceKulHQd36ieQV2
KPUDrB0Ubds1WFYc6yhTF+uoiMi3j34Of3z5jmiM5jk2clHo3HXyXDUM66jB
qJ2Sw7/KHiU7K74koBxSZjZYR/VD+1XN0nXr188/GdVHB+am2KZox+QDoj7v
U888U3zeTIGu6agoL/8f579XfeigMUftlfdpnIKq86NYP/avts1nmHvwXLw/
s3yso0xdrKMi8r6Pursat1nnZD5Djbybb7klnB/FSfE8saXQyfPVIKyjBqO2
ufP66wu/qHJ8FOcMnaW5p9vz7LCOmkf3NP0u54EcKaqtw7gV5/HX33FcCX5W
5Kcs9tXxfmDidFRHyU+P3BHPPPts32tllOOXWD7FYe/YuXP+tYr7O27b1+7Y
EWr7anzb88AD4Xm37ZXBOsrUxToqIu+LmLewpkmOKMaBcszort27i7xn+OYz
zgP9WSvHiwSwjlqC/ByctmZNaNv4iGh9k3bOxt/vPOY9/fkmfO6mjnXUPPq9
sqNSxzR+vo/Iz4naPMxRNbf9dn7+3D9PmI7qqA/mPqXUj4ClfqvmXKrXy/y9
2F9Vfxu1bfpm+mi1beUOdttePtZRpi7WUQsMG7dDnYcoBjT45B9/fHgf659x
rYcunrtZYx01GiedfHKxVn9i7+9zLrkk++r112WXb91axDSz5om/f8AxgFPH
Oqo/LgrNj86XbWnYedBr9ANq69hb8QdUHr8uncep0iEdVW6f5IxQTr0l60rO
LdikaNd8vlyzd9h30raV84+2TVxrmMc5ZmpZWEeZulhHzaPfi62J+BFqklB/
PH6t/F5y9FB3R+v6a848s8i/4/5sulhHDUbjuvxPsKVeed112c13fD/71u23
hY2/r7rh69mqP/3TYK/ifayXvnDwYPis2/P0sI5a+K30r7RHYkJglFgnfRb/
bHIGqX9evXp19stf/iq85vY8AbqioyK98onTTgu/k3YGI9+j+bkijo/PU783
fn4Q2j/3Af2z2vZHP/6JwqewS/3ESmIdZepiHZX19Ytn9rTQKP1i7JtPzh3F
TGGj6tNfHZ/DTwvrqMGoDTOP5Nww9v/TXf+cff3mf8y+8U/fLTb0FI+sByhm
inVP1eVxe54OXddR+p30o8qX+i/33hueG3U+HseMkIeadTHOJTkrH3r44YXv
cXteOTqio+I1V3QM/nVqUyP/zvxc0a7ZB3YpxVov1SbjelPMPRQzRdtWzFQc
V2VGwzrK1MU6auG30gfRJ6GJ+uKTBxH5iNCnqpY56/3x3Mf92eSxjqpG7ZOx
AW1E+8aH7zu37wqa6R9uvaXY9D+2qQsu+1x2xJvfXMQA/uDOO4v9uT1Plq7r
KIEtKqy1n3pqvR1E/TP9uXJNx3Elbs8rSBd0VDSWlG2lY/3GfD+MUSeedFJf
HMFI+ym1bdW8pM6U6lc5Zmo8rKNMXayjsqJPw7auvGXx80t9Nq71oDx/qvWg
NU/3Z5PFOqqC6Hevye2sHz7llKCTZIOKdZS0FBvv2bR9ezH3ZG3hi5s3FzEm
bs+To9M6Km+z+N/JhjSuLaq8vzg3ehxXQn+P71/tfZt+OqSj7n/wwdAnMs7L
/2TccUbt8sZvfjOcK7TQWGNW1Lap1YJvH/vBvoXPn+Z2rTn3E8Y6ytSl8zoq
qhnFuM36kmI+x+l/4rrm8ltWHRP55NuPZHJYRy1G5wR9r5pR2KLkv1fWUGUt
xfu+dtNN2YdOPjm0Zzb8Xmnj4PY8Gbqso/QbtaaF7inqmS2jreleIN4vjith
7tRXi8ftuT4d0FH6HdRzUi2nuWXuC32v+lObt2wJz700xr2ue2b/gQPZZy+9
NNS3lB1XdQLctpfGOsrUpes6Sn2Zfj/2pIH1yEfYV1zHJPZbZv0K3J9NBuuo
wTDWh9i9P/3ToI0G6adBWooNexZaTHXTND9ye155uqqjdA+zpqXckd9eyd8e
2VGppRbHTMmmoLxnpgZt11H57yOOST78t+7aFZ6r2z71OeZdmn/UGrci2xQ+
q2rb2Lhin2y37cFYR5m6dFpHRf2i6o1gY4e6v/+VKDc6/de73vvewm+ZsVvv
cX+2slhHlZCd9ZlnQtvjnHzuS18qfPrG0VJFzNT69SG2hH1xv9yS103z+Lyy
dFVHaSxiTV5zysCgujo1iPtn1rbQUKqhpriSlfy+TtFyHaV2g81HttIif2TN
9iJbFjZ+1aQk1jr+vlGJ23YcD0hdFmr46j1u29VYR5m6dFlH6bfHa0FFf7+c
viZaG8KnT3VMyD3Febbf8spjHdWP/EJU65F6UeTni/NJDNNPZS3FZ9FSW3rj
8bHvf38xPlN7UnMBt+eVoYs6KrZFaf6HTR9W/HeX+mfVC8TX76Je/1w+JjMi
LdZRxfjS+z2yle7YuTM8t+z22Ttv9KHqq8mr+nLdeUhkc+VYz1izJuwTXz98
ZTUmtrkvqYt1lKlLV3WU+hpsUVqTJI4eVuq36zvw78efWn7L5J1Wnam2n+dp
YR21QBEXtW9f8D9hfkj+PXSQtNSo9qj4b2kpYqbIV6H2TMyUx+eVo8s6Cp8k
fjNaapRaUcvh5dwPm1wT5EojZ4DiStBzMOljaBUt1lG698gzLl/QwEqMLarL
u3dvaIP4TyuPet39x3koWetSvDa5Aff99KfFe8wC1lGmLl3VUfp92LvlR1zE
M68gsR2d78J/RPaBvhrmHZvrrzTWUQuUx3zatnJLjOLTNygfurSUYqZYG1DM
1KoTTuiPATS16aKOAvQM/SK/mblfYML3buwLhU+3/Fbxx1ZciX2hRqStOir/
XdS5lS2qzwd0hfaPTUr1K2vlUi9Rbtvy76aORV8uLbftgHWUqUsndVRUu0H9
vWxRE+lTIj8SalQpZopYUNd6WBmso3Ki/JPvPOY98zWlL7lkUb2oUX37qj4j
PUYt30s3faEYn3n81k03he93e65P13SU2onWtLChKs/YVNpQ5AvF/FK1eMgT
5DpTY9ByHSVbKTpE/iQrNbbo3uZe1z2gPL/LjTHQuSeXygdXrSp8ssPcI48F
bGvfMg7WUaYuXdZRqttAnzVqLfHlUOWTjx2fuFWtC7X6vE8Q66ic/Lfiu68x
Hz885elbjj2qyjaFn9/ma68NMVP4jZBbXWsS8XqoGZ2u6Sj9LtUjpe5e/Py0
j4OxgHoViishbmW//VaXpuU6SrZS5SZf0d8U6R3FU6/fsCH8vxK+pWq3jIlq
2/TV55x7rn2yc6yjTF26qKPK/ZV8SKbxm/UdnPe/W7eur45JXy5pMxbWUf1o
3fGs884b2xa1lD2q/Dr7R1NRB1IxU/ilKMYk6TnUDOiSjtJvwo5J28GmOUv/
0Pg7mccy11QOolZogknSQh2l9oDtht+DX9+kflM51gDd9txzz63Yd8U+fMzz
5JN9Ym8e1FdnqqNYR5m6dE1H6XeRW5QxEn/4qY/b0doTvgKqM4U/iWOm6mEd
tdB+aVPYhsij+9XrrxsrNmqQzhqmp+Lc6GddeGHwGdE8YE9el8fteXQ6o6Oi
9kCOsuCDeu654f+Z/tYo7zm1KuS3yhz6+3fcURxfqtpgYrRNR0VxS+Qe4ffg
OwKTzD/CuZJvaexXulL7Vvtm7UJ1sHiM5x5JXq9lYh1l6tIpHRXpF43bxMrD
1H9v5MP3L/feW+QMJGbKPvnj03kdFbVt6ppwDk5bsybEMMVap8rONKo9aql4
KcVMXXLFFcX4TF6V7952Wzgut+fR6IqOimvd4N+M/ta8uwn3rMZG4kqkC1jz
Uj52xwCWaJmOUvuk1q7iPyfePvP94hutmufkX1np79RvI3effBdo23HO4hSv
2XKwjjJ16ZKOinULtZzoN8g1GpjRuK3zT71U+S1jS+B6/Gb//vBa1/qzOnRd
R8VxyviKol82XXP12LaopfL1DXuPNvz8rrzuumIuxRwZ31nNB9yeh9MVHSXW
5DnKeGwS2CF0zqmTqv6Z+wu7mdrzy27P87RJR+W/heOmBhNjstZcJ/pb8u8l
hpo+nLamvJErOo5F67gvHDwYfiPfxfbJs88uche3tc+pwjrK1KVLOkrQT6hO
SGDG8+y49i8xU6pjclLZb7kDeqAundZR+e+jjVCbjN9/8sdODbahuF7UODap
ce1R5UfltVDMFPMQjk3+/m7Pg+mEjormi3/wuteFdS35Vzdtzq3jYb5JzFQR
V3LSScU6nNtz1kodRZvketM+p7bmmu+furmKnYZJnMO4bbPWxe9U2348jtfu
QNu2jjJ16YyOyvsBcjHRLzK3Iwd5/NpMidaHyLUW++Tf5xiTJemyjtJvp3Yj
7Zr2vWXHjsIWtZQtaSXsUYP2QcwU67j4q6p+ZV8dyJZfmzp0QUfpt2iuyJpW
EXPSxDYR9c/4eRF7yHEfdfTRfdcnOb2wkrRQR62J6znNvdL32qRQOyNeCV2D
vyu+rzCR8xi1beLG5ZNN2/52h9q2dZSpS1d0lPoActjyO1kbL35jU8btUp0p
5VnF/5AcPnqt7f1ZHbqso/T75Hf0oZNPXlIfLWWTGuX5pexb8vNDz/39l79c
1LDEX4X4/dgOaxZou47SdUdPo0fwJUriN0b98959+0LtaeWPjusPdrZ/bouO
mlton+Shon3G+UWm8f06X/IvYN4y0e+P2/bevUXbRsfFNbGTuo5jYh1l6tIF
HRXPsbWOqHqhTfudsU8+tf6UDwNfP9b1+2JMPP8s6KyOmluwRaG3aSdoFuxA
VfklRvXnW0onLbW/cg4KjufqG2/M/uhP/qSvbprXBhbTdh2lMWfd+vWF/zKk
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
GeqdMCbRLpXrMIX+aRjWUaYuKeso4DipQz4o/rYzDKixx9979+7Ndve0JvMa
amvF/tP4BMRzzLIPiXzxY78H/g5+JM89F/p7xs2QN+3ii8MYru+dJq3SUdGY
r/i109asWRQXNYqWmYVtalp6Kt7w6WP9ncerbvh69tGPfyK087JvFP/zPHMA
7gsY1laJL2Ftf5o16JLUUXmbZZ7P3Ip1mFHOrymRn0fm+Fx71rqIPSG39Ng5
D62jFsiPjTy03P+Me0vGSU7qOCrGaeB48NcjlokceFrzkZ7mnDKGs7amtc24
/hjvZ+0Ie+akflfZ15w+Kj6OlLGOMnVJVkdF/aLm/Z0atwf46wlsTvh+sz5F
Pr44RgS7Hf3xjd/8ZvBxVqwo4wv9sOpLMdfsq18exd+TE5q1evmR8Dd2gFnR
Jh1V5JLP7azECqMN4rioUew007IHTcueFWtIzoU29CXtkPznx/d0J3MkzT2q
dJTy/QeqYqPnFnJQ06bP6O13mv1hijpKx8ZchD5Ga1qd6ItXiqiukfwE9uRz
4uI8DsuNUt6mTYN1lL6/7P8/jfM0LH841xqNzP1Cn6SxV/56rKMRD4ev7P4D
B/qPuaTH5GfHmpu+d0XJvxc9z7GGHPzXXz+Z75oB1lGmLqnqKB2fanrTD4W8
B717fWp1B2cAv7tc447/6WNZy+I8sJbFOKz+GI1JXC1jB+/Bbym+vnz273o6
CF8Bakygn+i/0aU6pzE8h5bCti8/khdm4UcS0SYdpeOVvmVcHJRbYljc0CTt
RNPSZjwqHkw2J/nvEcf0X//bmjCmx/l9afvElNGWmZfQ/hVjIjurfM767oNe
e4ntrvxP3MmGnkabJqnpKB0Xa1qyb+/adXvfa2Zp1IddlI/F+EfSzxa1pZre
jzVURxX+/702SR+APpl0XgT51Zfz3HI9iT3AnoOmUx1grWPiu7n69NODzYn3
FWNY9FvKx1ys+ez+XtDerLv11dBbKfLrS3+kfD37Ux1jK7COMnVJUUepb2Ce
j62FvuN7bWz70dpiOYaT/pi+kj6NOE80kPpj2TCwRZGPj7rnUO5Ty/08oI3i
eKix+mHrqGVT5JTv6V3N+y/ftrXw6VuOjagJOSJG8UEs253kr7fx6u0h7/uH
TzkltO++9t7rBxgH6b9kl2YuIn3FHEX5+pjjxbHYOufoNeyqxPjhz8ff5D13
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
8RyvYYPSZ9RvLXsttsHEY+JRRx8d5jMj9SX5OVb+E8aBqrWztmEdZeqSgo5S
bQ1y4MXPj0zsaxQ9R99AH4NPBX5KcewpfQ7+0+RBxceYOKeyv96ifZqZkZqO
KttZ0TLKgTeOT9+gWCftJ/bXI87pq9dfF/IBkiNCNe+VI4KxlvuA9o499oW4
vWdRfj0zURqno+YW6vEQR8IaNWv/lfH4Zijqp7DjsTbHXJ+8apD8vTUlexRt
kbFb+9SjfE1ZA6J9sikPDnPk4hg71F7ltyj/vDNz/7yldNTLvXOq+sUz73+m
hHWUqUtTdZS+nzUk+kP86lT3blT/3ip/PeI52M+6detCXx+vwbN2xdwFn3/6
jiJOyrmaG09KOkptG7sm7Zqx/vKtWxf59I3qw1fe0Ez46rFded112ee+9KX5
mk7HHbcoRwQ+q9hfae9V95X99aZPk3RUcd3ze4icXRwTc1YzPhpTsEFxHomr
hVbcXxPWUb948smwDoT/8aWbvpBdvm1btnffvuJ1bFL0caozojVRakgpj0Qr
zvMY6PdS94pxhv5/mE9P2ReQurt99YtbjHWUqUtTdZT6ZHLqclzE4w5D/nrl
XKVAX44/3treXBIbU5zvlDVB7h9qPqGvFs297b+UBMnoqOhYZGdd9ad/usif
b9QYpyp/PbQTNqcTP/qxkBNCNic2bAm0d/z1aO+LcvG7vc+cRuioaN2eeTGx
Jfg8y4ZJHi9o+9xqJdG5Yi2PcYjzqGvbivM4YR2FjX1Lrw3++NFHw7Zh69bs
b3rzA2zngnxQ9G34nrJRq3FRDtGukf/ush/povMR1ddS36P8J23NdR5jHWXq
0jQdVeTL693TxCvh18xxffe22+bfEN37fTGi0XPMn8nFi38vudLj+uSqcYN9
mzGMPravxnlqdSJMIBUdpeNk7VT5ebFFKUffKHancn49/PU27/jfIUcE9iW0
UmxjJV8TsSy0d+YcRV6UbOEeasU8riU0Rkdl8+tY+DtjN6W9sgZFfmnVc3C7
GR1dP+b56qNaxYR1VHms53vQUWh84pxiu3mfL8rcYr+UTpFfF/wfuH8ZH6gt
HL8GOrfE7PI+/LyZg5Xf11aso0xdGqOjovVP9XkX5cdEnOMLBw8Wr5XXyvHl
3fezn4X6NfyOco4Ixczjk3Lrrl2VX29/vbRJQkdF4zm+dLJFDcobMcxfj3VZ
fFs+9ld/FfzY4/bOnJf2zr3A2Fl1HG7vzWXWOkrfw1ig2g6K20dLjZVD2cwj
jXHgQFjH4xyip+LXkmca8VF5H6o2etGGz2dX33hj+Fs6Krad2Cc5W1SnMJ7n
lf12eSTHeZwbuSvnzzrK1KUJOoq1JN2r5FVmjsnGegjHRNx73zHl9zw+z9jt
sd/jvxT767GGSl4K6uUS0xuvwRf7sP9Sa2iyjirXcmRuIf+oS664os+nr8pf
T3YnbE5nnXde9uFTTsmOePOb+/z12B/tnXsF//eXyvev23syzFJHxb5n9L+0
sXI+adXMi/vjvjg6t6/FlGrFcf5a5282YR2l3HpxG8Uedcc99yz+jo7lk1gK
3avMh7gurDW/HN2rOnf48ai+dlGbuCPn0TrK1GXmOipaKyF+iTFaMaL44OGX
hJ0ZWMsj7wT+vayrENsU+y/hb0LMCWvw1J+z/1J3aKyOimxQOh7F6pMzD7sT
fnqD8uttuubqYHOiphNjm9YKaO/yT6W946dR9k91e0+TaemosK6fb2on+g7W
ntT/luvx8Dzair64ar0/9rd2+5tH55XaGVxTfM7j51vBlPL16Zxhh2IdSuN8
m3OYLxedf/y6lYtD9tDYL0E1DchT3Kq2OQLWUaYus9ZRur/JA6H5oXKWyoeE
OTEa653HvKfP5oSfL3ma8eEv6sTFONapMzRSR+XfSy4H2iixS2h92i1rfudc
cknQTGgpfPX4G92Er8qf9fp02QOUf0rtHR1WWRdxrr01JbvELO1Rcc0+9cdV
tU3ZsIHiP6p8j3ymsLHExLlT517pnK1A55T85oxpnDet9bdqbJqCjtJ+7vrh
D0PtO/JNxN9tBqO2xjo04wk5N1+K1jqIhcKPJ2iJPI9Mq9rnElhHmbrMVEdF
tijW1plbVo3biv1gTsnc8pxzzw3+S1oPLe+z7Edl2k/jdFQUDyGfdNqvYk1o
06etWRP00+XbtoYcEcf35qTy95NNlnEtbu9V/qlu7+1iWjqKnNGKt3vkJz8J
z8X+PbRF1TKN65qqtilxeNL4yuHDWhdr2czVWO8mn0pgQNvUOlfsY9Q2dN1U
wwefifj51jBhHcU+sDlhKz33ssuq/fnMYPLrw1qHcm8p7ybIT4K1kWKcaek9
WYV1lKlLE3QUc038xZlbDlr7ZHzGZsW4vL9UH1THa1+S7tJUHbV+w4Yi94Pm
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
QeVDorV7PfK8ckMNGpNlG2wTs9BRg3Kete3cLoehfqy96yI/Vq7bB1etCn58
g+ys6Iph9q+2YB2VIPm6Af6taAfaM+16UXvN+yL8C/CPIr6SHDXWUabx5NeX
No5fHz5/6Kq2XFvrKFMX66iEyPsx9BQ5qeO6VIrrZ41/0fpn9DfzVvzP8D1r
E7Osw2tGJKoL1efHmj+qBk/ZzqoYq8LOWt5tvo+22AWto9Kk6vrEOfuLHJ89
NuW1eNAZ+EgVuZZS7qusozrDXNa+WHfrKFMX66jEiPLoEC9FLBR5KPD1w05V
qaGi/9FP5J5nLbTyfYliHZUocwu2UWKp0EzKRSkbq3JOVNbgaeG1tY5KmLlS
Tv8ItVtiorBB0VeTA806ypjZYx1l6mIdlSBR7AnXDzu7rtew8Zs88+TbQUvx
2CasoxInv0bkRn/94Yf31UXDf5XaVcX7SnYscs7/w623zNeaytKfs1lHtZC8
rVJjDg2FfmI9nxgTYk2es44yZqZYR5m6WEclytziGKfK3If5/8//9rfZ36xb
F2KbqftwQV4XMulxO8I6Kn10Dam/Sz+Ej+r6DRuG2qHov8g1r3omkHrfZR3V
LuT/RFv9/Fe+Evz58CdAb9DWabvEmij+NVmso0zCWEeZulhHJc6wOr/5c1zL
TddcHeabwDiOporfkzrWUS1h0LUaYGP91u23ZRu2bg31TayjTBN5OfIHIDff
JVdcUWysZ5Gzj00xqy+nqjmso0zCWEeZulhHtZh8XNt9993Bj481ULCOMk0m
zkXBY1WeP2ANX3mjmJOiqSD1vss6qp0cfPHF4L+HHyr5+vARQFupFo/652Tj
962jTMJYR5m6WEe1lMgfH83EeM34xlhOvj6eI3df8r4kOdZR3UBzTOacrA3I
BsU6v+1RJhWwOSk+Ch3l+ChjZot1lKmLdVRLycc0NJN8SYhv5hENxcZa/o8e
eii8L1lfkhzrqI6QX0tsqpdv21Y8bR1lkiD3wS5yVD7ySMgz4Xx9xswW6yhT
F+uodsOY9syzz4ZxmlqPaIsrr5u3R5HnD/tUG7COaj+6xmh/1gNov8I6yqQI
4y99cyuurXWUSRjrKFMX66juoGvKWr7z9Zmk0BztwIGwBkBc/sbt20KOCTZs
q2irjdu3L9RQSxTrKJMk1lEmYayjTF2so1pOlM8v1lHMO4vXW4B1VDcgnm/P
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
MX25GFTiTbPnIn0/5lGZDcB6hZGYRxnlMXV/VCTzVN+pL56+gEc5P8oYF7Pg
UXpWvnj11eH79PK95957+36/Dynv4jPVWl95yimZL8q5UUYRZsajIr1TxxhU
PzrM49/9LmzIZnJNWAvYFuWlGO3EDOtMoCNoDsKlsnqSqY5AXfS90jXS4wZ/
FHF9qb3A/igjhnmUURZT9UdFtiHlJAeZR8+8QTbMAf6oEH9vHmUMwLR5lJ4H
dNqXHHZYqF1OnF78231YeCF7H/8Tv3fsccdlfXsto41BmAmPinxN6KOZbH7q
qaG5TgvRRkwB68HAXFejXZgFj1IvqLR/CvEtWX+VKLea9/GbwvGZp+qTxvfQ
Kfamzwvve+4awDzKKItZ1OuL1+klbUD2RxklME0epWeE2hB/9vKXBw61+aqr
+n63D1H834YrrshyotRTyn4oYxhmWa8PPVN5+Evqk/pe6g/oq+/nXrzGNHlU
xPvhPughcKW+nlGRL4rPOTbbg9Gm9+BYvD4Qz13VUp8WItuaUT2YRxllsSx/
lPqJxFu01gJxKNZbjrHQ/dHevnkU1ZlwvT5jCZTlUYde6HKeog3oddeuO5Ij
//Sl4XviUORFxfvqN/Q/zxL7v+KoozIOVfgdw4iwbB41SC6DSDarHjRyPau5
l5fN2j//XtLPo7DzZ79ttBMleRS8J2DYvD3U1VOyXtEdvQAO1TdnI38U3Izj
4ovKtttvC99Xjjb8if0yvWSKNoBw/bYxVBrmUUZZlPJHidcM4UEADqV85KyW
zgi2UvujjHFRhkddfMklww+a7r9z587kpS97WeBR123f3n/MAd+RH+pVr3lN
cu+ePX3naBjDUJpHicss5U9Ken6okWIE8sdI/VHIZeQztv0+v4DRTpT1Rw2q
OZU7rvxQ6CGqv7dQ/I3iY+APytU9H+sYywQ2NHoIHpy238soBfMooyzG9Uex
ZrJeY9vps/WkW+BLad5yiJ3vrLPYSalPiu0n27fzd+HaG/0edqOQH2V/lLEE
xuFRqvlA/6evXHttsnXbtmzj/y1btya37doV9uU9YvnIiaLf7g033ti3v7bn
nn8++w38XIcdfnjgXWvXrk1uuvnmcMz4+LzXd26GkaIsjyIHtVAud2RtLEPJ
vR9VNiOHOX7ozRPpf/yPL+qh1E42S9i2X1GU4FHwGeytg/QJ9TFjH/LwmLf8
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
jGeeukxN6+zEOiW21es6eqauuc73bLloO4/Svd+4aVPWI01r5Lzn7nLnPX4p
1nfiW1nf0VFZ33Vfm7a+N5JHpfcK/4zio2LZNYvfxg+Fr4i8feQEmOjciXg9
OVLqMY0/QX63RsdJNYxHxf0j5KMhpmV2ekQ3HoV4Puyn6vu73Brow2RtOHba
h+KII4/s1k8588ws/qXJMdXmUUZZNJFHCcRYKAYfW0v9dcpunR1yprgm5Cp6
JXFcih+p43o1CbSaR6XX98STT4bYN64fX1SI4a/5nO9b3zt/Yw/W+o6NWP6M
JsgroYk8SucOd1Jde927Wcks1jr8Q/w+PrGAKcgGXSt5isrNxeaFnwqEemhN
lNNN4lHpteCLIY5eMS2zlqnySSH31Pt3mrlZ4bjXdGsGE0cYx1RjlwYT5VJR
3OC854h5lFEWjeNRyrXfuzf4obBd0ythmr0eZq1TKg+fnKm45i51qUCTbUaD
YB6VJF+59tpw7djBe/Wk5j9nJ7a+d16Z93F8KzGMim+dVA/XeaNxPCrqPyEe
Q41lMKtrimvrqZfEwSn+tq6LOpMfufji8Jts5Exh74jPqTFoII/as2dPsNuw
zqqX+SztsfLHE4eCPkMfC/6epj6zMepDQRyP4l/4bdaYbHwaIGtjmEcZZdE0
HqXzpi9i3eo+j7516wbkc6aIH5FO2ej4kQK0mkclXbupcoSpzUBeUV3qqYwz
7zem877JPQGaxqN03vTaVd3oLC9qRtCcgMMorlA64dTGNdI1qVMgmxd5Yfiq
st9uim2/QTxK57tq1apwHaecccbc9AjlLsm3iV9sFnmvcR8KfpvYF2Jg4pyp
5Tw7jPGDP/95cuud30u+dceu5K4f/zg77sLyb+HYMI8yyqJRPCqKb1KNG+KJ
J1/jpgrb1p6tasOGkA8jm9Hmq65qdB5+EdrKo+J4KeY78564z6b4X4vX9y19
faa4bu45dn/Js1rKrxRN41GAcyfPQrnrATN+LjU31q/fkPnw0demWv8hqo1O
ng21AkIvwxUrkt2RzWvZv1/w/ZnL/qbwqPQ6OHfi2ohpwQc0r/4RWucvuPTS
rC8vdqRZnE/cZ+odq87LYqrxK/fZAkqM7z333Rd0F2x+bIobmlcNYvMooyya
xKN0zsSMKHajJ2eaqlN2c0eoQ7jyzW/OdMq1a9eG9SwelyajlTwqtXdz7YqX
Io6+rjX6yqzv/E1fONn6yWXQ+l7X+miN4lG5Gg/4Dom5BrPWrWMZgb2BsSXO
D0x1bCMuxW/D3/htdGL6TE0qtxUfH2OLjT/0Wpv13G8Ij9K9gu/jgznpTW8K
OUPz7B+hPCnZS+lhFWIOZnA+cR+KEP9yzDFZ/Lg4R5+slR92idg/+h889vjj
2f/33HtvcsHHPhb8UtlxZgjzKKMsmsKjhtd9biaHyuuUbLFOiS9+KjlT+fiR
CuiqbeRRcY+0YOPurG+T7tVY5S1c4zW99V050Tz/cU70cnW4Wc/1JvEonbN0
FNUcn9e16HdXr1kTzofXbH5M+d7qd+BNH77wwixOatV552WyqqycRvfEto8v
mjyef1q/PrnzRz8Kn80sRqoBPErzg1r1K449NnB//EDz1yO2ZrmhzBvOrZcD
O5vzinOmVM+I+Bfqp2jeFj3XSz3rWcxth/tz7N133939wDzKqAmaxqOUa0/8
RM+GNH+dbyY65bZunR1kLXJWuQjkJYBpxY9UIee0dTwqvSbu6XvPPTcXN9+O
Od/devGtxLrE8a3Y+pedLzKHeKmm8Ki4/wR+qGn0wB0b6f1ET+Z86NGu3s6z
0PXjuYj+SYyW5JU4RzY2qV6a9bQomIviSPih9tx/f1jP4Wlfvv5rIU7qN489
lh1r6mgQj1KPM2JaqhEj3bWVwp1Y0+FS1NNjvZ9p/cCozxR2WngmtgDqp9CH
GuAX/VXnvv/6kUe67w3RD1S7kjn79Vu/HeyA+KnmAfMooywawaMkv599Nos/
J9d+1jJm/ltPp8QmSW1hxgJZp/sKlrumMWd+2ZGRxI/sffjhLC5lnmgbj9L1
3nX33Vm81Gx7m1RrU3xrvL4zD+h9sO+pp8JYlZFp6KnYSZnr6KqzqI/QNB6F
74XroCd6/P48wfMj+wN9IwJmJCeC7hhxTNn2yZm64cYb++Oj8hhwjgvpxrF5
RS7jkyIHRb85ddSdR0X51cSswVXOv+iiyugRWtuJ6VOPwHlwvL6cqfPODzYr
zueMM88MtivmMzGrrEnoIOQFgngO6G/mKTIbzn/h5ZfPlvfnYB5llEUTeJSe
ye07dmR162bt867SFvcupc6QdEpiWELcfFI+NxQ9kjHF9k9OFrIPWS5b1Lw4
S9t4lK7p3NXdXvdvOeusqfVnrMumOD/0njgnGl71q8jWr01xesjAQXoetaTQ
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
l6n8npldq4Y8SucV9zKvg11qY+qTQsbFfXm7ebLD+NRgWQl/RC/g3sHrFeeP
nsCzzBjB4ZnHcPf8GJJfKps2+6JT8lwNyjfs64+e2hzmuVabRxllUUcepWcP
+wfPO+sNfmfn2vd885KzkpOsrcoHRe4iG4fplNicRqo3kXR77KBbzjK3II+m
8yg9j8rd5x6y9lWtntQ85zkxKOgCyAJic+j/EuuqzGm22H6g+BPeo27HQL1f
MWD794e5rvx986h+sJ7ovFVLvNLPXxRjp/hwxc2NNN5D4vXQNeFE1IOkd9/R
UY8dPcPYAfEvi7tJjqlunPwAzFHGtajuefx7xKXOtGdUjJrxKJ0TNTjR/9nq
1D8CLoTMo7aWOHYsI5eSlXBuyUryl8TVVduUOD14PXaRIrmY9eJLx5HnRjkB
+TzTofc/99zMC+ZRRlnUkUflz5m6NW2N55NtSTHTimNSzWfiVEI+aFp/WHIS
Xz02UNWFkt1TsSPEimd2pEgOkitCDAk9dYghwS6PLL7hu9+Z13QIaDSPimL4
paNWuZ7UVOa54lKjec4zzzyXHRWftOz4ynvGB8X8x1ZL3C+v6Evso/gTPReq
h6C5RKw++SXkQ2HbR99C9+D3phnHX0cepTHjXBlT7FuF9Q8rCI0rfEe1xfM5
8X0YFK+X7o8extqEDJU8FSfCD0Us37929tH4xN/VsYmF4jtr134w+LDgT0Nr
Hhb15Jm13KsZj9L9wz+omJba2WKv2RZkkvoIshYjE8mdimObJSvZFxlI/VJk
pWpEsPHM0ueNepD4kTIZl0Lzs2husS86BcfZ1ZmvIOgPFeFIo8A8yiiLuvGo
uO4zsbjIDvwsdbEhTU6n3Jr1N0eflo8fexr2KfXEk46I7gi3II8ZGYmtEp1H
+SKMo/ZFnrJPPN5aB4m9ly6pjXo72m8euVHx+TWRR+X1PNY/7nV160lNalsc
g4JOoHg9+m1jg0VX1dxlLrOer3zzm4NcYF/lEvBd5AS50ugPcCx8AsT8MbYg
0xWSrj6ofiaKlyIvGp9UwJTmVR15lM5NufrYseP3qw6d58qVK8P5k/sRv6+/
M90wBb18yf24bdeu4HOCg8kHypzEfkUdSHxzyKZMJsXHVA/ohV6chfylfVx0
Kbs+mKfeWiMepfuKbQQ5wFhTJ75ueoT65CHvGG/15UXe8T7yD/sRdjfFNktW
YkdCfuI/wudEXmMcr8f9ZL4Pi7fLx0kQm1rXddc8yiiLuvGorGZmmmsPX2i+
L6q/lk4sJ5GR6IvEdROXFNuXWMOJVcH+GeJBopwPQAwI9lHkKvHP+PHXrl2b
cahhax/2J/TJqqyPjeVR6bmzvmEr5Nre1rmndVvvy8zzfLxePi41jkFBHyA+
BV0o2F/TLeQ6dPgm9lmOxed8F66F7vv0M89kQz1oLqMr86zMqu5c3XhU3H+C
e4Edhvpz8WdVh+49fXAZc+Ti/pQvxxwHIFeQp9jtz3n3u4NuGveOgKfj4+Dz
wtjo1OeUn2/6X/21FR+V+b6qLsdqxKN0PtRBUUxLvXxRWzN7KjIOGw82Ueyl
yDj8UthTkZXyz8ueCq9H37t1586+mBNh5Pmm+/3ss6EuJ8cnHhXMvAfbBGAe
ZZRFrXhU+tyi+8iHnOXaN4xH9eL1tvX55tXL/J3vXx3Wqnz/J8Xc7+zISHSZ
+D4qr1P3PI5jYb3LdMohNs2F6D4ste8s0XQehd4mH0od6kmNPM8HxOvxqhoR
6lMiOyqv6OrE4VDfhOeBY8G3VPu3r4Zv+j/HJZ4lrst2KOcLGDT+ff+bR/UQ
jQd6fzcWbW34v5LnOwiRTqi1BT1Tn3Et37jlllDXj/sS137Gl4ENCp0cHSzP
nbJ8+mFzJ32f7+Z/vzbjWBceFY01tkbkqvpHVFmmDottRlaSD4qNSDmgmp/Y
V895z3uDz4l8vb5cp4UXhsbrDcPBg/1xEtgP6rzmmkcZZVEnHiVZLB8yPhRq
zzVRp0RGohfyvuL1ZIvP585jC2J9hzehB+S5U1Gvx9iGtH7DhuyzfJ2pgagI
fxKazqOojcx1hR5pnbWzzvO9Ly41qiMZ5nlnLuJXws+M7VTcCVsrcx8ehK2V
517xeugR4bhpXf+i3+N38N2qNw/6BBhlri+yHUwZdeJRyjEnFo2x5Z6ph3dd
nrssXz4dX/LkGPfTzzwz6J7kKrHWxLopsbU8k9jfievDZxljqXioPLQOs/4q
Piq73zUZx7rxKGJPFdOCv7qKekTcr0RxKJKVyDNkJfxFeXjK+4RT4deEi2Mf
7fMPxfF6yxxD1tjTU9uUekRV6l6PAfMooyxqw6PS55ZY8r9JZTS55UvX+azu
lrebx7lO8CZ8bcQ9Y0/K14hYs2ZN8rnNmzN9ML/WDvTNR71L5N949NHfZt+p
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
Ihob1auMfbHMc/mkyKFS7f+DB90DZVpoO496Iap7ju2KeYgcFo86/Zx3BR8V
78Oh3rd2bfj86GOOCXopn23fsSMco6i3tDElmEf1kI4F868ork85UshWPd/2
9c8X5lFGWZhH9WT8F6++OuNMV157TbJ5+/9KPvn5zwdbJ/YkeNTbVq0KtXj5
H10Teyn9IkGbxqxqMI8qCfXf7czd9557bhg7cqWoXal4Kv7Hpspn9PMhjxAw
5q3Tj2aAtvMozUns9Fw/ti041NtWnRe2d/3DP4R4PjgTn8Gt+Bx+hd9K9fqV
M2U714xgHtUHzTl8/aovUVQHmJhqbAbxd4zZwzzKKIvW86hU9tNrlDWZMXj/
B/8xcKiNW7cGPiWfFGs0azjr9ol/tzKLeSJn6qGHHgrHca/y+cA8qhw0brt3
7w7jRv7+uis/m3z1lluC3UDz/q2dNYZXdFfWfnRU5aK0UUeaJlrNo9Jndd9T
T2XxUPicejxqVZC/zE3V6Kf2hHxV7+jsA8eSbEY3emjv3nBMx/lNGeZRi5GO
CeuR8q7FqZijquNDnMutO3eGfT1P5wPzKKMs2s6jJN+pTSrb56e/9KXAnzZu
3ZL8zx1fTS65/JNB3rFh82S9hk+xvmOz1/e+d+ed4ViOJZk9zKNKIh0bcvQZ
tzPf9e5k83XXJZu2bUs+/pnPBF8s675y/Mk/ie0Hjz3+ePi+7QeTQ5t5lJ5j
1iGuHS4l7gSPekfkkyIuAN0Uf2mXZ63KPkM2YxPgGOxHvQpg2TxFmEf1Ix0P
eLxsAugLbMqV4m9krGr8bNy0KftuG573KsE8yiiLtvMoybqT3vSmcP2sx3An
fFGbtm1NNm7r+qTIbVYeM+s0a7ZiSRTzBM8iNvBgula3cu2YE8yjSiAdF3Kh
se0zfy/ZsCHzxcKniO+TLir7Ac+CdFRqsShnylxqMmgtj4rqpiJnuXbmmuTt
OyIeJZ8UHB89FDnc41KrwneII1A+K/Ob+CpgLjUlmEf1Qc+ralcxT5mPbMhP
zd2jVxwT/lfdSfrzPrFvX/huG8dtXjCPMsqizTxK10i9CNk+yYcKvqhtW4NN
nld41QUXXRTkHvYjYpy69tGenRR9UnH5a9asCXGC8W8Y04V51PjQ3Fzdma+M
GTZ8uNPG1H4An/rwunVZ/XP5YtFX0WHJ61csIDqqe6FOBm3lUVqLPrd5czcX
rzO/8r6obEvfI5cVnxSxfHEOFRv/I6uVz6pe6v/59NPhd5o+njOHeVQGXe+j
j/426AbMUWqmMKfhTfwtn5TeR7dQnB92hL6cKa9hU4d5lFEWreVRUT2dt779
7VlM09U3fj3E88GheluXUymOhNwo2Ui1zrNm877kIDrQrx95JPsNy8Hpwjxq
POj5vnfPnmxNJ3419sVq/jOvw9re0VVjX6xyptQLlZor5lLLRyt5VJSnSt79
IF9Uzye1Kqt5TkwUOmh+v1g2xzlTZ5x5pmXzNGAelUHP6paOLJWtqcuhVnS3
zt+KmQ4+KT47psuvVB+V/W66+ebu8RzfMnWYRxll0VYepev7/9s7/9c5zuve
08ullP4B4WLcHy8t7YVCCLQBYUxpTEibG5ybulgoNThISXBMYoy/BQWrVyhC
UdWYuqkqVKc4jtvUcV2oo1qyqdXUpjFJjZM6xolD0tSO6y+6JLGD0wSRz+fu
69l5z5yZndmdnd2ZnefZ84bhI32+7M7OPHOe8z7nfc4598gjea9c6uvJRVkf
0uak2NM1t8TGSaXLZ7+m5llzpqiZeujcueL9fL/uDc6jloOul557/MyCQ2Xr
/tTJ3T/97GfDDICqr6r1z2F9VOqsSjVTjqWxjTxKn43Pyme2ef8qh7LaPn4H
/1NzeWc1gAWXsvWs8H9bM+U2Yg1wHjVFdh3Ie/6vX//13HZWeRR+gvpN6Hv6
HfUIhmehC/yvn/wkvOZWXceB4TzK0RXbyqMANmnvvn1FfT11IRUOpQN+Rf8J
bF+1h9T/zrUkRc2Uev9hI48cPZpfT7eD/cB5VHvYa6WY6HW33Zb1lzg1k4c9
dvJk8DvLOYJ9ub+q+IGt6yc+EbDjvaeWxTbyKICv+NY9Re7T2td6LjWtgyJf
iq9K3UnB88ucq6meld7qbpvXBOdRU2TXQfUC5Jem/OnS8tcJZ+Jn2N9yvurS
mZopZlKoVsD7+fUD51GOrthKHmXq69V79OajH89rQ+p4lOpFfid71tiL6/Z5
7dd8RReNjSTfRQ2KYkpJX9sNwXnUEsiuB72hpMUPedi7atb9qVNB64q/yjqu
759W+Kj4svwe/gGaFuA9V5bD1vGobD3S71SzSW3fiGYeVeSkVLdPfGuRFtDO
AOT6Mn/6jR//OJxDstd4CDiPCtBnZW65tC5VjiQepXnS+CBvsj+75NKZmimu
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
d6/nNj4lPM7O5R0yHms1T/iTqh09cOBAad4etvCnk6+sA4552r/we+bn8Knr
Dx3afeqZZ8L/N7lXbi2Pyj7bSy+/HPKOYZbYbbf1Nne3bU6KOn7uA3xq3fOo
5615fFRiFqrrx++45957wzVaZRYqzwa+6t88dGb3rx78+91HHn88t53r9ldT
4VHMYSj32tkch8rX32Qtai4vz8qQOak628wMQNVMfeiGG3KbhR2jH4X6+9nr
ahFstvn+307WCnWRL73ySuPf9IYEeZSeuTvuvDPcp5CLutTq4IblUeufy7vg
PflaqZl6y2/8xu5XnnwyXJd161FLGHjfdh7l6IrYeZTOE1+DmEmorz90+8b8
yMKfnGr7OBf1gmb/HjIma/vv2pqpt+7Zs/vsc89NL2BT74g5Nkx74mNf/nLg
Uej9Gl9rIGwrj9L6/+jBg+V5acoPbWL933U69MlU7yd0TMPNXd03Ez+AT3F9
Os1C3SnWOv4psX6O6yavR25W9rOPexojj9I5kotSv5HC7m2gv0SNTYQ3qbcp
PH/IeVZNtlk+KvWs8E/VwrBvcI5aA41rN1uncHxmHWzE9qXGo0y9gJ7FYeui
ZnkUWmnN5R2sX6CpmVJ/VHgVtehg1bpr9CzoW7CnJzLfSbHZIeE8ytEVMfMo
4sA6z/ftP1Cpr99cj4mcS2X6PvWCZi7v0HFZaVaky1fNFH4ENVPkMe6+557d
P77jjhBzwzayb0wv8Kxt/MFrr+1++/nnd89/6UvBV0br1/S7Q2IbeZQ+83cn
90Oak/0DzktrPsq5WPjMJuMH0qTgn8qvq609mRM/wDdEz6J+aORi4VLwq/xv
14RoeVR2Dbiu6r0/llyUtYeauce6gKsUmutheZ7V+dmaKdWjcH4cyqtqLmB1
rV24cGH3ue98J9hitOT/+vTTtb/XOxLjUdXeVcPXRdVzqdJc3qF6BlbmTJHL
ZV3iL3buO2m0FMdOngy6VHL+1Pvtv+mmgksNtI6dRzm6ImYepXMkx6ycD/mf
zdVFzeak8GnxbTX7gdjsZvbsYs4U8U31bqW3GvaQ/2sPZ66pavRlG/UV/kRc
HjvHnv3SZA8HG+kPZbCNPErrX/PS0AgNNyttfvwAXS3rRHXRw+diyz6z5lSz
9lUz1ZSLnecP5Otswl2pD3QeVUDn9y9PPBH8LGzy0Pe9zbrQ+RBT4jyH1lzX
cSlrm8WfdChXddXVV08vtOlFAchBsRY1cz6Pgw2NlHiUyUVdMeHZysFsJhdV
5lGs2/7m8i5+f/6N78A54DuwLi9kfkCXXinA1lhzzfEtWMtDwnmUoyti5lF6
Xm+65Za8vh4OtTE9UwOX4pyIyasX9NB6fMulpK+BP0nzhD3E5+HQns01tddY
YL1g54jNU9+Mr+y6vg3A9OLFD+Qz0ycv6FnHsv7vOh1ysawx1ttmcrF781mo
dk41tSf4+3v37Qs+H7YD2yd/oG7NXMzqCFn7aPvoWdlHj5VYeVTA5LrhVyn/
PiYOZe1g6EkyuedaD5vh+UV/VQ7VbrFO8VM5xKXCzKu3vKX2krMGscnYYTQC
9Hl5zXV9qyH7LOceeSTPB/bbI285LtPvXN5FualLZ2qm0JNjT4HqUHN7NbmW
reqoDHdFm0p8YEg4j3J0RbQ8yviRPNvsMyEXtfH+EvWxeebyco59z+Wdv2+X
a5zhT4pr6eD/2Gfq9FWrXI1/KvcET0Hb9Bmrk94Qto1H6fNKc0L/5FAPeNfm
1/w0fnAyz8US82fP3dy6L+ZUq65f2inlYFXrv+eyy4JNsddYX//tG98IcVJy
sbaWf93rK0oelV2D5771rbz3Ptx1Y3N3F/Ao5X+I53PviXMRh+jjXH/XHOF7
2SwpuBxf0RXC6TgHOBTnhP21eQedY9N111fypOSl0J2Ci95nohOqvVKGm7vb
Piel/Xr4mq36mim+hp4+2Tpg/0UrJG1LwJweVthdbCzxWWLh+UwV1/U5Ro5Y
eZTsnM4bHX6oCQl+5Hh4lHqgqxc0+yE6oyF7oNs5kKobQY9vNfjVg59RdxPQ
1ItiAtXe21q1TWDbeJQ+k+bz4JONK4ZwKhycz5hysXYWqvwQfVUflhtuvDFc
29z3y641tYHs89SfoOEn9t8Hl4qRR+nc1HufHOmQPcW7rAd4E3F08g3w/HX2
w6jaXptz4nvYX9Yh10mxfQ54FFwfn1Rrk5g/54jeOmCOPSaWD49Cbzq4TU6E
R+V9lB5/PK9FGkcuqsyl7FzeTfe+UM0U54P9xC+jnxXxAOw/ef/ataA18/rr
Ib9PXJbe/dQP2J8PAedRjq6IkkdlzxbxCuLwnPc46usbYvNZTgofUj0e+uRR
2sP5N+8j35Ve1Nq/sW9NHEp7t40jES9CN/KjN97I55Bi67B51IYC73s+DPRs
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
f3KqqWMuL9eb2KZ8RfZz9XiSZgT7iE0nRiY/5brbbstj/Hz+XK93uok7lf3Z
0O8imy9Ib9dqr5wYkTqP0nP6oRtuCJ8PP6XQ841//bM2pSXVXN4iF1uJ2Ru/
lN/Bp0WravumKBdga/dndFR1Pm2We2DP5zo+dG7aW1f6qIX+3gBrKQYepXP5
y7vvLs1fGrOmz+aH7DqT7WUdyR/lq9XrVXWhC9dZ63Oa6grRA1a1AdHZrUh5
lM6NXJTOe7x1UfXcxc7l3Vx/weJcsAn4MORWP3bo0O4Xzp5trvGT3bVxrA2s
fedRjq6IgkcZ/+aaTNNU1NePt0ef9SE5TzgMvi/nTQ4JPxCfkti4eolZvR5+
Iz7k/kyvR517rtfLONEyPvSxTH+s/utoF+RHjup+d0DKPEr35qmvfS3kXVgz
Y56XNv84FdZ10CVmtTRV/sOcM/WLts+EnbVDvEHawKJuf99cX1Y+q/Ss9I5S
f7Mx+Xmj51GmTlXxGO7JGHNR83ShrDM70wmbqFwv2iRypnadFXq9vbPcv9O5
7c1nWGmOKf4mGM29XgaR8igbE5itixr7UZznWObycv24juT2QLXX6VjhPMrR
FTHwKDvTQfUVNx66feR1UadybR3chb7s8B/4E+fOfszeLf0AviI+Mns3+zs5
J3jT8SyOH3ppZD0iuubf+Ft8b/ZwW/MZZeyzgm3gUapDwe+LRc9XXn/TZ0Fz
eVn30lVJr6c8LM+DngnN2sn1erXcqU2d1fTf5Be4jtSTgyFnlLTB2HmUzuOf
vvjFEIvBb1Jd1KZ5Ux13qtOFVntEsM74HnyQmD6cRvn/av3q+s5zyutzjenb
317u5RMbYuRRJiag5238dVH1/EV6umIu75DnX+SieHbsDD56l4/Fds2D8yhH
V8TAo4T37T+Q19fDK8bEoULOyWislHfiIP9D/oA9XDko6YY1+5afwa+kf8r1
ejWv3fX8eD3lwXjvU5PvgzHe62WRLI/Kzp15Rtw3+Aea0LGt/9njlFm30++x
poknEB9g38VfVe2+ck557f7k+zzn0oqtqqOSz8prcg3Jib3y6qvh2o7Nxxs7
jwJcs3e/5z15rVvb2bX9cKZmvV5VF1rtzxPW2eWX5+tMGjvWCPnPvnSK4nhw
O84JPnrPvfeGazum+7wUIuZR5AG553AQ7nt0PCo7V/V4GJYLlufwct+ZUQli
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
m9wkWjzuLT6tzcPin8G9+Bm/Qy++zev1lshJZf0m4H3sz/jobXpr1+UOsBn4
ClwXaU5iWv+b4FG6Pq+8+mpYW5oTJl1w7ntNfDJqfDTTCY5ArKes19ubBH+q
W1fMNGX/KXoWzudT4lGKD/CMB4zRJq2KkfEovaeeG54j+Rfp56Jm80c8y3kP
9E4csngt/DO+Yi/svY8ZzqMcXTEEj1I/B1uDpPdVfzrVg1cP1XTwDLMHcX5w
r7zXERhLjdM6kJ0/vfWk76LnYNBvLfR/i9mm8iPlg0V/XRYgJh6lc0WrrxlR
NpcEj8L/ggNxL9Hj4bepN7h+n7g4/hnc48YjRwLfhouIf42VMzXmpCZf4X/E
DjSXd5mclM0b8Pf4+2/8+McbvtvLo28eVWePbS+zKo+Sbo94F3Y6+GJZ/ZNy
UdWeffU5qXh5lc1zSgNhewvO41/EA9Qf+p+++MXS9U4KI+JRej/1jgLv/r2r
8lzU+ufSjvmYncu7Co/SWma+pr3vscN5lKMr+uRRO9lRhd2/icNbDYk9eOZ5
dukBTb+tH7z2WvbChY1EC5Vr9hJ5nvU5Dpt+A6H39QKfWLkoO3f3+z/8Yek1
U0VMPErPFrkS9Y2S5ke5WPUg52fiWDwTcAP8VvWIgH+wNjjyWqfR6PWWzUlN
5/Lig/KZ0SYWuYCWPq/piUaNZMDI7v8i9MWjgi2uuxaVPj9636pNZl2yPuEQ
tl9+HuvKuJVyVZqjC//giJlX2R6Q+KFcC57DeTxfvJ7rIXtM7GS36T7EjrHw
qOw8iLdeMblH+BDkTrSe0+11vpj/dJ/LO/098rHqtyJ9aip8w3mUoyt6z0dN
bNpz3/nO7hNPPbX7r08/ne8jen16IDTlo9iz8ac0b4N8FDEQeu+de+SRYh5S
w/sqRxUbx7L9r9mzNYt18VzeaZ2J6pk1d3cb7MFoeZTpw2jrofA18FdZ33Ux
BA7WPXs+/hd+GVo/7rPmOU1n4doZAPFxp5kj65mhPR9ftU1vNPm59J7RPv/U
174WrnVs67/vfFSdPQa2z4T001VbTI9j7O7fTs4JPSraas4TP0t8X3Wr2HS4
MBpsuAT3RnN2La8Kx96iJ8NY5kc15aSwr5rJZ8+9aU1yDazGNLb12Bpj4FHZ
ObB3YgO0ju1a7p6PifUoOJD2muXrw8q5qPdec01xXyPyrebBeZSjK3rhUdlz
RS4E3596+GMnTwbtEf0inn3uufxX//iOO3IeJR0JX9Ujit599FxQ/zEd/J94
PT3C6fFHT66g9dupf66V39d8qrFD1/99+w/kvQs1I6splk9OgjwFPgx7PJwC
JKkhqWCMPKruuuu+vvTyyyF2zxrXuq8ecKiQe5rwpz+/97N5jwieqdC/Mmg9
T+c9/NLgUtMe6OQzVB8oX7Wtj2vn7sa4F66dR8m/ff310Eff2mP+/W/f+Eb4
ufWJ4EjKu8gPJbZfNzsWnQB9vIlP83dXXX114P7qi2y5Fa9pZ0mR3xGXmtUD
7htV7kq8SD0jeG5VI1bl+VqPfEY4F+tS1y5ZezwiHsUabNK5zNZHXbIEn4j1
mPIgPdPL9UCf/i08TPVlxFpAjPa1Cc6jHF3RJ48i1vl3D5/LY57s42iROFS3
wB6sHjo834rDh15bEw51MeM//B5ciXoqdM70npC2RHFQbCa+KdyKz0E8Gs6G
5r+KfObvSHtR6PrzTPO5sH/4PEHfV9O7L8yMmvif0pAQJwbJ9dZtwBh5FGCd
v3ThQngGwr3IzoVzuyLrS9+Uj9K6VmyfuAExfbgyPnCYmzvhHaqJCtq+04W2
L57aKLOOM20qn0910fiq87R9tiea6nfIV4MY98K+eBQ2FHsse/ijN94IuT/6
l/Dv/HezgzgY7808CuZSAOX31QO19pyyXv6scfJW2CJstrhVNR5GvAC9gWqt
4FbkrTSnStxqLJyKc4Hfix9Ve6DbXuea35vb4wjXY2sMyaN2flZb56f3Yj1h
N+vsqvIxoUYKLqGjxKlS41WrzOUt56K4tyBG2zoPzqMcXTFUvz7Z0We++c3Q
v/wlo8mj397effvC84oPhA7immuvDTH7gEofPkBdFOsdjd/HDh0KehP+zsY/
leci9knOCp0bfoHNhzWd6xj0gLpm6kPMHl03l1W5KLR/6lEsTdMYOWIfGAuP
Uj0g/tIjjz8efFQOeAG5lu8+/3z+uzxr4lHVXpV8D/+V2kBiBna+tGIH7IPU
veNz0muCfiSsBcurNH9NuZ6CX42ZY037pRDLVw/4RXUo6v/O72MLQKz74BD9
+vLnZeLnYo9tnmlnt9lu1H5/p+BWTT8HstnYYWo/sfnkpqzNls6VvQAOQlwI
bqW8jzSBm9IDih9xTuojXe0rqfVIzIPfwf+s7SmbGjadjzIxKq2rply/YpPq
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
      "], {{0, 790.8685419403014}, {510.04420383099864`, 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{119.98960000000002`, 119.98960000000002`},
      SmoothingQuality->"High"],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{169.24420383099857`, Automatic},
    ImageSizeRaw->{510.04420383099864`, 790.8685419403014},
    PlotRange->{{0, 510.04420383099864`}, {
      0, 790.8685419403014}}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Check", " ", "on", " ", "all", " ", "of", " ", 
  RowBox[{"them", ":"}]}]}], "Text",
 CellChangeTimes->{{3.867177926425803*^9, 3.867177974741142*^9}, {
  3.8671795988201995`*^9, 
  3.867179613987124*^9}},ExpressionUUID->"ead5c61f-1253-47aa-a7ed-\
f975987d30c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpToFourVert", "[", 
   RowBox[{"permutations_", ":", "False"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"all", "=", 
       RowBox[{"Generate", "/@", 
        InterpretationBox[
         DynamicModuleBox[{Typeset`open = False}, 
          TemplateBox[{"List", "ListIcon", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["List", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
                 TagBox["28", "IconizedItem"]}]}, {
               RowBox[{
                 TagBox["\"Byte count: \"", "IconizedLabel"], 
                 "\[InvisibleSpace]", 
                 TagBox["7032", "IconizedItem"]}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            Dynamic[Typeset`open]},
           "IconizedObject"]],
         {{{1}}, {{1}, {2}}, {{1, 2}}, {{1}, {2}, {3}}, {{1, 2}, {3}}, {{1, 
          2}, {1, 3}}, 
          $CellContext`SphereSimplex[1], 
          $CellContext`FullSimplex[2], 
          Transpose[{
            Range[4]}], {{1, 2}, {3}, {4}}, {{1, 2}, {2, 3}, {4}}, {{1, 2}, {
          3, 4}}, {{1, 2}, {2, 3}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}}, 
          Join[
           $CellContext`SphereSimplex[1], {{4}}], 
          Join[
           $CellContext`FullSimplex[2], {{4}}], 
          Join[
           $CellContext`SphereSimplex[1], {{2, 4}}], 
          Join[
           $CellContext`FullSimplex[2], {{2, 4}}], {{1, 2}, {2, 3}, {3, 4}, {
          1, 4}}, 
          Join[
           $CellContext`SphereSimplex[1], {{1, 4}, {3, 4}}], 
          Join[
           $CellContext`FullSimplex[2], {{1, 4}, {3, 4}}], {{1, 2, 3}, {2, 3, 
          4}}, 
          Subsets[
           Range[4], {2}], 
          Join[
           Subsets[
            Range[4], {2}], {{1, 2, 3}}], {{1, 2, 3}, {2, 3, 4}, {1, 4}}, {{1,
           2, 3}, {1, 2, 4}, {1, 3, 4}}, 
          $CellContext`SphereSimplex[2], 
          $CellContext`FullSimplex[3]},
         SelectWithContents->True,
         Selectable->False]}]}], ",", 
      RowBox[{"perms", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "[", "4", "]"}], "->", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Permutations", "@", 
         RowBox[{"Range", "@", "4"}]}]}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{"permutations", ",", 
      RowBox[{"Union", "@@", 
       RowBox[{"Map", "[", 
        RowBox[{"Sort", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"all", "/.", "#"}], "&"}], "/@", "perms"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", "all"}], "]"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.867740254519722*^9, 3.867740377920373*^9}, {
  3.8677405217147512`*^9, 3.8677405418302417`*^9}, {3.8677406096812153`*^9, 
  3.867740700780696*^9}, {3.867740832339797*^9, 3.86774087265983*^9}, {
  3.8677409385668616`*^9, 3.8677409463738747`*^9}, {3.8677411006966605`*^9, 
  3.86774114387824*^9}, {3.8677411971290936`*^9, 3.8677412057303195`*^9}, {
  3.8677413142945657`*^9, 3.8677413174894047`*^9}, {3.8677413961532464`*^9, 
  3.867741422100089*^9}, {3.867741483575591*^9, 3.8677415037095046`*^9}, {
  3.867741567368374*^9, 3.8677416082604866`*^9}, {3.867741919758643*^9, 
  3.867741929156934*^9}, {3.8677420036927967`*^9, 3.8677420089990215`*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"1ac1a2b2-1641-44bc-a15e-650bd1e424f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tests", "=", 
     RowBox[{"UpToFourVert", "[", "]"}]}], "}"}], ",", 
   RowBox[{"Or", "@@", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"ExistsZigZagCounterExample", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tests"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867178003893925*^9, 3.8671781556401396`*^9}, {
   3.867178228870743*^9, 3.867178352712055*^9}, {3.867178407287036*^9, 
   3.867178441312071*^9}, {3.867178475753821*^9, 3.867178638007246*^9}, {
   3.8671786682281623`*^9, 3.8671787791386647`*^9}, {3.867178816766863*^9, 
   3.8671789601953125`*^9}, {3.867178992805285*^9, 3.8671791391450796`*^9}, {
   3.8671791693087997`*^9, 3.867179389048503*^9}, {3.867179457055608*^9, 
   3.867179574763853*^9}, {3.8671798536656656`*^9, 3.867179856221224*^9}, {
   3.8671800246005616`*^9, 3.867180026916503*^9}, 3.867490496467278*^9, {
   3.8677404059456215`*^9, 
   3.8677404111481104`*^9}},ExpressionUUID->"0b664b0a-0314-414d-8256-\
2856cb2ddf8a"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.867179327129328*^9, 3.8671793548856335`*^9}, 
   3.8671793899651093`*^9, 3.867179473283865*^9, 3.8671795330319757`*^9, 
   3.8671795839432783`*^9, 3.8671798576882772`*^9, 3.8671799013026333`*^9, {
   3.867180020887102*^9, 3.86718003533724*^9}, 3.867490510514304*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"906803c3-aefc-48db-bcc6-39affdc8c877"]
}, Open  ]],

Cell["Check on complex we\[CloseCurlyQuote]ve seen:", "Text",
 CellChangeTimes->{{3.867180050472957*^9, 
  3.867180074055586*^9}},ExpressionUUID->"90f41181-6295-4172-ad0e-\
bfa828bccace"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParallelTable", "[", 
  RowBox[{
   RowBox[{"ExistsZigZagCounterExample", "[", 
    RowBox[{
     RowBox[{"Union", "[", 
      RowBox[{
       RowBox[{"FullSimplex", "[", "3", "]"}], ",", 
       RowBox[{
        RowBox[{"SphereSimplex", "[", "2", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"3", "->", "5"}], "}"}]}], ",", 
       RowBox[{
        RowBox[{"SphereSimplex", "[", "2", "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"4", "->", "5"}], "}"}]}]}], "]"}], ",", "d"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "1", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867180132743479*^9, 3.8671801807538395`*^9}, {
  3.8671802528507185`*^9, 3.867180390843998*^9}, {3.867180459966983*^9, 
  3.8671804931608543`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"c39289cd-7665-4dd6-b5c1-d777d1241931"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.867180455503629*^9, 3.8671805156964397`*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"0cfaba35-f5eb-4f40-bba1-edfc9e0918e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tests", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomCmplx", "[", 
          RowBox[{"6", ",", "3", ",", "3", ",", "4"}], "]"}], ",", "8"}], 
        "]"}]}]}], "}"}], ",", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"ExistsZigZagCounterExample", "[", 
       RowBox[{"t", ",", "3"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tests"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8671727911534014`*^9, 3.8671728100957994`*^9}, {
   3.8671729109746585`*^9, 3.8671729236084013`*^9}, {3.8671731653522596`*^9, 
   3.867173216784995*^9}, {3.867173421564426*^9, 3.8671734234377375`*^9}, {
   3.8671734600104203`*^9, 3.8671734843361154`*^9}, 3.8671735213238525`*^9, 
   3.8671735647019157`*^9, {3.867173671361083*^9, 3.8671737171107254`*^9}, {
   3.867174409684801*^9, 3.8671744257033143`*^9}, {3.8671744756750584`*^9, 
   3.8671744990136833`*^9}, {3.867174542189289*^9, 3.867174556297696*^9}, {
   3.867174744589796*^9, 3.867174750540037*^9}, {3.867174812463175*^9, 
   3.8671748201958275`*^9}, {3.8671748553092003`*^9, 3.86717487275136*^9}, {
   3.867176804401453*^9, 3.867176808706338*^9}, {3.867177074652231*^9, 
   3.8671770788587546`*^9}, {3.867177155292965*^9, 3.8671771614449744`*^9}, {
   3.867177219164102*^9, 3.867177233388198*^9}, {3.8671772684967265`*^9, 
   3.867177351888299*^9}, 3.8671773966354713`*^9, {3.867177472032875*^9, 
   3.867177572387477*^9}, {3.867177649664936*^9, 3.8671776605044394`*^9}, {
   3.867180670717745*^9, 3.8671806899620476`*^9}, {3.8671808954627514`*^9, 
   3.867180905859912*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"da822627-ab3c-4e82-a17c-f8326007892f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.867174751010788*^9, 3.8671749093563724`*^9, {3.867175279969302*^9, 
   3.8671753005342226`*^9}, 3.8671766299588633`*^9, 3.8671766857072897`*^9, 
   3.8671767193193016`*^9, {3.867176805053871*^9, 3.867176809360549*^9}, {
   3.8671770755912943`*^9, 3.8671770950640044`*^9}, 3.8671771565176716`*^9, 
   3.8671772059501934`*^9, {3.867177323330369*^9, 3.8671773314128456`*^9}, 
   3.86717738169308*^9, 3.867177586403558*^9, 3.8671776338755646`*^9, 
   3.8671776938108377`*^9, 3.8671808663610287`*^9, 3.867181920532837*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"50aab36b-482c-42c7-b991-193a539d3c5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "179", "]"}], ";", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cmp", "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"cmp", "=", 
         RowBox[{"Generate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"Subsets", "[", 
              RowBox[{
               RowBox[{"Range", "[", "6", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "6"}], "}"}], ",", 
               RowBox[{"{", "#", "}"}]}], "]"}]}], "&"}], "/@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{
                SuperscriptBox["2", "6"], "-", "1"}]}], "}"}], ",", "9"}], 
            "]"}]}], "]"}]}], ";", 
        RowBox[{"\[Not]", 
         RowBox[{"(", 
          RowBox[{"Or", "@@", 
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"ExistsZigZagCounterExample", "[", 
              RowBox[{"cmp", ",", "d"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"d", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ")"}]}]}], 
       ",", 
       RowBox[{"Print", "[", "\"\<F\>\"", "]"}]}], "]"}], ";", "cmp"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.867182072433278*^9, 3.8671820738595*^9}, {
   3.867182187624156*^9, 3.867182204960733*^9}, {3.8671822620873537`*^9, 
   3.8671823456362925`*^9}, {3.8671823934894896`*^9, 
   3.8671824045813694`*^9}, {3.8671824469315815`*^9, 3.867182592538694*^9}, {
   3.8671826415450277`*^9, 3.8671827384417124`*^9}, {3.8671827930292387`*^9, 
   3.8671828032486496`*^9}, {3.8671828435734596`*^9, 
   3.8671828952169914`*^9}, {3.867182949206229*^9, 3.8671829841144676`*^9}, {
   3.8671830154498634`*^9, 3.867183022511368*^9}, {3.867183057298642*^9, 
   3.867183066032505*^9}, {3.8671831139376087`*^9, 3.867183291417618*^9}, {
   3.8671833375548363`*^9, 3.867183385973595*^9}, {3.867183457392746*^9, 
   3.867183495210822*^9}, {3.867183528183529*^9, 3.867183569225892*^9}, 
   3.8671835994165864`*^9},
 CellLabel->
  "In[293]:=",ExpressionUUID->"5eccbe4f-9f0d-4062-86cb-6d1a63463a4e"],

Cell[CellGroupData[{

Cell[BoxData["\<\"F\"\>"], "Print",
 CellChangeTimes->{3.8671845796153526`*^9},
 CellLabel->
  "During evaluation of \
In[293]:=",ExpressionUUID->"6bfcd031-8cb0-4aea-8ee2-6d06c6b31e2d"],

Cell[BoxData["\<\"F\"\>"], "Print",
 CellChangeTimes->{3.8671846650539665`*^9},
 CellLabel->
  "During evaluation of \
In[293]:=",ExpressionUUID->"74ceb21b-af5b-48d8-b5f8-180fa4412fb6"],

Cell[BoxData["\<\"F\"\>"], "Print",
 CellChangeTimes->{3.8671873533169675`*^9},
 CellLabel->
  "During evaluation of \
In[293]:=",ExpressionUUID->"5614b220-c5dc-4d00-bebd-8786cd06384f"]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.867182075029937*^9, {3.8671827167309823`*^9, 3.8671827397847586`*^9}, 
   3.86718280420588*^9, {3.867182844718433*^9, 3.867182874552004*^9}, 
   3.86718290739408*^9, 3.867183451448594*^9, {3.86718349038428*^9, 
   3.8671834963919897`*^9}, 3.8671835295697937`*^9, 3.8671835959933834`*^9, 
   3.8672063576331267`*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"2c188ea2-5616-416b-b8ed-7a2c853110ca"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Alg shifting and d-collapsibility", "Subsection",
 CellChangeTimes->{{3.8674900750635443`*^9, 3.8674901383858147`*^9}, {
  3.867753107421491*^9, 
  3.8677531207630143`*^9}},ExpressionUUID->"3fef2fd9-0acd-413b-a34c-\
1c38f2c88645"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DCollapsible", "[", 
   RowBox[{"cmplx_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ff", ",", 
      RowBox[{"cmpl", "=", "cmplx"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ff", "=", 
          RowBox[{"FirstCase", "[", 
           RowBox[{"cmpl", ",", 
            RowBox[{"s_", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "s", "]"}], "<=", "d"}], "\[And]", 
              RowBox[{"IsFreeFace", "[", 
               RowBox[{"cmpl", ",", "s"}], "]"}]}]}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ")"}], "!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"cmpl", "=", 
        RowBox[{"Collapse", "[", 
         RowBox[{"cmpl", ",", "ff"}], "]"}]}]}], "]"}], ";", 
     RowBox[{"cmpl", "==", 
      RowBox[{"{", "}"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8674901408340583`*^9, 3.8674901449177465`*^9}, 
   3.8674901777031837`*^9, 3.8674903041124086`*^9, {3.867490349789487*^9, 
   3.8674903592114334`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"13bb2e22-4bc7-409b-bd4f-a0832b066347"],

Cell["\<\
Testing whether algebraic shifting of a d-collapsible complex d-collapsible:\
\>", "Text",
 CellChangeTimes->{{3.86749084891094*^9, 
  3.8674909850537553`*^9}},ExpressionUUID->"4d166a88-d532-4501-afcb-\
48bbf1c26d8a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DColSameForShifted", "[", 
   RowBox[{"complexes_", ",", "ds_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cmps", "=", "complexes"}], ",", 
      RowBox[{"DC", "=", "DCollapsible"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DC", "[", 
          RowBox[{"cmp", ",", "d"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "ds"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"cmp", ",", "cmps"}], "}"}]}], "]"}], "==", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DC", "[", 
          RowBox[{
           RowBox[{"AlgebraicShifting", "[", "cmp", "]"}], ",", "d"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "ds"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"cmp", ",", "cmps"}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.86749211931703*^9, 3.8674922574833136`*^9}, {
  3.8674938215360193`*^9, 3.8674938317318687`*^9}, {3.8680759596319757`*^9, 
  3.868075984200366*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"2336f1c0-5304-4087-aa20-c479d336c4ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmps", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomCmplx", "[", 
          RowBox[{"6", ",", "4", ",", "4", ",", "5"}], "]"}], ",", "200"}], 
        "]"}]}]}], ",", 
     RowBox[{"ds", "=", 
      RowBox[{"Range", "[", "4", "]"}]}]}], "}"}], ",", 
   RowBox[{"DColSameForShifted", "[", 
    RowBox[{"cmps", ",", "ds"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8674901909534187`*^9, 3.867490234344187*^9}, {
   3.8674903662250133`*^9, 3.867490447033411*^9}, {3.867490603867758*^9, 
   3.867490822644366*^9}, {3.86749100265624*^9, 3.8674911452114944`*^9}, {
   3.8674911758230658`*^9, 3.8674912145919027`*^9}, {3.867491262811492*^9, 
   3.867491278549752*^9}, {3.867492029784684*^9, 3.8674920877556963`*^9}, 
   3.867492185877283*^9, {3.867492268779585*^9, 3.8674922921320047`*^9}, {
   3.867493849094265*^9, 3.8674938496148944`*^9}, {3.8674938985140758`*^9, 
   3.867493956207133*^9}, 
   3.867581274057746*^9},ExpressionUUID->"b27f69e4-b07c-435d-9fa0-\
628bd5e6c7d1"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.867490212779019*^9, 3.8674902361185536`*^9}, 
   3.8674903071030235`*^9, {3.8674903552921953`*^9, 3.8674903976120205`*^9}, {
   3.8674906088335023`*^9, 3.8674906662841153`*^9}, 3.8674908363934317`*^9, 
   3.8674912221908073`*^9, 3.8674912701156454`*^9, 3.867492295075098*^9, 
   3.8674936809421835`*^9, 3.8674938365753717`*^9, 3.8674939243201356`*^9, 
   3.86749397587809*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"c0352438-787c-4408-847b-10c4408dc5ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmps", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomCmplx", "[", 
          RowBox[{"7", ",", "6", ",", "6", ",", "6"}], "]"}], ",", "300"}], 
        "]"}]}]}], ",", 
     RowBox[{"ds", "=", 
      RowBox[{"Range", "[", "5", "]"}]}]}], "}"}], ",", 
   RowBox[{"DColSameForShifted", "[", 
    RowBox[{"cmps", ",", "ds"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867580522457262*^9, 3.8675805693177347`*^9}, {
  3.8675806901044507`*^9, 3.867580713191369*^9}, {3.8675812858740225`*^9, 
  3.8675812860162296`*^9}},ExpressionUUID->"5d166475-92cc-4dc8-a0ce-\
844493b430d5"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8675806343938665`*^9, 3.867580798543603*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"08dbea78-1eb4-4858-8b7f-77c6c068d74f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cmps", "=", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomCmplx", "[", 
           RowBox[{"6", ",", "1", ",", "20", ",", "5"}], "]"}], ",", "500"}], 
         "]"}]}]}], ",", 
      RowBox[{"ds", "=", 
       RowBox[{"Range", "[", "4", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "@", "cmps"}], ",", 
      RowBox[{"DColSameForShifted", "[", 
       RowBox[{"cmps", ",", "ds"}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868075656720299*^9, 3.868075683808348*^9}, {
  3.8680758088438454`*^9, 3.8680758309738646`*^9}, {3.8680760011990757`*^9, 
  3.868076020479703*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"6b231248-5e89-4686-917b-6e3acab029fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"248", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.868075889340604*^9, 3.868076060286092*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"0305cfc7-908b-460d-b37f-8df11c1195da"]
}, Open  ]],

Cell["Testing on all small complexes:", "Text",
 CellChangeTimes->{{3.867581151944166*^9, 
  3.8675811711840677`*^9}},ExpressionUUID->"9ed0367e-4654-4cf6-a5c4-\
98becf02cc9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmps", "=", 
      RowBox[{"UpToFourVert", "[", "True", "]"}]}], ",", 
     RowBox[{"ds", "=", 
      RowBox[{"Range", "[", "4", "]"}]}]}], "}"}], ",", 
   RowBox[{"DColSameForShifted", "[", 
    RowBox[{"cmps", ",", "ds"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8675811760129137`*^9, 3.867581266853825*^9}, {
  3.8675812982981424`*^9, 3.8675813166228075`*^9}, {3.8680761188966136`*^9, 
  3.868076151802931*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"50e29df0-c102-4d74-92d0-7d59263cedda"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.867581317840745*^9, 3.8680761552545643`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"f3b4c5f7-048d-47dc-9a0f-712a805e537a"]
}, Open  ]],

Cell["\<\
Idiot, this follows from preservance of d-Leray property and from \
d-collapsibility of shifted d-Leray \
\>", "Text",
 CellChangeTimes->{{3.8680764542219753`*^9, 3.868076489195691*^9}, {
  3.8680765398151474`*^9, 
  3.868076583790242*^9}},ExpressionUUID->"ee277e4a-eda7-4170-927c-\
33da2ff3d970"]
}, Closed]],

Cell[CellGroupData[{

Cell["d-collapsibility of shifted d-Leray", "Subsection",
 CellChangeTimes->{{3.867582751114214*^9, 
  3.8675827895573187`*^9}},ExpressionUUID->"b85b7826-bed0-4d0d-bb0d-\
45e913d8e184"],

Cell["Checking whether shifted and d-Leray implies d-collapsible", "Text",
 CellChangeTimes->{{3.867742644514202*^9, 
  3.867742697806661*^9}},ExpressionUUID->"f395d9e0-5402-4e85-80a6-\
7060bb01a392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmp", "=", 
      RowBox[{"Generate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], 
       "]"}]}], ",", "shf", ",", "col", ",", "shfcol"}], "}"}], ",", 
   RowBox[{
    RowBox[{"col", "=", 
     RowBox[{"Collapse", "[", 
      RowBox[{"cmp", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"shf", "=", 
     RowBox[{"AlgebraicShifting", "[", "cmp", "]"}]}], ";", " ", 
    RowBox[{"shfcol", "=", 
     RowBox[{"AlgebraicShifting", "[", "col", "]"}]}], ";", " ", 
    RowBox[{"Complement", "[", 
     RowBox[{"shf", ",", "shfcol"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867582815178265*^9, 3.867582972411511*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"f1fa68d4-f70a-4402-b35e-92913c8b8671"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8675829746291*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"3e279baa-2655-46c8-a18c-186135c1a7f1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"KSkeleton", "[", 
   RowBox[{"cmplx_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{"cmplx", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "@", "#"}], "==", 
      RowBox[{"k", "+", "1"}]}], "&"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8677289190724773`*^9, 3.8677289377479243`*^9}, {
  3.8677290034960785`*^9, 3.867729061800461*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"54979925-3bf5-4fc0-9d66-5ad5ca46cc89"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FillMissingSimpsSingleDim", "[", 
   RowBox[{"cmplx_", ",", "dim_Integer"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sk", "=", 
       RowBox[{"KSkeleton", "[", 
        RowBox[{"cmplx", ",", 
         RowBox[{"dim", "-", "1"}]}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"Flatten", "@", "cmplx"}]}]}]}], "}"}], ",", 
    RowBox[{"Union", "[", 
     RowBox[{"cmplx", ",", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"Range", "@", "n"}], ",", 
          RowBox[{"{", 
           RowBox[{"dim", "+", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Not]", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"cmplx", ",", "#"}], "]"}]}], "\[And]", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"cmplx", ",", 
            RowBox[{"Subsets", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "dim", "}"}]}], "]"}]}], "]"}]}], "&"}]}], "]"}]}],
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FillMissingSimps", "[", 
   RowBox[{"cmplx_", ",", "dims_List"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{"FillMissingSimpsSingleDim", ",", "cmplx", ",", "dims"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FillMissingSimps", "[", 
   RowBox[{"cmplx_", ",", "dim_Integer"}], "]"}], ":=", 
  RowBox[{"FillMissingSimps", "[", 
   RowBox[{"cmplx", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"dim", ",", 
      RowBox[{"Max", "@", 
       RowBox[{"Flatten", "@", "cmplx"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fill", " ", "in", " ", "missing", " ", "simplicies", " ", "of", " ", 
    "given", " ", "dimension"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.86772815058066*^9, 3.867728181135659*^9}, {
   3.867728310734355*^9, 3.867728316839006*^9}, {3.867728605804652*^9, 
   3.867728636393205*^9}, {3.8677286726290817`*^9, 3.8677287706489935`*^9}, {
   3.867728813772083*^9, 3.8677288304761486`*^9}, {3.867728895440153*^9, 
   3.867728899103133*^9}, {3.867729058013395*^9, 3.86772905819189*^9}, {
   3.8677290951890893`*^9, 3.867729100493164*^9}, {3.867729166100054*^9, 
   3.867729190174917*^9}, {3.867729239895452*^9, 3.8677292564833517`*^9}, 
   3.8677293098842688`*^9, {3.8677293496712694`*^9, 3.8677294109281855`*^9}, {
   3.8677300987400217`*^9, 3.867730175045741*^9}, {3.8677302126265817`*^9, 
   3.8677302161409388`*^9}, {3.8677302623982496`*^9, 
   3.8677304812431498`*^9}, {3.867730608779979*^9, 3.8677306444279523`*^9}, {
   3.867730730604508*^9, 3.8677307423017397`*^9}, {3.867730803682837*^9, 
   3.8677308039154167`*^9}, {3.8677308990612555`*^9, 
   3.8677309285164843`*^9}, {3.86773096182028*^9, 3.8677310046734877`*^9}, {
   3.8677311314195232`*^9, 3.8677311360258875`*^9}, {3.867731167467641*^9, 
   3.8677312066165156`*^9}, {3.8677312422598844`*^9, 
   3.8677312460903587`*^9}, {3.8677313032990923`*^9, 3.867731335963235*^9}, 
   3.8677314347602644`*^9, {3.867731471917965*^9, 3.8677314907345114`*^9}, {
   3.8677317037892075`*^9, 3.8677317488459635`*^9}, {3.8677319990770745`*^9, 
   3.867732183410696*^9}, {3.8677322359849944`*^9, 3.867732246139361*^9}, {
   3.8677322989043007`*^9, 3.867732300418829*^9}, {3.867733144794712*^9, 
   3.86773317639512*^9}, {3.8677382853543415`*^9, 3.8677383226820173`*^9}, {
   3.867738382701518*^9, 3.86773839019137*^9}, {3.8677386540508084`*^9, 
   3.8677386755385814`*^9}, {3.8677397998188534`*^9, 
   3.8677398023301973`*^9}, {3.8677398402987356`*^9, 
   3.8677399388817883`*^9}, {3.8677400366685314`*^9, 3.867740174487561*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"11abf676-8628-4e99-b2a8-d7e06178d940"],

Cell["Check on everything with less then 5 vertices:", "Text",
 CellChangeTimes->{{3.8677424155263205`*^9, 3.8677424366022825`*^9}, {
  3.867742611322294*^9, 
  3.8677426412027845`*^9}},ExpressionUUID->"179368ad-2a71-4548-b413-\
6d845a6a0bee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmps", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"GenerateShifted", "/@", 
        RowBox[{"UpToFourVert", "[", "True", "]"}]}], "]"}]}], ",", 
     RowBox[{"ds", "=", 
      RowBox[{"Range", "[", "3", "]"}]}]}], "}"}], ",", 
   RowBox[{"And", "@@", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DCollapsible", "[", 
        RowBox[{
         RowBox[{"FillMissingSimps", "[", 
          RowBox[{"cm", ",", 
           RowBox[{"d", "+", "1"}]}], "]"}], ",", "d"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"cm", ",", "cmps"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", "ds"}], "}"}]}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867739210133763*^9, 3.867739288001093*^9}, {
   3.867739373732161*^9, 3.8677394415807347`*^9}, {3.8677395880083113`*^9, 
   3.867739596912454*^9}, {3.867740188707223*^9, 3.8677401958381367`*^9}, 
   3.867740437418005*^9, {3.8677423065460405`*^9, 3.867742318806328*^9}, {
   3.8677423492318916`*^9, 3.8677423763986053`*^9}, {3.8677424427516775`*^9, 
   3.8677426007395964`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"e688c47f-9e70-48df-989b-d6d61b93e9dd"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8677394147214284`*^9, 3.867739448476988*^9}, 
   3.867739597827571*^9, {3.867740184011201*^9, 3.8677401964545465`*^9}, {
   3.8677425932907486`*^9, 3.8677426015171304`*^9}, 3.86774938817628*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"fa35fec3-a36a-4e13-9cc5-3020a79b51be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
  RowBox[{"Catch", "@", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cmps", ",", 
       RowBox[{"initcmps", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomCmplx", "[", 
           RowBox[{"8", ",", "4", ",", "4", ",", "7"}], "]"}], ",", "200"}], 
         "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"cmps", "=", 
       RowBox[{"GenerateShifted", "/@", "initcmps"}]}], ";", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "@", "cmps"}], ",", 
        RowBox[{"And", "@@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Not]", 
                 RowBox[{"DCollapsible", "[", 
                  RowBox[{
                   RowBox[{"FillMissingSimps", "[", 
                    RowBox[{"cm", ",", 
                    RowBox[{"d", "+", "1"}]}], "]"}], ",", "d"}], "]"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"Throw", "[", 
                  RowBox[{"{", 
                   RowBox[{"cm", ",", "d", ",", 
                    RowBox[{"initcmps", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"cmps", ",", "cm"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
                   "}"}], "]"}], ";", "False"}], ",", "True"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"Length", "/@", "cm"}], "]"}], "-", "1"}], "]"}]}],
                "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"cm", ",", "cmps"}], "}"}]}], "]"}], "]"}]}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867742394206745*^9, 3.867742401316782*^9}, {
   3.8677427180589724`*^9, 3.8677427981017637`*^9}, {3.8677428286145306`*^9, 
   3.8677428413056602`*^9}, {3.867743079217888*^9, 3.867743091353865*^9}, {
   3.86774316440349*^9, 3.867743187566589*^9}, {3.8677432227724576`*^9, 
   3.8677432468927827`*^9}, {3.8677436881473026`*^9, 3.867743698634528*^9}, {
   3.8677437335893927`*^9, 3.867743831755474*^9}, {3.867744039216811*^9, 
   3.867744045860779*^9}, {3.867744443033106*^9, 3.8677444518977966`*^9}, {
   3.867744638266946*^9, 3.867744640397358*^9}, 3.8677446776079707`*^9, {
   3.8677447163772974`*^9, 3.8677448071089797`*^9}, 3.8677450226561728`*^9, {
   3.8677450696746492`*^9, 3.8677450750289364`*^9}, {3.867745111405388*^9, 
   3.867745117133015*^9}, 3.8677455842286444`*^9, {3.867745902936401*^9, 
   3.8677459045947223`*^9}, {3.8677462368314104`*^9, 
   3.8677463358685875`*^9}, {3.8677463821769*^9, 3.8677464511497355`*^9}, {
   3.8677468740433264`*^9, 3.867746878197402*^9}, {3.867749400812952*^9, 
   3.8677494082023354`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"3d4d0e29-9ccb-41df-bbb2-ce9a2ffc3802"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"200", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.867749346341179*^9, 3.867749654465209*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"178b2b22-201b-4245-bc7f-7c4d122ee2db"]
}, Open  ]],

Cell["\<\
Tested with RandomCmplx arguments {7,4,4,5}->80, {7,10,10,6}->12, \
{7,5,7,6}->36, {8,20,10,6}->23, {8,5,30,5}->78, {8,20,20,5}->52:\
\>", "Text",
 CellChangeTimes->{{3.867750759351945*^9, 3.867750807565918*^9}, {
  3.867750844757278*^9, 3.867750952827314*^9}, {3.86775103250439*^9, 
  3.8677510513503428`*^9}, {3.8677510964641504`*^9, 3.867751104776546*^9}, {
  3.8677512597071133`*^9, 3.867751261062665*^9}, {3.8677515105092506`*^9, 
  3.867751522013094*^9}, {3.8677516858185477`*^9, 3.867751686162921*^9}, {
  3.867754345887003*^9, 
  3.867754347726242*^9}},ExpressionUUID->"54f3dffe-24f8-41bd-80e0-\
730dcc76850b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "179", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmps", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"GenerateShifted", "[", 
          RowBox[{"RandomCmplx", "[", 
           RowBox[{"8", ",", "20", ",", "20", ",", "5"}], "]"}], "]"}], ",", 
         "250"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "@", "cmps"}], ",", 
      RowBox[{"And", "@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"DCollapsible", "[", 
             RowBox[{
              RowBox[{"FillMissingSimps", "[", 
               RowBox[{"cm", ",", 
                RowBox[{"d", "+", "1"}]}], "]"}], ",", "d"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"d", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Length", "/@", "cm"}], "]"}], "-", "1"}], "]"}]}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"cm", ",", "cmps"}], "}"}]}], "]"}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.867750091603222*^9, 3.8677501568183575`*^9}, {
  3.8677505970028405`*^9, 3.867750652307374*^9}, {3.867750734176079*^9, 
  3.8677507400214677`*^9}, {3.867750817325676*^9, 3.8677508357129745`*^9}, {
  3.867750883602543*^9, 3.867750887020029*^9}, {3.8677509200757437`*^9, 
  3.8677509343348303`*^9}, {3.8677510672314796`*^9, 3.8677510834254913`*^9}, {
  3.8677514734060473`*^9, 3.867751504990997*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"4bd3bac2-8926-4358-b261-10cc3e7b6022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"52", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.8677506895645857`*^9, 3.8677508493581085`*^9, 
  3.867750913247572*^9, 3.867751029836606*^9, 3.86775124096599*^9, 
  3.867751596597762*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"3686aea8-2752-4126-92a5-a4b64ca7df35"]
}, Open  ]],

Cell["\<\
Check revlex max among d-skeleton is always a free face, true on all small \
complexes and RandomCmplx arguments {5,3,3,3}->30, {8,5,5,5}->121, \
{8,10,10,5}->95: \
\>", "Text",
 CellChangeTimes->{{3.867751812438932*^9, 3.8677518370997095`*^9}, {
  3.867753143818839*^9, 3.8677531625074167`*^9}, {3.8677541944014425`*^9, 
  3.8677542095787168`*^9}, {3.867754352548026*^9, 3.867754400829671*^9}, {
  3.8677545152350407`*^9, 3.867754541722397*^9}, {3.8677567587015634`*^9, 
  3.8677568153779974`*^9}, {3.8677569103301992`*^9, 
  3.867756938902504*^9}},ExpressionUUID->"65f628f5-171e-46b2-8de6-\
b94bcde3b9bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MaxP", "[", 
   RowBox[{"list_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"p", "[", "##", "]"}], ",", "##"}], "]"}], "&"}], ",", 
    "list"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "max", " ", "element", " ", "with", " ", "given", " ", "ordering", " ", 
    "function"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8677551656101584`*^9, 3.867755228886477*^9}, {
   3.8677552627707863`*^9, 3.867755299586051*^9}, 3.867755444978165*^9},
 CellLabel->
  "In[201]:=",ExpressionUUID->"02e2ba6e-29a1-4f88-b69c-b4ca88ad0b59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "179", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmps", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"GenerateShifted", "[", 
          RowBox[{"RandomCmplx", "[", 
           RowBox[{"8", ",", "10", ",", "10", ",", "5"}], "]"}], "]"}], ",", 
         "200"}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "@", "cmps"}], ",", 
      RowBox[{"And", "@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"fill", "=", 
                RowBox[{"FillMissingSimps", "[", 
                 RowBox[{"cm", ",", 
                  RowBox[{"d", "+", "1"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"IsFreeFace", "[", 
               RowBox[{"fill", ",", 
                RowBox[{"Last", "[", 
                 RowBox[{"Sort", "[", 
                  RowBox[{
                   RowBox[{"KSkeleton", "[", 
                    RowBox[{"fill", ",", 
                    RowBox[{"d", "-", "1"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Max", "@", "#2"}], ">", 
                    RowBox[{"Max", "#1"}]}], "&"}]}], "]"}], "]"}]}], "]"}]}],
              "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"d", ",", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{"Length", "/@", "cm"}], "]"}], "-", "1"}], "]"}]}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"cm", ",", "cmps"}], "}"}]}], "]"}], "]"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8677531760533943`*^9, 3.8677532284615507`*^9}, {
  3.8677536019038963`*^9, 3.8677536327781825`*^9}, {3.8677538408193426`*^9, 
  3.867753898189754*^9}, {3.867754001020769*^9, 3.867754013502366*^9}, {
  3.8677540980892334`*^9, 3.867754143340426*^9}, {3.867754219034671*^9, 
  3.8677543192956033`*^9}, {3.867754422955251*^9, 3.8677544264100475`*^9}, {
  3.8677545654330215`*^9, 3.867754565537654*^9}, {3.867754659967013*^9, 
  3.8677546847432013`*^9}, {3.867754740451326*^9, 3.867754795239767*^9}, {
  3.8677548490185614`*^9, 3.86775484959562*^9}, {3.8677553152338314`*^9, 
  3.8677553240282946`*^9}, {3.867755447430727*^9, 3.867755505792266*^9}, {
  3.867755590300872*^9, 3.8677556651458597`*^9}, {3.8677557182359056`*^9, 
  3.867755721433517*^9}, {3.8677565209646482`*^9, 3.867756531391162*^9}, {
  3.867756834419739*^9, 3.867756900087406*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"9c1ccda2-6369-4bf6-b0cb-08c023dad55d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"95", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8677541643133326`*^9, 3.867754213636893*^9, 3.867754327813571*^9, 
   3.867754527269536*^9, 3.8677545661432447`*^9, {3.8677546877731485`*^9, 
   3.867754694998567*^9}, {3.86775474190068*^9, 3.867754799089309*^9}, 
   3.8677554541821156`*^9, 3.8677554947153945`*^9, {3.867755584251015*^9, 
   3.86775561939918*^9}, 3.86775566601092*^9, 3.8677557325420523`*^9, 
   3.86775652802396*^9, 3.86775657650596*^9, {3.8677568589545097`*^9, 
   3.8677569082277155`*^9}},
 CellLabel->
  "Out[249]=",ExpressionUUID->"1ac2d521-7b9e-491c-b0e9-e59b138a6c39"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Colorful complexes", "Chapter",
 CellChangeTimes->{{3.8678368701212215`*^9, 3.867836883592918*^9}, 
   3.8680764924693193`*^9},ExpressionUUID->"d3e1fdd1-44f0-4a2c-921f-\
04258e0b9dc3"],

Cell[CellGroupData[{

Cell["Basics", "Subsection",
 CellChangeTimes->{{3.8679022631907845`*^9, 
  3.8679022692622623`*^9}},ExpressionUUID->"acb88be5-ee59-4014-adb0-\
01fd421312a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorFVector", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmplx_", ",", "colors_"}], "}"}], ",", "colvec_"}], "]"}], ":=", 
  RowBox[{"Count", "[", 
   RowBox[{"cmplx", ",", 
    RowBox[{"s_", "/;", 
     RowBox[{
      RowBox[{"BinCounts", "[", 
       RowBox[{
        RowBox[{"s", "/.", "colors"}], ",", 
        RowBox[{
         RowBox[{"MinMax", "[", 
          RowBox[{"colors", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "==", "colvec"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8679022722128005`*^9, 3.867902284332445*^9}, {
  3.8679023357415237`*^9, 3.8679023861191435`*^9}, {3.867902493099856*^9, 
  3.867902535763935*^9}, {3.867902568421384*^9, 3.8679025732850685`*^9}, {
  3.8679026786709843`*^9, 3.8679027112559586`*^9}, {3.8679036160621133`*^9, 
  3.8679036515789146`*^9}, {3.867903681764471*^9, 3.867903690542603*^9}, {
  3.8679039010229206`*^9, 3.8679039177367954`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"709bbd60-2d0c-40dd-bd75-cd47bc68bcb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AllColorShifts", "[", 
   RowBox[{"s_", ",", "colors_"}], "]"}], ":=", 
  RowBox[{"Union", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "|->", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "@", "k"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "/.", "colors"}], ")"}], "==", 
              RowBox[{"(", 
               RowBox[{"k", "/.", "colors"}], ")"}]}], "&"}]}], "]"}]}], 
         ")"}], "/@", "s"}], "]"}], ",", 
      RowBox[{"_", "?", "DuplicateFreeQ"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenerateColorShifted", "[", 
   RowBox[{"faces_", ",", "colors_"}], "]"}], ":=", 
  RowBox[{"Generate", "[", 
   RowBox[{"Union", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"AllColorShifts", "[", 
        RowBox[{"#", ",", "colors"}], "]"}], "&"}], "/@", "faces"}], ")"}]}], 
   "]"}], " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8679027517915335`*^9, 3.8679028287138433`*^9}, {
  3.867903933363165*^9, 3.867903967702835*^9}, {3.8679040712243757`*^9, 
  3.86790408326643*^9}, {3.867904159731887*^9, 3.8679042611584406`*^9}, {
  3.867904313535221*^9, 3.8679043144543295`*^9}, {3.8679043495123353`*^9, 
  3.8679043854356213`*^9}, {3.8679044389506636`*^9, 3.8679044620781603`*^9}, {
  3.867904498672377*^9, 3.867904538176779*^9}, {3.867904762049857*^9, 
  3.867904764807008*^9}, {3.867904914232898*^9, 3.8679049346735964`*^9}, {
  3.867904978093298*^9, 3.867904979316699*^9}, {3.867905028921371*^9, 
  3.8679051049187794`*^9}, {3.8679211987583947`*^9, 3.8679212016008368`*^9}, {
  3.8679213628966985`*^9, 3.867921439473279*^9}, {3.867921712184699*^9, 
  3.8679217170279284`*^9}, {3.867921755056981*^9, 3.867921779890476*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"1c995fe1-ac44-4ea8-8a9f-514ec61e4af5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Colorful algebraic shifting:", "Subsection",
 CellChangeTimes->{{3.8679020432740602`*^9, 3.867902094889223*^9}, 
   3.8680764969312067`*^9},ExpressionUUID->"28d10bdf-393a-427f-85ca-\
e00258934bd6"],

Cell["Algebraic shifting already supports \[OpenCurlyDoubleQuote]colors\
\[CloseCurlyDoubleQuote] option:", "Text",
 CellChangeTimes->{{3.8679019800420847`*^9, 3.8679020216226406`*^9}, {
  3.867926472817222*^9, 
  3.867926475889371*^9}},ExpressionUUID->"55a7f6d0-ed1c-4f51-b0aa-\
e83e7ba1ad28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlgebraicShifting", "[", 
  RowBox[{
   RowBox[{"Generate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"\"\<Colors\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "->", "1"}], ",", 
      RowBox[{"2", "->", "1"}], ",", 
      RowBox[{"3", "->", "1"}], ",", 
      RowBox[{"4", "->", "2"}], ",", 
      RowBox[{"5", "->", "2"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867921983598959*^9, 3.8679219882489967`*^9}, {
  3.8679222515236454`*^9, 3.86792235540021*^9}, {3.8679223940512204`*^9, 
  3.8679223957682433`*^9}, {3.8679230312280564`*^9, 3.867923038557865*^9}, {
  3.867923077956024*^9, 3.867923093235236*^9}, {3.867923194928793*^9, 
  3.867923232157071*^9}, {3.8679235602513113`*^9, 3.8679235628548403`*^9}, {
  3.8679247536581273`*^9, 3.867924773381325*^9}, {3.8679260840710897`*^9, 
  3.8679260909262695`*^9}, {3.867926291838323*^9, 3.867926303684429*^9}, {
  3.8679264810720854`*^9, 3.8679264928751607`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a208c1d9-6035-4420-b199-83c55ab2c2fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8679223610465007`*^9, 3.867922396427064*^9, 3.86792257641216*^9, 
   3.8679227728007913`*^9, {3.867922884224979*^9, 3.86792291398662*^9}, 
   3.8679230396389074`*^9, 3.8679230936196165`*^9, {3.8679232034988856`*^9, 
   3.8679232326178627`*^9}, 3.8679235643415956`*^9, {3.867924757046422*^9, 
   3.867924774272025*^9}, 3.867926055802023*^9, 3.8679260919493628`*^9, 
   3.86792625468531*^9, {3.867926294066028*^9, 3.867926304268967*^9}, {
   3.867926481849572*^9, 3.867926493630389*^9}, 3.867927173264846*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d1cc4d8c-6118-4a5c-bbe9-ef1ba09b673b"]
}, Open  ]],

Cell["Check that result is always color-shifted:", "Text",
 CellChangeTimes->{{3.867926149776325*^9, 3.867926173795827*^9}, {
  3.867926260700271*^9, 3.8679262736572247`*^9}, {3.86792706770782*^9, 
  3.8679270895802956`*^9}},ExpressionUUID->"343042e9-27f6-4f55-b7dd-\
93948dc1dd36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "179", "]"}], ";", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cmps", "=", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomCmplx", "[", 
             RowBox[{"6", ",", "3", ",", "3", ",", "5"}], "]"}], ",", "40"}], 
           "]"}], ",", 
          RowBox[{"UpToFourVert", "[", "True", "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"RandomCmplx", "[", 
             RowBox[{"7", ",", "5", ",", "5", ",", "6"}], "]"}], ",", "40"}], 
           "]"}]}], "]"}]}]}], ",", 
      RowBox[{"clrings", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Range", "@", "8"}], "->", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "8"}], "]"}], ",",
           "10"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Length", "@", "cmps"}], ",", 
      RowBox[{"Length", "@", "clrings"}], ",", 
      RowBox[{"And", "@@", 
       RowBox[{"Flatten", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sh", "=", 
              RowBox[{"AlgebraicShifting", "[", 
               RowBox[{"cmp", ",", 
                RowBox[{"\"\<Colors\>\"", "->", "clring"}]}], "]"}]}], "}"}], 
            ",", 
            RowBox[{"sh", "==", 
             RowBox[{"GenerateColorShifted", "[", 
              RowBox[{"sh", ",", "clring"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"cmp", ",", "cmps"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"clring", ",", "clrings"}], "}"}]}], "]"}]}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8679976740171604`*^9, 3.8679977595846224`*^9}, {
   3.8679978586688476`*^9, 3.8679980075300603`*^9}, {3.867998060115944*^9, 
   3.867998087210754*^9}, 3.8679981188012047`*^9, {3.86799815495525*^9, 
   3.86799816669277*^9}, {3.8680065140490637`*^9, 3.8680066047612996`*^9}, {
   3.868006677184965*^9, 3.8680067372212634`*^9}, {3.8680067978740416`*^9, 
   3.868006814284713*^9}, {3.8680069159948134`*^9, 3.8680070967733617`*^9}, {
   3.8680071832514935`*^9, 3.8680072221655073`*^9}, {3.868007254078817*^9, 
   3.8680073476190023`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"1905e735-2abb-4c71-b8d4-b512d133dbf4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"206", ",", "10", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8680067384663963`*^9, 3.8680070985160704`*^9, 3.8680071922327485`*^9, 
   3.8680072252599726`*^9, 3.8680072921901484`*^9, {3.8680073409330883`*^9, 
   3.868007354767909*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"91abf7f9-a7db-4be6-b8a4-e7fe574c1b9d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Colorful h-vector tries", "Subsection",
 CellChangeTimes->{{3.869633676745221*^9, 
  3.869633705737811*^9}},ExpressionUUID->"ad4be2dd-d7ee-4299-8846-\
f2db365384a2"],

Cell["Naive attempt at generalization:", "Text",
 CellChangeTimes->{{3.8696496111655407`*^9, 
  3.869649627780359*^9}},ExpressionUUID->"006e5f89-b21c-4998-b514-\
44e06a07be99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ColorHVectorCombi", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmplx_", ",", "colors_"}], "}"}], ",", "dvec_", ",", 
    "colvec_"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cv", "=", 
         RowBox[{"BinCounts", "[", 
          RowBox[{
           RowBox[{"#", "/.", "colors"}], ",", 
           RowBox[{
            RowBox[{"MinMax", "[", 
             RowBox[{"colors", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Total", "[", 
          RowBox[{"cv", "-", "colvec"}], "]"}]], 
        RowBox[{"Boole", "[", 
         RowBox[{"And", "@@", 
          RowBox[{"NonNegative", "[", 
           RowBox[{"cv", "-", "colvec"}], "]"}]}], "]"}], 
        RowBox[{"Times", "@@", 
         RowBox[{"Binomial", "[", 
          RowBox[{
           RowBox[{"cv", "-", "dvec"}], ",", 
           RowBox[{"cv", "-", "colvec"}]}], "]"}]}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"Select", "[", 
     RowBox[{"cmplx", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "#"}], ">=", 
        RowBox[{"Total", "[", "colvec", "]"}]}], "&"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.869633969402397*^9, 3.869633984195801*^9}, {
   3.869634078724588*^9, 3.869634078808586*^9}, {3.869634177369829*^9, 
   3.8696342029372635`*^9}, {3.869634808891995*^9, 3.8696348610797777`*^9}, {
   3.8696426242686253`*^9, 3.869642628932621*^9}, 3.8696426768941307`*^9, {
   3.869642743904499*^9, 3.8696427541916003`*^9}, {3.8696428913117356`*^9, 
   3.8696429100315194`*^9}, {3.8696430038711524`*^9, 3.869643037243482*^9}, {
   3.8696431592479773`*^9, 3.869643161996011*^9}, {3.869643220588104*^9, 
   3.8696432333433065`*^9}, {3.8696433488200464`*^9, 3.869643353967025*^9}, {
   3.8696434760678654`*^9, 3.8696435374184527`*^9}, {3.869643655252396*^9, 
   3.869643677344656*^9}, {3.8696437245414157`*^9, 3.8696437283144183`*^9}, {
   3.8696438208517766`*^9, 3.869643843555647*^9}, {3.869643972504922*^9, 
   3.869644004316615*^9}, {3.8696440573834343`*^9, 3.8696440626649556`*^9}, 
   3.869649330666895*^9, {3.869717880369686*^9, 3.8697179094640975`*^9}, {
   3.869727421828106*^9, 3.869727433928191*^9}, {3.8697277384646287`*^9, 
   3.869727794207535*^9}, {3.8697279735059185`*^9, 3.8697279750849605`*^9}, {
   3.8697280364878426`*^9, 3.869728042912841*^9}, {3.8697284004304314`*^9, 
   3.8697284438834105`*^9}, {3.869728503753627*^9, 3.8697285049816704`*^9}, 
   3.869728792237853*^9, {3.869728850856316*^9, 3.8697288783675385`*^9}, {
   3.869729332266386*^9, 3.8697293362554955`*^9}, {3.869729659649823*^9, 
   3.8697296800297875`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"6016ceb6-7fbc-43cf-803a-b6352826b461"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ColorFSeries", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmplx_", ",", "colors_"}], "}"}], ",", "dvec_", ",", "x_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"Times", "@@", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["x", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]], "#1"], "&"}], ",", "dvec"}], 
       "]"}]}]], 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"f", "|->", 
        RowBox[{"Times", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             SubscriptBox["x", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]], 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]], "&"}], "/@", 
           RowBox[{"Tally", "[", 
            RowBox[{"f", "/.", "colors"}], "]"}]}], ")"}]}]}], ")"}], "/@", 
      RowBox[{"Select", "[", 
       RowBox[{"cmplx", ",", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"NonNegative", "[", 
           RowBox[{
            RowBox[{"BinCounts", "[", 
             RowBox[{
              RowBox[{"#", "/.", "colors"}], ",", 
              RowBox[{
               RowBox[{"MinMax", "[", 
                RowBox[{"colors", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}], "-", "dvec"}], 
           "]"}]}], "&"}]}], "]"}]}], "]"}]}], "//", "Expand"}]}], "\n", 
 RowBox[{
  RowBox[{"ColorHVectorAlge", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cmplx_", ",", "colors_"}], "}"}], ",", "dvec_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ser", "=", 
      RowBox[{
       RowBox[{"ColorFSeries", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cmplx", ",", "colors"}], "}"}], ",", "dvec", ",", "x"}], 
        "]"}], "/.", 
       RowBox[{
        SubscriptBox["x", "i_"], "->", 
        RowBox[{
         SubscriptBox["x", "i"], "-", "1"}]}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"CoefficientRules", "[", 
      RowBox[{"ser", ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", "#"], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "dvec"}], "]"}]}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"HoldPattern", "[", 
       RowBox[{"k_", "->", "x_"}], "]"}], ":>", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"k", "+", "dvec"}], "->", "x"}], ")"}]}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8696426813620567`*^9, 3.8696427332745037`*^9}, {
   3.8696427978481684`*^9, 3.8696428289621644`*^9}, 3.8696428664996862`*^9, {
   3.8696437534001694`*^9, 3.869643771071005*^9}, {3.869643810507769*^9, 
   3.8696438157547455`*^9}, {3.8696495944912233`*^9, 
   3.8696496040065465`*^9}, {3.86964967780165*^9, 3.8696496877816467`*^9}, {
   3.869656901449281*^9, 3.8696569338155155`*^9}, {3.8696573509476156`*^9, 
   3.8696573612098527`*^9}, {3.869658163488719*^9, 3.8696581950558624`*^9}, {
   3.8697177473885612`*^9, 3.8697178106511617`*^9}, {3.8697182970392637`*^9, 
   3.8697182994895163`*^9}, {3.8697295605804677`*^9, 3.869729574554082*^9}, {
   3.8697297013239317`*^9, 3.869729736845133*^9}, {3.869729775107066*^9, 
   3.8697298073711305`*^9}, {3.8697298398110104`*^9, 
   3.8697299070248632`*^9}, {3.8697301915489893`*^9, 
   3.8697302875570307`*^9}, {3.8697303656561317`*^9, 3.869730369305126*^9}, 
   3.86973048563113*^9, {3.8697309350464687`*^9, 3.869730942618965*^9}, {
   3.8697313158542767`*^9, 3.869731378404604*^9}, {3.8697314470525084`*^9, 
   3.8697314960651855`*^9}, {3.869731544236585*^9, 3.869731607148074*^9}, {
   3.869731730631716*^9, 3.8697318337498703`*^9}, {3.869731874583143*^9, 
   3.8697319197007065`*^9}, {3.869731970291218*^9, 3.8697319948487167`*^9}, {
   3.8697320366098194`*^9, 3.8697321164924173`*^9}, {3.8697322841403294`*^9, 
   3.869732285809362*^9}, 
   3.8698001714973*^9},ExpressionUUID->"c2c7af9c-610b-4e1f-b7a8-b79f01d36348"],

Cell["\<\
Check that association from polynomial and combinatorial formula agree:\
\>", "Text",
 CellChangeTimes->{{3.8697355205186663`*^9, 3.869735565280126*^9}, {
  3.8697356862976427`*^9, 
  3.8697357004818068`*^9}},ExpressionUUID->"339455be-4689-46d7-bc2b-\
c0534a3a7aa1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmp", "=", 
      RowBox[{"RandomCmplx", "[", 
       RowBox[{"6", ",", "3", ",", "3", ",", "5"}], "]"}]}], ",", 
     RowBox[{"cols", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "->", "1"}], ",", 
        RowBox[{"2", "->", "1"}], ",", 
        RowBox[{"3", "->", "2"}], ",", 
        RowBox[{"4", "->", "2"}], ",", 
        RowBox[{"5", "->", "2"}], ",", 
        RowBox[{"6", "->", "3"}]}], "}"}]}], ",", 
     RowBox[{"dvec", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"And", "@@", 
     RowBox[{"ColorHVectorAlge", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cmp", ",", "cols"}], "}"}], ",", "dvec"}], "]"}]}], "/.", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"k_", "->", "x_"}], "]"}], ":>", 
     RowBox[{
      RowBox[{"ColorHVectorCombi", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cmp", ",", "cols"}], "}"}], ",", "dvec", ",", "k"}], "]"}], 
      "==", "x"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869732848736292*^9, 3.869732883355381*^9}, {
  3.8697335056444297`*^9, 3.8697335222055964`*^9}, {3.869734821453274*^9, 
  3.869734847572644*^9}, {3.8697349691892653`*^9, 3.869735025406824*^9}, {
  3.8697351348606143`*^9, 3.869735282775607*^9}, {3.8697354525666285`*^9, 
  3.8697354747205763`*^9}, {3.8697355106566706`*^9, 3.869735512137678*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"258b522a-7af4-4fd4-8b2a-2968020908ea"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8697328703443*^9, 3.86973294336607*^9, 3.869732986432479*^9, 
   3.869733127615675*^9, 3.869733537028863*^9, {3.869733955686323*^9, 
   3.869733972740362*^9}, 3.8697345740436144`*^9, {3.8697351909005976`*^9, 
   3.869735204809778*^9}, {3.869735260558571*^9, 3.869735265905608*^9}, {
   3.8697354608516016`*^9, 3.8697354784905643`*^9}, 3.8697355127987037`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"0f8ad690-d31a-4095-860e-4d21e36ba622"]
}, Open  ]],

Cell["Speed comparison of two methods:", "Text",
 CellChangeTimes->{{3.8697376439875355`*^9, 
  3.8697376874551888`*^9}},ExpressionUUID->"965b7663-b5de-41f7-988d-\
72823ce4f940"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cmp", "=", 
      RowBox[{"RandomCmplx", "[", 
       RowBox[{"7", ",", "3", ",", "4", ",", "5"}], "]"}]}], ",", 
     RowBox[{"cols", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "[", "10", "]"}], "->", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{"Range", "@", "3"}], ",", "10"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"dvec", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1"}], "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], ",", "3"}], "]"}]}], 
     ",", 
     RowBox[{"jvec", "=", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "@", 
       RowBox[{"ColorHVectorAlge", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cmp", ",", "cols"}], "}"}], ",", "dvec"}], "]"}]}]}], ",", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "@", 
       RowBox[{"ColorHVectorCombi", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cmp", ",", "cols"}], "}"}], ",", "dvec", ",", 
         RowBox[{"dvec", "+", "jvec"}]}], "]"}]}]}], ",", 
     RowBox[{"Length", "@", 
      RowBox[{"ColorHVectorAlge", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"cmp", ",", "cols"}], "}"}], ",", "dvec"}], "]"}]}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8697357697263985`*^9, 3.8697358499076157`*^9}, {
   3.869735994652151*^9, 3.8697360138551645`*^9}, 3.8697360470592237`*^9, {
   3.8697362350444946`*^9, 3.869736256704527*^9}, {3.8697362958163404`*^9, 
   3.8697363842002172`*^9}, {3.8697364481533847`*^9, 
   3.8697364522003775`*^9}, {3.8697365107428503`*^9, 3.869736617790105*^9}, {
   3.869736663414016*^9, 3.86973673658662*^9}, {3.8697368934077797`*^9, 
   3.86973689838878*^9}, {3.8697369363034124`*^9, 3.869737003756796*^9}, {
   3.8697370382815585`*^9, 3.8697371141602974`*^9}, {3.869737270071623*^9, 
   3.8697373184028273`*^9}, {3.869737415323766*^9, 3.8697374495884056`*^9}, {
   3.8697374920618777`*^9, 3.86973761138019*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"e64679bf-917f-43a6-a151-06d2ff059e2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0084746`", ",", "0.0044843`", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{
  3.869737079242875*^9, 3.8697371245893984`*^9, {3.8697372712296233`*^9, 
   3.86973728418475*^9}, 3.869737319073826*^9, {3.8697373950985727`*^9, 
   3.869737418294767*^9}, 3.869737525224429*^9, {3.8697375633589883`*^9, 
   3.8697376205414677`*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"c073526b-09b3-4c4e-9368-7be04c9692a7"]
}, Open  ]],

Cell["\<\
ColorHVector is not a refinment of the usual h-vector, it doesn\
\[CloseCurlyQuote]t even coincide with it when there\[CloseCurlyQuote]s one \
color (because of dimension \[OpenCurlyDoubleQuote]+1 shift\
\[CloseCurlyDoubleQuote]). Check whether it is a refinement of itself in case \
of just one color:  \
\>", "Text",
 CellChangeTimes->{{3.869737971322153*^9, 3.8697379864944615`*^9}, {
  3.8697382303346243`*^9, 3.8697382688484564`*^9}, {3.8697384882149043`*^9, 
  3.8697384998018975`*^9}, {3.8697385356400223`*^9, 3.869738556876685*^9}, {
  3.869819359195624*^9, 3.869819390738865*^9}, {3.869819439664943*^9, 
  3.86981958471972*^9}, {3.869819891485645*^9, 
  3.869819942894593*^9}},ExpressionUUID->"e9638927-0006-456c-bc53-\
c2a498a18434"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"cols", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "->", "1"}], ",", 
           RowBox[{"2", "->", "1"}], ",", 
           RowBox[{"3", "->", "1"}], ",", 
           RowBox[{"4", "->", "2"}], ",", 
           RowBox[{"5", "->", "2"}], ",", 
           RowBox[{"6", "->", "3"}], ",", 
           RowBox[{"7", "->", "3"}], ",", 
           RowBox[{"8", "->", "3"}]}], "}"}]}], ",", 
        RowBox[{"d", "=", "3"}], ",", 
        RowBox[{"pal", "=", 
         RowBox[{"{", 
          RowBox[{
           TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> RGBColor[0.38, 0.94, 1]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> RGBColor[0.51, 0, 0.5, 0.53]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> RGBColor[1, 0.5, 0.5]|>,
            "RGBColorSwatchTemplate"], ",", 
           TemplateBox[<|"color" -> GrayLevel[0]|>,
            "GrayLevelColorSwatchTemplate"]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"Background", "->", 
              RowBox[{"pal", "[", 
               RowBox[{"[", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "]"}], 
           "&"}], ",", 
          RowBox[{"Sort", "@", 
           RowBox[{"ColorHVectorAlge", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cmp", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "->", "1"}], "&"}], "/@", 
                "cols"}]}], "}"}], ",", 
             RowBox[{"{", "d", "}"}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"MapAt", "[", 
               RowBox[{
                RowBox[{"lst", "|->", 
                 RowBox[{"Style", "[", 
                  RowBox[{"lst", ",", 
                   RowBox[{"Background", "->", 
                    RowBox[{"pal", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"Total", "[", "lst", "]"}], "-", "2"}], "]"}], 
                    "]"}]}]}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"ColorHVectorAlge", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cmp", ",", "cols"}], "}"}], ",", "#"}], "]"}], "/.", 
                 RowBox[{
                  RowBox[{"{", "}"}], "->", 
                  RowBox[{"{", 
                   RowBox[{"{", "1", "}"}], "}"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"All", ",", "1"}], "}"}]}], "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"Cases", "[", 
            RowBox[{
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"0", ",", "d"}], "]"}], ",", "3"}], "]"}], ",", 
             RowBox[{"dv_", "/;", 
              RowBox[{
               RowBox[{"Total", "[", "dv", "]"}], "==", "d"}]}]}], "]"}]}], 
          ",", 
          RowBox[{"Frame", "->", "All"}]}], "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"cmp", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FullSimplex", "[", "7", "]"}], ",", 
        RowBox[{"SphereSimplex", "[", "6", "]"}], ",", 
        RowBox[{"RandomCmplx", "[", 
         RowBox[{"8", ",", "3", ",", "3", ",", "5"}], "]"}]}], "}"}]}], 
     "}"}]}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy00og3EAx/F5OeAwxEpeVpslsVrL1sRjtaw50GyrhchbaeT97cAk1hY2
pKYdCJEyo7SRLSu1HDYLBywpJJE1Ew6Ui/x/z+Hb5/TltPZq2mIZDAabBH/9
iYHP66jsSvoYhA/MjygzFJXdFWq/ocFZ+geVrqa4ZOJ0ZKkohfi6EqZtqXup
hoodjwpOpl/ooI9a7YCqEW8/tK3HzEJBs3gjlZgy9bgFe621u9CxeOOEFqHS
mEbkOOwmGOFp5qBVrp6HjMX47HRivV2eA4sl6lw44Ffkw9YxIx96qHIR3BaP
UfDEuieFqh+JHD6fd1XA6e4FE+SW5c3AJ3eJC27yBvfh0EHCKSxge87oP6lz
lEWk+JQePji1E3C3KtMExwWVFpi00UlrGJxcg+G3IG1jzaEXmt3hExi0HV9B
PfvoFjoUuvYMYrxvuwdqskTDcMjs0cOnb6GbS3xnRX3wa7bBDz959wHIdQkv
aZf7QvAf38/4Mw==
  "],
 CellLabel->
  "In[128]:=",ExpressionUUID->"b0fdc286-ce48-4615-af4e-53a28baa722f"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "3", "}"}], "\[Rule]", "21"}],
         StripOnInput->False,
         Background->RGBColor[1, 0, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "4", "}"}], "\[Rule]", "15"}],
         StripOnInput->False,
         Background->RGBColor[1, 1, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "5", "}"}], "\[Rule]", "10"}],
         StripOnInput->False,
         Background->RGBColor[0, 1, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "6", "}"}], "\[Rule]", "6"}],
         StripOnInput->False,
         Background->RGBColor[0.38, 0.94, 1]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "7", "}"}], "\[Rule]", "3"}],
         StripOnInput->False,
         Background->RGBColor[0.51, 0, 0.5, 0.53]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "8", "}"}], "\[Rule]", "1"}],
         StripOnInput->False,
         Background->RGBColor[1, 0.5, 0.5]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "3"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "3"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "2", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "3", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"3", ",", "0", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "3"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 0.5, 0.5]], "\[Rule]", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {GridBox[{
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "3", "}"}], "\[Rule]", "22"}],
         StripOnInput->False,
         Background->RGBColor[1, 0, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "4", "}"}], "\[Rule]", "10"}],
         StripOnInput->False,
         Background->RGBColor[1, 1, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "5", "}"}], "\[Rule]", "20"}],
         StripOnInput->False,
         Background->RGBColor[0, 1, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "6", "}"}], "\[Rule]", 
          RowBox[{"-", "4"}]}],
         StripOnInput->False,
         Background->RGBColor[0.38, 0.94, 1]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "7", "}"}], "\[Rule]", "8"}],
         StripOnInput->False,
         Background->RGBColor[0.51, 0, 0.5, 0.53]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "3"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "6"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "6"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "2", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "6"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "6"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"0", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "3", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "4"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "4"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "5"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "6"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "6"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "4"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "4"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "0", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"3", ",", "0", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.51, 0, 0.5, 0.53]], "\[Rule]", "2"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "6"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "6"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "1", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "2"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "3"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0.38, 0.94, 1]], "\[Rule]", 
            RowBox[{"-", "1"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[0, 1, 0]], "\[Rule]", "3"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", 
            RowBox[{"-", "3"}]}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "0"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}]}], "}"}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {GridBox[{
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "3", "}"}], "\[Rule]", "8"}],
         StripOnInput->False,
         Background->RGBColor[1, 0, 0]]},
       {
        StyleBox[
         RowBox[{
          RowBox[{"{", "4", "}"}], "\[Rule]", "1"}],
         StripOnInput->False,
         Background->RGBColor[1, 1, 0]]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}], 
     TagBox[GridBox[{
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "3"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "2"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "2", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"0", ",", "3", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "2"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "2"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "2"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 1, 0]], "\[Rule]", "1"}], ",", 
           RowBox[{
            StyleBox[
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}],
             StripOnInput->False,
             Background->RGBColor[1, 0, 0]], "\[Rule]", "2"}]}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{"{", 
           StyleBox["1",
            StripOnInput->False,
            Background->GrayLevel[0]], "}"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "0", ",", "1"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "0", ",", "1"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 0, 0]], "\[Rule]", "2"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "1", ",", "0"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}], "}"}]},
        {
         RowBox[{"{", 
          RowBox[{"3", ",", "0", ",", "0"}], "}"}], 
         RowBox[{"{", 
          RowBox[{
           StyleBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "0", ",", "0"}], "}"}],
            StripOnInput->False,
            Background->RGBColor[1, 0, 0]], "\[Rule]", "1"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{{
      Style[{3} -> 21, Background -> RGBColor[1, 0, 0]], 
      Style[{4} -> 15, Background -> RGBColor[1, 1, 0]], 
      Style[{5} -> 10, Background -> RGBColor[0, 1, 0]], 
      Style[{6} -> 6, Background -> RGBColor[0.38, 0.94, 1]], 
      Style[{7} -> 3, Background -> RGBColor[0.51, 0, 0.5, 0.53]], 
      Style[{8} -> 1, Background -> RGBColor[1, 0.5, 0.5]]}, 
     Grid[{{{0, 0, 3}, {
        Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1}}, {{0, 1, 
        2}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 2}}, {{0, 
        2, 1}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> 1}}, {{0, 
        3, 0}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{1, 0, 2}, {
        Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 2, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 2}}, {{1, 1, 
        1}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{3, 1, 1}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 1, 1}, Background -> RGBColor[1, 1, 0]] -> 1, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{1, 2, 1}, Background -> RGBColor[1, 1, 0]] -> 1, 
         Style[{1, 1, 3}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> 1, 
         Style[{1, 1, 1}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{1, 2, 
        0}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 1}}, {{2, 
        0, 1}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 2, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 2}}, {{2, 1, 
        0}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 2}}, {{3, 
        0, 0}, {Style[{3, 2, 3}, Background -> RGBColor[1, 0.5, 0.5]] -> 1}}},
       Frame -> All]}, {{
      Style[{3} -> 22, Background -> RGBColor[1, 0, 0]], 
      Style[{4} -> 10, Background -> RGBColor[1, 1, 0]], 
      Style[{5} -> 20, Background -> RGBColor[0, 1, 0]], 
      Style[{6} -> -4, Background -> RGBColor[0.38, 0.94, 1]], 
      Style[{7} -> 8, Background -> RGBColor[0.51, 0, 0.5, 0.53]]}, 
     Grid[{{{0, 0, 3}, {
        Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{3, 0, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -6, 
         Style[{2, 0, 3}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{1, 1, 3}, Background -> RGBColor[0, 1, 0]] -> 6, 
         Style[{1, 0, 3}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{0, 2, 3}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{0, 1, 3}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{0, 0, 3}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{0, 1, 
        2}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2,
          Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 1, 3}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{0, 2, 3}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{0, 2, 2}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{0, 1, 3}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{0, 1, 2}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{0, 2, 
        1}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3,
          Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -6, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 2, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 6, 
         Style[{1, 2, 1}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{0, 2, 3}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{0, 2, 2}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{0, 2, 1}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{0, 3, 
        0}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{1, 0, 2}, {
        Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -2, 
         Style[{3, 0, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{3, 0, 2}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -4, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 4, 
         Style[{2, 0, 3}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{2, 0, 2}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 1, 3}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{1, 0, 3}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{1, 0, 2}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{1, 1, 
        1}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2,
          Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{3, 1, 1}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 5, 
         Style[{2, 1, 1}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 1, 3}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{1, 1, 1}, Background -> RGBColor[1, 0, 0]] -> 2}}, {{1, 2, 
        0}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{3, 2, 0}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -6, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 6, 
         Style[{2, 2, 0}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{1, 2, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{1, 2, 1}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{1, 2, 0}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{2, 0, 
        1}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2,
          Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -4, 
         Style[{3, 1, 1}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{3, 0, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{3, 0, 2}, Background -> RGBColor[0, 1, 0]] -> 2, 
         Style[{3, 0, 1}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -2, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 4, 
         Style[{2, 1, 1}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{2, 0, 3}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{2, 0, 2}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{2, 0, 1}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{2, 1, 
        0}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{3, 2, 0}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{3, 1, 1}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{3, 1, 0}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{2, 2, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 3, 
         Style[{2, 2, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{2, 2, 1}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{2, 2, 0}, Background -> RGBColor[1, 1, 0]] -> -1, 
         Style[{2, 1, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> 1, 
         Style[{2, 1, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{2, 1, 1}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{2, 1, 0}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{3, 0, 
        0}, {Style[{3, 2, 2}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 
         3, Style[{3, 2, 1}, Background -> RGBColor[0.38, 0.94, 1]] -> -3, 
         Style[{3, 2, 0}, Background -> RGBColor[0, 1, 0]] -> 1, 
         Style[{3, 1, 3}, Background -> RGBColor[0.51, 0, 0.5, 0.53]] -> 2, 
         Style[{3, 1, 2}, Background -> RGBColor[0.38, 0.94, 1]] -> -6, 
         Style[{3, 1, 1}, Background -> RGBColor[0, 1, 0]] -> 6, 
         Style[{3, 1, 0}, Background -> RGBColor[1, 1, 0]] -> -2, 
         Style[{3, 0, 3}, Background -> RGBColor[0.38, 0.94, 1]] -> -1, 
         Style[{3, 0, 2}, Background -> RGBColor[0, 1, 0]] -> 3, 
         Style[{3, 0, 1}, Background -> RGBColor[1, 1, 0]] -> -3, 
         Style[{3, 0, 0}, Background -> RGBColor[1, 0, 0]] -> 1}}}, Frame -> 
      All]}, {{
      Style[{3} -> 8, Background -> RGBColor[1, 0, 0]], 
      Style[{4} -> 1, Background -> RGBColor[1, 1, 0]]}, 
     Grid[{{{0, 0, 3}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{0, 1, 2}, {
        Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> 1}}, {{0, 2, 
        1}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{0, 3, 0}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{1, 0, 2}, {
        Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> 1}}, {{1, 1, 
        1}, {Style[{1, 1, 2}, Background -> RGBColor[1, 1, 0]] -> 1, 
         Style[{1, 1, 1}, Background -> RGBColor[1, 0, 0]] -> 2}}, {{1, 2, 
        0}, {{
          Style[1, Background -> GrayLevel[0]]}}}, {{2, 0, 1}, {
        Style[{2, 0, 1}, Background -> RGBColor[1, 0, 0]] -> 2}}, {{2, 1, 
        0}, {Style[{2, 1, 0}, Background -> RGBColor[1, 0, 0]] -> 1}}, {{3, 0,
         0}, {Style[{3, 0, 0}, Background -> RGBColor[1, 0, 0]] -> 1}}}, 
      Frame -> All]}}]]], "Output",
 CellChangeTimes->{
  3.869811829731846*^9, 3.869813723453223*^9, {3.8698137641865563`*^9, 
   3.869813804425829*^9}, 3.8698138523382072`*^9, 3.869814016232257*^9, {
   3.869814294778053*^9, 3.8698143043392763`*^9}, {3.869814472656171*^9, 
   3.8698144785416217`*^9}, {3.8698198331608276`*^9, 3.8698198705554686`*^9}, 
   3.8698409703128147`*^9, {3.869841054334777*^9, 3.8698410697856517`*^9}},
 CellLabel->
  "Out[128]//TableForm=",ExpressionUUID->"30d1a625-b6d9-468c-b317-\
cdcd8c4f8ac5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Shiftedness and missing simplices", "Subsection",
 CellChangeTimes->{{3.8679237935205526`*^9, 3.867923835352769*^9}, {
  3.8679238699312153`*^9, 
  3.8679238888250923`*^9}},ExpressionUUID->"5e22708a-bb37-4207-be2d-\
2c7c0a8020d0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8700122649346685`*^9},ExpressionUUID->"9fa5444d-eefb-4c69-b05a-\
1bc287260fa4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tverberg proof exploring", "Chapter",
 CellChangeTimes->{{3.8682824605962296`*^9, 
  3.868282479989846*^9}},ExpressionUUID->"f5ee0ce5-f69b-4ddb-8792-\
fa5332e03b90"],

Cell[CellGroupData[{

Cell["Avoiding Complex", "Subsection",
 CellChangeTimes->{{3.8689498260671186`*^9, 
  3.868949844275159*^9}},ExpressionUUID->"b6580819-931b-4d46-86c9-\
9d0aed7a5d43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AvoidingComplexBrute", "[", 
   RowBox[{"points_", "/;", 
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"points", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "<=", "3"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Subsets", "[", 
      RowBox[{"points", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{"\[Not]", 
       RowBox[{"RegionMember", "[", 
        RowBox[{
         RowBox[{"ConvexHullRegion", "[", "#", "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Length", "@", 
            RowBox[{"First", "@", "#"}]}]}], "]"}]}], "]"}]}], "&"}]}], "]"}],
    "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"points", "->", 
     RowBox[{"Range", "@", 
      RowBox[{"Length", "@", "points"}]}]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"only", " ", "works", " ", "with", " ", "dimension"}], " ", "<=",
      "3"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.868282558921583*^9, 3.8682825623476954`*^9}, {
  3.868282606738613*^9, 3.8682826894809136`*^9}, {3.868283031937939*^9, 
  3.8682830796622095`*^9}, {3.8682832842212734`*^9, 3.86828332975815*^9}, {
  3.8682834935087433`*^9, 3.8682835035665812`*^9}, {3.8682844530468273`*^9, 
  3.8682844658250036`*^9}, {3.868284524225554*^9, 3.868284546818165*^9}, {
  3.8684432783388424`*^9, 3.8684433211637993`*^9}, {3.8684447143047876`*^9, 
  3.8684447160213466`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"89e91dda-cc68-4b97-a1cc-ea50e6bf568d"],

Cell[TextData[{
 "Check avoiding complex in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3df83594-0c2a-4fbe-9304-01b1734bf861"],
 " is 3-collapsible:"
}], "Text",
 CellChangeTimes->{{3.8682845537240963`*^9, 3.868284590011607*^9}, 
   3.868284795703043*^9, {3.8684432710571404`*^9, 
   3.8684432726344976`*^9}},ExpressionUUID->"52964ab0-c4a1-4766-b049-\
00975ee705be"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rndpts", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "8", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DCollapsible", "[", 
       RowBox[{
        RowBox[{"AvoidingComplexBrute", "[", "pts", "]"}], ",", "3"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"pts", ",", "rndpts"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8682833536226234`*^9, 3.868283370202117*^9}, {
   3.8682834346111813`*^9, 3.8682834519138174`*^9}, {3.86828351075356*^9, 
   3.868283526627058*^9}, 3.8682836227949505`*^9, {3.868283758695483*^9, 
   3.868283851867135*^9}, {3.8682838824662046`*^9, 3.8682839629671483`*^9}, {
   3.8682840524265833`*^9, 3.868284099475049*^9}, {3.8682842638542585`*^9, 
   3.868284299589737*^9}, {3.8682843319326997`*^9, 3.8682843600729003`*^9}, {
   3.868284428492491*^9, 3.868284433232599*^9}, {3.8684447874096007`*^9, 
   3.8684447898949533`*^9}},ExpressionUUID->"ca6eaa0f-e679-4231-8a07-\
38f27a8684da"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8682833934510455`*^9, 3.8682834525146017`*^9, {3.8682835194794755`*^9, 
   3.8682835273678718`*^9}, 3.868283624288183*^9, {3.8682837959785023`*^9, 
   3.868283814252885*^9}, 3.8682841208051977`*^9, 3.868284296602838*^9, {
   3.8682843287407355`*^9, 3.8682843682128115`*^9}, 3.8682851386450243`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"ad6b82e9-71b8-43ed-b83c-8efa2b8a322d"]
}, Open  ]],

Cell[TextData[{
 "2-collapsible in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "0ec6851c-22a9-4517-8751-857e54d8378a"],
 ":"
}], "Text",
 CellChangeTimes->{{3.8682845537240963`*^9, 3.868284590011607*^9}, 
   3.868284795703043*^9, {3.8682858854869375`*^9, 
   3.868285898637561*^9}},ExpressionUUID->"a2e48e15-5232-4949-a717-\
4fc8e7637e37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rndpts", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "8", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DCollapsible", "[", 
       RowBox[{
        RowBox[{"AvoidingComplexBrute", "[", "pts", "]"}], ",", "3"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"pts", ",", "rndpts"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8682848565997996`*^9, {3.8684447926694546`*^9, 
   3.868444795455056*^9}},ExpressionUUID->"1edbfcdc-8e75-4533-bc7b-\
44684777ffd7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8682857848862505`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"c01feed9-f9dd-4088-8335-f549285f5892"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SimplexInteriorMember", "[", 
   RowBox[{"verts_", ",", "pt_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vects", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", 
           RowBox[{"verts", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "&"}], "/@", 
        RowBox[{"Rest", "[", "verts", "]"}]}]}], ",", 
      RowBox[{"vec", "=", 
       RowBox[{"pt", "-", 
        RowBox[{"verts", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}]}], "}"}], ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"sl", "=", 
        RowBox[{"LinearSolve", "[", 
         RowBox[{
          RowBox[{"vects", "\[Transpose]"}], ",", "vec"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{
       RowBox[{"AllTrue", "[", 
        RowBox[{"sl", ",", 
         RowBox[{
          RowBox[{"#", ">=", "0"}], "&"}]}], "]"}], "\[And]", 
       RowBox[{
        RowBox[{"Total", "[", "sl", "]"}], "<=", "1"}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConvexHullMember", "[", 
   RowBox[{"ptlist_", ",", "pt_"}], "]"}], ":=", 
  RowBox[{"Or", "@@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"SimplexInteriorMember", "[", 
       RowBox[{"#", ",", "pt"}], "]"}], "&"}], "/@", 
     RowBox[{"Subsets", "[", 
      RowBox[{"ptlist", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "@", "pt"}], "+", "1"}], "}"}]}], "]"}]}], 
    ")"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8683478396026945`*^9, 3.8683478679309173`*^9}, {
  3.8684302956654897`*^9, 3.8684303065007305`*^9}, {3.868435496152107*^9, 
  3.868435519015909*^9}, {3.8684417931558013`*^9, 3.868442081902526*^9}, {
  3.8684421263947697`*^9, 3.8684423719417577`*^9}, {3.868442621528062*^9, 
  3.8684426902247133`*^9}, {3.8684427676969166`*^9, 3.8684427718569994`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"954cd83d-fe2a-40e1-bcc2-4243d19e148f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"AvoidingComplex", "[", "points_", "]"}], ":=", 
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"simps", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", 
           RowBox[{"points", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"points", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", "1"}], "}"}]}], 
           "]"}], ",", 
          RowBox[{
           RowBox[{"\[Not]", 
            RowBox[{"SimplexInteriorMember", "[", 
             RowBox[{"#", ",", 
              RowBox[{"0", "*", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "&"}]}], "]"}]}],
        ",", 
       RowBox[{"sz", "=", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"points", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", "1"}]}]}], "}"}], ",", 
     RowBox[{"Generate", "[", 
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{"points", ",", 
         RowBox[{"{", 
          RowBox[{"sz", "-", "1"}], "}"}]}], "]"}], "~", "Join", "~", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{"points", ",", 
           RowBox[{"{", 
            RowBox[{"sz", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", 
         RowBox[{"fc", "|->", 
          RowBox[{
           RowBox[{"Subsets", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", "sz", "}"}]}], "]"}], "&"}]}]}], "]"}]}], "]"}]}], 
    "]"}], "/.", 
   RowBox[{"Thread", "[", 
    RowBox[{"points", "->", 
     RowBox[{"Range", "@", 
      RowBox[{"Length", "@", "points"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Produces", " ", "complex", " ", "with", " ", "full", " ", "d"}], 
    "-", 
    RowBox[{"1", " ", "skeleton"}]}], " ", "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.868435794279578*^9, 3.86843580622511*^9}, {
   3.8684363586517134`*^9, 3.868436441542601*^9}, {3.8684364727099075`*^9, 
   3.8684364872290316`*^9}, {3.8684423797611427`*^9, 3.868442381006587*^9}, {
   3.868442419559155*^9, 3.8684424249780235`*^9}, {3.8684424662996655`*^9, 
   3.868442500862662*^9}, {3.8684425805548*^9, 3.868442590680704*^9}, {
   3.868442760654461*^9, 3.86844283255411*^9}, {3.8684434138821297`*^9, 
   3.868443596516632*^9}, {3.868443657945595*^9, 3.8684436824361496`*^9}, {
   3.868443739436817*^9, 3.8684437402094374`*^9}, {3.8684437913940573`*^9, 
   3.8684438034317093`*^9}, {3.868443853049514*^9, 3.8684439067586184`*^9}, {
   3.8684439629534025`*^9, 3.868443969050009*^9}, 3.868444021583002*^9, {
   3.86844408417106*^9, 3.86844408770501*^9}, {3.86844417451145*^9, 
   3.8684442313613253`*^9}, {3.86844428169549*^9, 3.868444301393203*^9}, {
   3.8684444111198673`*^9, 3.8684447037959595`*^9}, 3.8684447504012623`*^9, {
   3.868445003642766*^9, 3.8684450135146427`*^9}, {3.8684450624379272`*^9, 
   3.8684450640151668`*^9}, {3.868445126801523*^9, 3.868445158842705*^9}, {
   3.868445200663973*^9, 3.868445227246122*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"3dfed76f-8027-4e41-abde-abc312050b0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rndpts", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "8", ",", "4"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"And", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"DCollapsible", "[", 
       RowBox[{
        RowBox[{"AvoidingComplex", "[", "pts", "]"}], ",", "4"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"pts", ",", "rndpts"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8684447455713706`*^9, 3.868444894190037*^9}, {
   3.868445451250086*^9, 3.868445451606229*^9}, 3.8684454869227023`*^9, {
   3.868445555757136*^9, 3.868445593314925*^9}, {3.8684456558633046`*^9, 
   3.8684457084776816`*^9}, {3.8684457916201115`*^9, 3.8684457975093393`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"376b090f-0ab4-4b81-9d0e-4629aaafd7a0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.868444895564418*^9, 3.868445031571935*^9, 3.868445066795649*^9, 
   3.8684451653719215`*^9, {3.8684456517002525`*^9, 3.86844569314635*^9}, 
   3.868445787883273*^9, 3.8684458659210033`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"c2c88e39-5a39-442f-b5d8-a4ced2db2fc8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Collapsibility of avoiding complex pictures", "Subsection",
 CellChangeTimes->{{3.8713821918643026`*^9, 
  3.871382227746477*^9}},ExpressionUUID->"c661b5bb-c9f5-4340-ab0f-\
19d597be69cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "@", 
  RowBox[{"Dodecahedron", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.871382231707813*^9, 3.8713822428202972`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"605b742c-bc38-4166-a99d-b58ca021e807"],

Cell[BoxData[
 Graphics3DBox[
  InterpretationBox[
   PolyhedronBox[
    NCache[{{-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, Root[
       1 - 20 #^2 + 80 #^4& , 3, 0]}, {(1 + 2 5^Rational[-1, 2])^
       Rational[1, 2], 0, Root[1 - 20 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
        Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 3, 0]}, {(Rational[5, 8] + 
        Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 3, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
      Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[-1, 2], Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
      Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], Rational[
       1, 2], Root[
       1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 4] + 
        Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[-1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
       Rational[1, 2]}, {(Rational[1, 4] + Rational[1, 2] 5^Rational[-1, 2])^
       Rational[1, 2], Rational[
       1, 2], (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
       Rational[1, 2]}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^
       Rational[1, 2], 0, Root[1 - 100 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 2, 0]}, {
      Root[1 - 5 #^2 + 5 #^4& , 1, 0], 
       0, (Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^
       Rational[1, 2]}, {
      Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 1, 0]}, {
      Root[1 - 20 #^2 + 80 #^4& , 3, 0], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
       1 - 100 #^2 + 80 #^4& , 1, 0]}, {(Rational[1, 8] + 
        Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 2, 0]}, {(Rational[1, 8] + 
        Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
       1 - 20 #^2 + 80 #^4& , 2, 0]}}, {{-1.3763819204711736`, 0, 
       0.2628655560595668}, {
      1.3763819204711736`, 
       0, -0.2628655560595668}, {-0.42532540417601994`, -1.3090169943749475`, 
      0.2628655560595668}, {-0.42532540417601994`, 1.3090169943749475`, 
      0.2628655560595668}, {1.1135163644116066`, -0.8090169943749475, 
      0.2628655560595668}, {1.1135163644116066`, 0.8090169943749475, 
      0.2628655560595668}, {-0.2628655560595668, -0.8090169943749475, 
      1.1135163644116066`}, {-0.2628655560595668, 0.8090169943749475, 
      1.1135163644116066`}, {-0.6881909602355868, -0.5, \
-1.1135163644116068`}, {-0.6881909602355868, 0.5, -1.1135163644116068`}, {
      0.6881909602355868, -0.5, 1.1135163644116066`}, {0.6881909602355868, 
      0.5, 1.1135163644116066`}, {
      0.85065080835204, 
       0, -1.1135163644116068`}, {-1.1135163644116068`, -0.8090169943749475, \
-0.2628655560595668}, {-1.1135163644116068`, 
      0.8090169943749475, -0.2628655560595668}, {-0.8506508083520399, 0, 
       1.1135163644116066`}, {
      0.2628655560595668, -0.8090169943749475, -1.1135163644116068`}, {
      0.2628655560595668, 0.8090169943749475, -1.1135163644116068`}, {
      0.42532540417601994`, -1.3090169943749475`, -0.2628655560595668}, {
      0.42532540417601994`, 1.3090169943749475`, -0.2628655560595668}}], {{15,
     10, 9, 14, 1}, {2, 6, 12, 11, 5}, {5, 11, 7, 3, 19}, {11, 12, 8, 16, 
    7}, {12, 6, 20, 4, 8}, {6, 2, 13, 18, 20}, {2, 5, 19, 17, 13}, {4, 20, 18,
     10, 15}, {18, 13, 17, 9, 10}, {17, 19, 3, 14, 9}, {3, 7, 16, 1, 14}, {16,
     8, 4, 15, 1}}],
   Dodecahedron[]],
  ImageSize->{353.98161995464864`, 328.2848782957424},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.3960865706507761`, -2.732209089879075, 1.426876230242382},
  ViewVertical->{0.07945539777701723, -0.14543412271657014`, 
   0.9861722748656837}]], "Output",
 CellChangeTimes->{3.8713822445123067`*^9},
 CellLabel->"Out[211]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
IE8F1yaBWsoF6lHFNEQg2lhL/3fEMn4RzlUkjA9MDWkHomRh2YWYcblwZbGU
9JqvjIfrJMJiViEHDCGo0Tef+FAMqMGDPcfXe1cFcKPH2yQ79yhn6e2ffCe7
sEBib3Hgy7JhCZUvydQpeyPPEMfGhrwW62jAHBrZ+4hXNGefsNEoe8DH6nrt
jKx58pqLTu+nb2DAcH1Sq9WZ4AtYoRXsYQyqAQZrIW8/AiEszfDG3EIEfNUm
XGLnEfStNgjZdtqBQaQFc24oFXZDVuDJ/YqCP3nXY5/8sEuI7xhVeGa+shDW
Mip/oakPiyHcwSpssyxFBP7Vv3/8WQ/Ncb4RRmHJHjrVuMnmz7VMeEN+wuvo
82Ee+VYohSflKwrgEot/7XCiC3Xt5yz4Me+fKiz0Fxhn/qe/0GyH9JmFLWaF
FTs/oBq2Xb3/8Wc7FNnZvfbJpdael04eF2nf7dRsi+R+tkNpE3YwFy+W8yZm
6FG8eeyz7XUd+h7cMSysbnnvL6yb/+gvNNvh/vfZZ8sR8GZUqK9fOrbZlgtF
6HthIG46FtbG042TP1c92/oynbLZDmGMt8AXloN8rQYU5F9PVmlJXMuE/1U4
+UPlJ59inPzLf6EJD7usuVlaWIPxhkDYi/NwQkCjHcuE84Ufj5afnDfQQRHL
Bkpvd3bCg+bCKntxvTbOOKmKgcc64aG1mH0pndwqWXjrExSLt/6FJvxvAoKv
lCMYZSAIrtYshN2i0daEax4dgkT2ZDq5VeDwphuo2K5C3ROoWic8xMbsaf/b
Ju8n4Bk9hT7w8Wc7cHwOFDZR5w0dUObs+QtNdSjUsm8GQfKnp4+SwIMMBDvS
V0qqJbnLb36WQ+LPnrHPK5SB7xMDJcrW4lmmITqgxv8Uzvvt8vOGfepYk6z/
+HP9L+HkKhNZvDxcQonlyMrap1vCoomA9+U8nxBYvLwPIvAsc8nHmu7A6rn1
Xbh02cs4L1/clJ/uWsqgUMxkL6aTWrQ03EINi5Dp5er2BLoW7wrtoQDj++Uw
+F5qsPttQudn3WLIAQZ3BF4OMIrKBOtxlS01TX1RX0TV8tkryYesk1tPYBmM
89+ZMlg1M7JX7TMLU1c3xY21Sd/atd+xEXAz4Mf+d7ci0kxvxhKlWw3n76A2
8qfmbkBYLmi2Ti2xU65dPJb6158qXFaa/dT/btSnom/6Oa1lzsK1Y1nW5f8B
auhFMw==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"8dd13c44-7e72-47ae-bfb3-14a601f5d08d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics3D", "[", 
   RowBox[{"ConvexHullMesh", "[", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pts", "=", 
        RowBox[{"PolyhedronCoordinates", "[", 
         RowBox[{"Tetrahedron", "[", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{"pts", ",", 
        RowBox[{"pts", "*", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}], "]"}], "]"}], "]"}], 
  RowBox[{"(*", "Lol", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8713859878648567`*^9, 3.871386116951245*^9}, {
  3.871456510935859*^9, 3.8714565167739334`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"c97bd416-c34b-4acf-b392-800d28e3249d"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[{{0., 0., 
      0.6123724356957945}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 0.5, -0.20412414523193154`}, {
      0.5773502691896258, 0., -0.20412414523193154`}, {0., 
      0., -0.6123724356957945}, {0.2886751345948129, 0.5, 
      0.20412414523193154`}, {0.2886751345948129, -0.5, 
      0.20412414523193154`}, {-0.5773502691896258, 0., 
      0.20412414523193154`}}, {
       Polygon[{{4, 7, 2, 5}, {8, 3, 5, 2}, {5, 3, 6, 4}, {8, 2, 7, 1}, {3, 8,
         1, 6}, {7, 4, 6, 1}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 6956151198531019947}, {PlotTheme -> None}]]}, 
    TagBox[
     GraphicsComplex3DBox[{{0., 0., 
      0.6123724356957945}, {-0.2886751345948129, -0.5, \
-0.20412414523193154`}, {-0.2886751345948129, 0.5, -0.20412414523193154`}, {
      0.5773502691896258, 0., -0.20412414523193154`}, {0., 
      0., -0.6123724356957945}, {0.2886751345948129, 0.5, 
      0.20412414523193154`}, {0.2886751345948129, -0.5, 
      0.20412414523193154`}, {-0.5773502691896258, 0., 
      0.20412414523193154`}}, {{}, 
       TagBox[
        Polygon3DBox[{{4, 7, 2, 5}, {8, 3, 5, 2}, {5, 3, 6, 4}, {8, 2, 7, 
         1}, {3, 8, 1, 6}, {7, 4, 6, 1}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "BoundaryMeshRegion"],
  ImageSize->{311.52331535491936`, 324.4191007234484},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.9839385773646647`, -1.5879863090569968`, 0.15623715551199213`},
  ViewVertical->{0.5012672858838133, -0.3105209982342488, 
   0.8076557544884337}]], "Output",
 CellChangeTimes->{3.8713861213703985`*^9, 3.8714565181308775`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"f40c59b3-0d31-4612-8080-73317da22bc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSeeding", "[", "42", "]"}], ";", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"tet", "=", 
       RowBox[{"PolyhedronCoordinates", "@", 
        RowBox[{"Tetrahedron", "[", "]"}]}]}], ","}], "}"}], ",", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"tet", ",", 
       RowBox[{"tet", "*", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}]}], "]"}], "+", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "3"}], "}"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8714565629103546`*^9, 3.8714567049231377`*^9}, {
  3.8714567675500107`*^9, 3.8714569270952845`*^9}, {3.871456962594514*^9, 
  3.8714569914236135`*^9}, {3.8714636318786297`*^9, 3.8714636673005905`*^9}, {
  3.8714637078540645`*^9, 
  3.8714638185979204`*^9}},ExpressionUUID->"5a1b0f23-9986-41c2-baae-\
80a276903dca"],

Cell[BoxData[
 Graphics3DBox[
  {Opacity[0.8], 
   TagBox[
    DynamicModuleBox[{Typeset`mesh = HoldComplete[
      BoundaryMeshRegion[{{-0.08583652401229339, -0.0016217696087096334`, 
       0.5255104733957288}, {-0.30659895674267185`, -0.4388501045927871, \
-0.1239241019545749}, {-0.32643189951593843`, 
       0.4118524673886666, -0.16639092351806847`}, {0.6222880099648592, 
       0.009922086891198945, -0.26229973817265645`}, {0.03357290391023665, 
       0.07503526999452026, -0.5668561424284337}, {0.23206502399550094`, 
       0.5197350997726153, 0.23837675123304333`}, {
       0.1959133974027794, -0.43960620581325854`, 
       0.2446691134055549}, {-0.6770326952596545, -0.011498489034518389`, 
       0.2856347293166772}}, {
        Polygon[{{6, 7, 4}, {5, 6, 4}, {1, 6, 8}, {7, 1, 8}, {1, 7, 6}, {6, 3,
          8}, {5, 3, 6}, {7, 2, 4}, {2, 5, 4}, {2, 7, 8}, {3, 2, 8}, {2, 3, 
         5}}]}, Method -> {
        "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
         Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
         Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
         Automatic, "CheckIntersections" -> Automatic, 
         "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
         "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
         Automatic, "Hash" -> 7377631679548919602}, {PlotTheme -> None}]]}, 
     TagBox[
      GraphicsComplex3DBox[{{-0.08583652401229339, -0.0016217696087096334`, 
       0.5255104733957288}, {-0.30659895674267185`, -0.4388501045927871, \
-0.1239241019545749}, {-0.32643189951593843`, 
       0.4118524673886666, -0.16639092351806847`}, {0.6222880099648592, 
       0.009922086891198945, -0.26229973817265645`}, {0.03357290391023665, 
       0.07503526999452026, -0.5668561424284337}, {0.23206502399550094`, 
       0.5197350997726153, 0.23837675123304333`}, {
       0.1959133974027794, -0.43960620581325854`, 
       0.2446691134055549}, {-0.6770326952596545, -0.011498489034518389`, 
       0.2856347293166772}}, {{}, 
        TagBox[
         Polygon3DBox[{{6, 7, 4}, {5, 6, 4}, {1, 6, 8}, {7, 1, 8}, {1, 7, 
          6}, {6, 3, 8}, {5, 3, 6}, {7, 2, 4}, {2, 5, 4}, {2, 7, 8}, {3, 2, 
          8}, {2, 3, 5}}],
         Annotation[#, "Geometry"]& ]}],
      MouseAppearanceTag["LinkHand"]],
     AllowKernelInitialization->False],
    "BoundaryMeshRegion"]},
  ImageSize->{327.77379643825066`, 305.0642790443073},
  ImageSizeRaw->Automatic,
  ViewPoint->{1.6050331036919776`, -2.4823557975337978`, 1.6467478345221043`},
  ViewVertical->{0.1338432312297779, -0.04264930278459176, 
   0.9900843531871213}]], "Output",
 CellChangeTimes->{{3.871456863439073*^9, 3.8714568711806383`*^9}, 
   3.87145692769128*^9, {3.8714569639786844`*^9, 3.8714569919715796`*^9}, 
   3.8714636682208867`*^9, 3.8714637084250374`*^9, 3.871463738817422*^9},
 CellLabel->"Out[231]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9fQmYXVWV7k3dqeYhlVRSqUqNmedQmSoTFSCQhEAYEzKSeSQDGSAMQWyH
FlBUGhscsH2KjSJP7KdoI40Bp25bkVZbBdtn65Nna7f9Bt9LKlV1U/XOWntc
5/7n3Ftgv3xf3dQ9de4++//3v4a99j7nXrPj5P49h3ecPLBrR9tVx3cc239g
14m2K48eDw4lRyQSI34f/Hy3LZEKfh9KJPJe/j2RsL//Cf+a6vnud7977CMf
+chfvP3tb6ff93mn3KdOqd22bdv2p5566tl77rnnfx44cKBkaO/evSX0WyI5
53e/+13C/NvtffZu99nrnnvuufc/8MAD9rOJ7Nk77riDDtGf6Dz6E/2FLpHY
6zVzJ/+apPPu/+AHP/jq7bffnlBtpOgz1GvqGl0myaem6VfTFP1P4BJ7vCZP
yCapK4kkN5mkz9D5jCrL52VMe0SOQdHW0NDggz2qmjRchpuky3CTFapJOo/+
SseoeUJF5/lNHpJNMjGhJulviRo+L0to6K/UHB0w74mcxC6v3X1yTIlANy5J
My7cdL3qAl2e/0r/StQxQwRfbqfX/G5HLp3jjVfynw8fPmzHfIw6j2CwkLy2
qU0ztqLt7cVrYZzrJp/G79zH6UPcjR1e81uK1EWLOo/+zqPCfKpj9J5gMi3b
vbZvKSwQprxDnWcE4bdNmiOYhEm0fZP7e6xSJqnzqA06xu/Scoj5vFu9tq8r
Xi3TVFPW5OhfBtCyzWv+mki1pHy10OdmOHFYXWcBM37zq8GIhgRDXaU256hT
aYAtEaWAnK1e8yuLFMw8KTw+VuZERKiZmS1e2yuKFMwi2Ta3UyZp4cH2216m
BtUXjDeoovmlqilhpuWOFjrG5232mu+WmpGePyk8f49qypziNc8fp3Pph37f
5F1hQbRswo7gcnUqHWIO6V+FG2vLj9/8JYXHlbhLXOXG0BprpSSMx3qj1/Ys
13ZspLhanUfQ2A96bZuIwZ/1254mNRPpCNap84QjqHKfpeNswbd4bU+Sgxrn
CG5w3bTOoEYONEPc4DXfKUeUjN+EDYJqBbNetu1FwKQfSEXbrXI449Sy0bFg
LbXWfdzCWe8131RYLdzOVtkOW2qdpIWP3ey1PUaOaKRaVBhLEgwbqescLdQ2
0+K3raM7fT5WLXukovndSImFh+Ymr+2a4tVywFHAo+51jT5mw8aNXvOVUi2R
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
mRtprcHods0OWdTlqbJdlxQvdszTh+iPxL5u8lRMV6dECUYpiQOZ2QVNI1jC
bi5DOjLVLmrPBEd9xTtjQExy4yrlo8rVFXRF6hpd0d/qTx8wCRk1yull1m03
NgPpb8hW3j5xOoYAdVVZuvMmMxEEpExPzI5w1ZG0WREziRFnLfojZvOv2QCs
srTE3apzcDanywv5dYLKN81Vhc8VnWO2aNNnzZ061CZLQc1vdTkV74VpjxK7
Oj/MX+KPR6AqTybOxBCo5+diGvl/8rmjls1NEb603wx31C5fW4UsXfTHM1A0
yf/NW+bOt4Io7lR6yXX8qCl4MzDUnxXPnQl9mrtUeFRVx9KQOjWX04tUedRx
5NRzdDEDeUVS51tFLHUl9BtPxhJZ4zrogoY0aw6qupJ4Rz5rdrbc6EzWTihe
jnMl6TdJmj+afGVVu9QLq3kT1DHATJ+jQyUco1VaNlz/4ftaSJgKBIl3S8LE
lhM91zbJGpvoZwsS5o8hE5YZvv94p+rcezBho4BtfuxNu92kT1uihLuVMa4j
TJvaDql3C+CZ9EhgnO9/y56jGNaeUJ17CLNWB8xSr5b7rCVK1DMMjNMIs6b6
VVaMv1UCVopJvDeGMj0HF/PEO/6/UPZl1bmHJWVmKhH60l22TDWFKCvGzyZK
XK8qwj2KDVBfT4Rlk1fnCH1Dn/fMqf/oAPWq6pz+fpNwmUfPs8Vuoxuccfp9
+mPHpn9SHXskhjX0/Q4rJWtFx6ZhOtzfqt496mjzyzFZYJ1qTvLHC055I3lO
delDjgC/eMCEpYFpznDD+VZS3IKMqfV/1cfHMG3ouXPtcbT9MZyGt+yYeFy5
A1h4ScgHlujVsP/4qYG3UpLQm6TDFQ9TvPTuKfkP9LJedTTxUX6t9Akz09S4
PP/NpPleCSehYmMZ/Z0X94LWzKWHhULt8E8kRvw/xnI8Fg==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"604a0f8a-07fd-4450-8166-c2301683b08e"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alexander dual", "Chapter",
 CellChangeTimes->{{3.8684363002208185`*^9, 3.8684363107849464`*^9}, 
   3.8697194978950987`*^9, 
   3.8697272991017656`*^9},ExpressionUUID->"f8fe9987-5a91-465d-b7d8-\
531bed84a4a0"],

Cell[CellGroupData[{

Cell["Implementation", "Subsection",
 CellChangeTimes->{{3.8689498576375985`*^9, 
  3.868949864329482*^9}},ExpressionUUID->"819537fe-c7a8-490e-b6d8-\
c01a22a4e6cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlexanderDual", "[", "cmplx_", "]"}], ":=", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vset", "=", 
        RowBox[{"Range", "@", 
         RowBox[{"Max", "@", "cmplx"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Complement", "[", 
         RowBox[{"vset", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Complement", "[", 
        RowBox[{
         RowBox[{"Subsets", "[", 
          RowBox[{"vset", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\[Infinity]"}], "}"}]}], "]"}], ",", "cmplx"}],
         "]"}]}]}], "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8684363191416335`*^9, 3.8684363342857337`*^9}, {
  3.8684459362675657`*^9, 3.8684459719447064`*^9}, {3.8684460225458364`*^9, 
  3.868446042727285*^9}, {3.8684461249127235`*^9, 3.868446219903401*^9}, {
  3.868446376384865*^9, 3.8684463855884995`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"20082caf-5450-48b3-9339-d4578c770bad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlexanderDual", "[", 
  RowBox[{
   RowBox[{"SphereSimplex", "[", "1", "]"}], "+", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.868446257114902*^9, 3.8684462937600117`*^9}, {
  3.8684463475951195`*^9, 3.868446358810768*^9}, {3.868446470162776*^9, 
  3.8684464720525284`*^9}, {3.8684465405982423`*^9, 3.86844658515809*^9}, {
  3.8684474660551596`*^9, 3.868447470192794*^9}, {3.8686777583204303`*^9, 
  3.8686777836097555`*^9}, {3.8686778219564915`*^9, 3.868677827053928*^9}, {
  3.868677871038192*^9, 3.868677908058262*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"70c8c21e-f15e-4881-8ed5-eb41238f760d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.868446361131075*^9, 3.868446388676852*^9}, 
   3.8684464732080364`*^9, 3.868446543133991*^9, {3.8684465780182796`*^9, 
   3.8684465857380047`*^9}, 3.868677910377435*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a19a97df-80b7-459c-987c-02588688c8bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Generate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868678051167359*^9, 3.8686780601765375`*^9}, {
  3.868678132658882*^9, 3.868678134413273*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b4d1d904-45d9-44d8-9546-24d2cc8612b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.868678135691482*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"9b4df866-d87e-48eb-9987-b263177ecb1a"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random stuff", "Chapter",
 CellChangeTimes->{{3.8711172108718424`*^9, 
  3.8711172242311783`*^9}},ExpressionUUID->"10cdb10a-fcb6-4b39-a5de-\
cbd41090ec92"],

Cell[CellGroupData[{

Cell["Moment curve and cyclic polytopes", "Subsection",
 CellChangeTimes->{{3.871117234877481*^9, 
  3.871117272285321*^9}},ExpressionUUID->"7b64984e-fc90-46d0-961e-\
93bea5a5e94a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", 
     SuperscriptBox["t", "2"], ",", 
     SuperscriptBox["t", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8711172770285463`*^9, 3.871117339365944*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"4fb58be2-7896-4e63-a796-0234cf606474"],

Cell[BoxData[
 Graphics3DBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Line3DBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$1021369#1"]& ]}, {}},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{238.8796455549082, 236.66666666666666`},
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {0., 
   0.9999999183673486}, {-0.9999998775510254, 0.9999998775510254}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.0654280074377393, 3.3574400119408447`, -0.41631207292292755`},
  ViewVertical->{0.032938915542045484`, 0.9509256377642729, 
   0.3076612736200721}]], "Output",
 CellChangeTimes->{{3.8711173246214905`*^9, 3.871117340367962*^9}},
 CellLabel->"Out[209]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlXQuQpUdV7sx9zMzuJpmwEAJ53YBAiHkMAaOJgVwlBINSLim1xNJwY0hI
LAITggGJpm6wEKKxhlRZYOJjLRWCIEwojQYBl/DGAAsSCS9ZIMUjIqwiglLI
OufVfb7+z3//2ZmNluWtujP3/rf/Po8+fV59uv+nX/LCKy676pIXXnnpJaOn
vuCSlSuuvPSa0QXPf8H6pd5hKR32nPX3paPUX/98IKXGnytS+n/1+Yn8sTda
/7Oc9HWy+/1x8vvq+p899vtcuYfaTMq14Xj9zz69vl/vWVp/P2ZDXW6nplOH
ypJ2t+q+77XvXX0O5douRcWjbteov/Ro18+j5HfCYU3fqb+W78mvuXZ4EauW
tf+xg/c1/jtYTcitkbttrOQul2uDFb1m96yULnuTJOybMtrTDHojaO82cl27
JYWzy6H9z3LTqoLfpeitaZc6kHZppB3u0p5W9NpYb+eBbB28Oeqi147LV/Gn
iUN95JsP5NregESTBEb0dL7WX9ImhtB84VA9sAZ67LC6j/7MT3NXY20zKsR4
mU597m+p/ArSchpfG9C1fUpjZpQiZiLhEbM+Rg6x26SrJdfFmoHpla6m2NVg
om0JBP3O7Dml8KSeKATSxluISz26f7f1uyjXrM2yI9MUwP5UZoSRuezbO0nO
k9uTOccM6e9SWvcrnXLbtjWPjkN3VT/v09/PFCgTo8ZxCigSKudXkpvDyqk9
huFyoSJTtsDXhoSOcXclFcFVDffaggUqMp4fMn/nCeWpI2mUnBA97uDoMEj7
EmrzZdfX2MOTEcqjZ5LFk+9kIGI1NecgEKYCYxNr2aEKs2a5oJHl3LXLqGl/
KDx01y/J75dLq2W9h/ofl64IDUJvqXTftzkyVbBnSNNslxxlgJ1iYrLmuuyB
PC4X0PsTajXjCvc3wGvM7OdKF5fx36GBt+5N46qStp/HCtis7V4lbm8qOl51
Y0gl8LaVShZWmVD9qUJaVuhzTs3uU4SnfBP/7U2Se13uadxmze1lgEeOqFHB
1djg8V9VbPh12sHROZ5F59BUramzNW05XwDv0bfwQFyP/BrzD0sXX3zx98mF
Z8uNbbNjxW5U7CapjG7oiyi1IH/OMmbKqlk0cnBNWvj1Iu5gdPTRR6f++O67
7951xx13TG677TZ6z01vvvnmNNx9ww03rF133XV7rr322r1XX331vquuumr/
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
J8Ca3HfKC98rh1XJ5yv+735Oh/030IIBSw==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"256ff58a-40cc-418b-b968-6b2668162829"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Scrap code", "Subsection",
 CellChangeTimes->{{3.8677385820526943`*^9, 
  3.8677385891946964`*^9}},ExpressionUUID->"60229359-9370-4216-b25a-\
68a4334c4d63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ScrapFillMissingSimps", "[", 
   RowBox[{"cmplx_", ",", "dim_", ",", 
    RowBox[{"shifted_", ":", "False"}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sk", "=", 
       RowBox[{"KSkeleton", "[", 
        RowBox[{"cmplx", ",", 
         RowBox[{"dim", "-", "1"}]}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"Flatten", "@", "cmplx"}]}]}]}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{"shifted", ",", 
      RowBox[{"Union", "[", 
       RowBox[{"cmplx", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ad", "=", 
                RowBox[{"FirstCase", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"n", ",", 
                    RowBox[{
                    RowBox[{"Max", "@", "#"}], "+", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"x_", "/;", 
                   RowBox[{
                    RowBox[{"\[Not]", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"cmplx", ",", 
                    RowBox[{"Append", "[", 
                    RowBox[{"#", ",", "x"}], "]"}]}], "]"}]}], "\[And]", 
                    RowBox[{"SubsetQ", "[", 
                    RowBox[{"cmplx", ",", 
                    RowBox[{"Subsets", "[", 
                    RowBox[{
                    RowBox[{"Append", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], ",", 
                    RowBox[{"{", "dim", "}"}]}], "]"}]}], "]"}]}]}], ",", 
                  RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ad", "!=", 
                 RowBox[{"-", "1"}]}], ",", 
                RowBox[{
                 RowBox[{"AllShifts", "[", 
                  RowBox[{"Append", "[", 
                   RowBox[{"#", ",", "ad"}], "]"}], "]"}], "~", "Join", "~", 
                 RowBox[{"{", 
                  RowBox[{"Append", "[", 
                   RowBox[{"#", ",", "ad"}], "]"}], "}"}]}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", "sk"}], 
          ")"}]}]}], "]"}], ",", 
      RowBox[{"Union", "[", 
       RowBox[{"cmplx", ",", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", 
           RowBox[{
            RowBox[{"Range", "@", "n"}], ",", 
            RowBox[{"{", 
             RowBox[{"dim", "+", "1"}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Not]", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"cmplx", ",", "#"}], "]"}]}], "\[And]", 
            RowBox[{"SubsetQ", "[", 
             RowBox[{"cmplx", ",", 
              RowBox[{"Subsets", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", "dim", "}"}]}], "]"}]}], "]"}]}], "&"}]}], 
         "]"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8677386127021394`*^9, 3.8677386140128174`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"5ae9254a-3970-4b03-bd84-006bb21f343f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cmp", "=", 
     RowBox[{"GenerateShifted", "[", 
      RowBox[{"RandomCmplx", "[", 
       RowBox[{"10", ",", "30", ",", "15", ",", "4"}], "]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"AbsoluteTiming", "[", 
      RowBox[{"ScrapFillMissingSimps", "[", 
       RowBox[{"cmp", ",", "3", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8677497611111374`*^9, 3.8677498960839157`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"98736469-a326-42b7-bb13-ca38c5cfa281"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.0342743`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}], ",", 
       RowBox[{"{", "6", "}"}], ",", 
       RowBox[{"{", "7", "}"}], ",", 
       RowBox[{"{", "8", "}"}], ",", 
       RowBox[{"{", "9", "}"}], ",", 
       RowBox[{"{", "10", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0.0137415`", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}], ",", 
       RowBox[{"{", "6", "}"}], ",", 
       RowBox[{"{", "7", "}"}], ",", 
       RowBox[{"{", "8", "}"}], ",", 
       RowBox[{"{", "9", "}"}], ",", 
       RowBox[{"{", "10", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "5", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "6", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "7", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "7", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "8", ",", "9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8", ",", "9", ",", "10"}], "}"}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.867749926480624*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"6de0b4f2-2bd7-455e-8f13-73c724adb8f4"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";", 
  RowBox[{"Catch", "@", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"incmps", "=", 
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomCmplx", "[", 
            RowBox[{"6", ",", "3", ",", "3", ",", "4"}], "]"}], ",", "100"}], 
          "]"}]}]}], ",", "cmps"}], "}"}], ",", 
     RowBox[{
      RowBox[{"cmps", "=", 
       RowBox[{"GenerateShifted", "/@", "incmps"}]}], ";", 
      RowBox[{"And", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"GenerateShifted", "@", 
              RowBox[{"cmps", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], "!=", 
             RowBox[{"cmps", "[", 
              RowBox[{"[", "k", "]"}], "]"}]}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"incmps", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"cmps", "[", 
                RowBox[{"[", "k", "]"}], "]"}], ",", 
               RowBox[{"GenerateShifted", "[", 
                RowBox[{"cmps", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], ";", "True"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "@", "cmps"}]}], "}"}]}], "]"}]}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.867746708468418*^9, 3.8677467604485455`*^9}, {
  3.8677474851312447`*^9, 3.8677478698012943`*^9}, {3.8677479131813993`*^9, 
  3.8677479222521453`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"cbdba720-681f-40fe-b521-15bf0971ab4b"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8677467318172493`*^9, 3.8677467624692044`*^9, {3.8677478272080407`*^9, 
   3.8677478706840115`*^9}, 3.8677479230925856`*^9, 3.8677493019613905`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"c227e799-a177-4075-8546-af02d306c14d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 575.4},
WindowMargins->{{4.2, Automatic}, {Automatic, 0}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b51aca37-61c5-4797-ac23-99754117028a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 236, 4, 107, "Title",ExpressionUUID->"9b7d178a-63c6-404e-a7d1-cb651b4100eb"],
Cell[CellGroupData[{
Cell[841, 30, 172, 3, 75, "Chapter",ExpressionUUID->"e5e8e854-e884-42b8-bba1-08deb7915938"],
Cell[CellGroupData[{
Cell[1038, 37, 407, 6, 59, "Subsection",ExpressionUUID->"bd29b991-36de-4a15-817e-63daaa0cbd62"],
Cell[1448, 45, 1395, 37, 92, "Input",ExpressionUUID->"aefd0d2b-57a2-4219-b259-74fc5fa0e3cc",
 InitializationCell->True],
Cell[2846, 84, 1330, 30, 71, "Input",ExpressionUUID->"031f3af4-0ea8-4873-b187-7157c2b991d3",
 InitializationCell->True],
Cell[4179, 116, 1003, 20, 50, "Input",ExpressionUUID->"5c72f04d-6264-4c03-bfad-fa6fd8705fc6",
 InitializationCell->True],
Cell[5185, 138, 3827, 97, 159, "Input",ExpressionUUID->"5797908c-7036-43fc-9350-b5bf87b6240f"],
Cell[9015, 237, 3754, 97, 166, "Input",ExpressionUUID->"71a2dbec-7e36-4eac-8e24-8f85dc7d336e"],
Cell[12772, 336, 2172, 49, 81, "Input",ExpressionUUID->"48e8bc53-25f2-4f9d-a963-8178976deb2b"],
Cell[14947, 387, 190, 3, 38, "Text",ExpressionUUID->"af0f4b9e-4c65-4a1f-9f26-d8d1bd6a4d21"],
Cell[CellGroupData[{
Cell[15162, 394, 2248, 58, 58, "Input",ExpressionUUID->"c3d2c06d-c405-4ac7-bc96-ccd619651c04"],
Cell[17413, 454, 1419, 36, 39, "Output",ExpressionUUID->"b18990f3-f3d8-4906-afad-31deceee6edd"]
}, Closed]],
Cell[CellGroupData[{
Cell[18869, 495, 1586, 48, 53, "Input",ExpressionUUID->"a088ea49-dd10-47a2-8b3b-42d7b13694d8"],
Cell[20458, 545, 674, 18, 39, "Output",ExpressionUUID->"3a7bfcfe-58f0-4f27-adae-c1d7ff584ef5"]
}, Closed]],
Cell[CellGroupData[{
Cell[21169, 568, 1887, 49, 53, "Input",ExpressionUUID->"c10050f5-c10e-420c-9fbf-4978c22c85c0"],
Cell[23059, 619, 1292, 38, 39, "Output",ExpressionUUID->"56e94eee-09b2-43cf-8f8c-5026b227b7d5"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24412, 664, 218, 4, 75, "Chapter",ExpressionUUID->"9be8a5b0-2c41-45cf-98b9-98723c1ccf77"],
Cell[CellGroupData[{
Cell[24655, 672, 267, 4, 59, "Subsection",ExpressionUUID->"61069992-2fc4-4cb4-849d-e88b192118bb"],
Cell[24925, 678, 8400, 185, 281, "Input",ExpressionUUID->"f3896fb1-5958-47d3-b7a9-b59dd9ecd463",
 InitializationCell->True],
Cell[33328, 865, 567, 10, 38, "Text",ExpressionUUID->"41f12410-3396-44ac-aaba-0c34efb23121"],
Cell[CellGroupData[{
Cell[33920, 879, 1272, 29, 31, "Input",ExpressionUUID->"d4f4fd64-4e4d-4fa4-8c5c-c1d9eb118da3"],
Cell[35195, 910, 1836, 53, 56, "Output",ExpressionUUID->"14927b3e-3774-4fd5-9c54-7f7a717df116"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[37080, 969, 220, 4, 41, "Subsection",ExpressionUUID->"a920a7e9-2613-49f1-9eee-515c48301644"],
Cell[37303, 975, 253, 6, 38, "Text",ExpressionUUID->"b6c476a7-51c2-4937-8551-7b1e4c8a84ac"],
Cell[37559, 983, 1525, 41, 92, "Input",ExpressionUUID->"63f51f3c-d609-4154-a305-3d3c614b5990",
 InitializationCell->True],
Cell[39087, 1026, 2986, 79, 159, "Input",ExpressionUUID->"05156151-098f-4bec-b26f-52e8dac00bbb"],
Cell[42076, 1107, 1478, 45, 112, "Input",ExpressionUUID->"e34cc335-e4fe-408d-8284-333fde5c3f5a",
 InitializationCell->True],
Cell[43557, 1154, 179, 3, 38, "Text",ExpressionUUID->"56634f6b-521b-4e7a-b434-e826d11e1630"],
Cell[43739, 1159, 3155, 68, 115, "Input",ExpressionUUID->"823b14fd-51ce-444d-82c5-d73d19b97ad3"],
Cell[46897, 1229, 188, 3, 37, "Text",ExpressionUUID->"f4252157-4f38-4045-ab24-2bd7fd6361cc"],
Cell[CellGroupData[{
Cell[47110, 1236, 558, 10, 31, "Input",ExpressionUUID->"8951ddb5-3856-42dd-ac06-12b9a1648ae7"],
Cell[47671, 1248, 1811, 53, 56, "Output",ExpressionUUID->"68da77e0-410e-4a27-ac03-2baa4d5bb5cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49519, 1306, 499, 11, 31, "Input",ExpressionUUID->"ffc8fb51-1b6b-4d15-8a92-db944289a9ab"],
Cell[50021, 1319, 180, 3, 34, "Output",ExpressionUUID->"b4d58cf1-e6d9-4110-8d6b-00d8f6bf3095"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50238, 1327, 419, 9, 31, "Input",ExpressionUUID->"d1e0276f-644c-496a-8302-08ca75b58759"],
Cell[50660, 1338, 477, 13, 34, "Output",ExpressionUUID->"5ac57b83-227c-4635-a0fe-126af1eecb6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51174, 1356, 383, 8, 31, "Input",ExpressionUUID->"ea4eff1e-c444-45d8-8307-447e01ec87d7"],
Cell[51560, 1366, 1664, 50, 56, "Output",ExpressionUUID->"7508e722-b0c6-47a2-b9c9-21104e54879a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53261, 1421, 626, 13, 52, "Input",ExpressionUUID->"62140bd5-a841-4cbf-be3c-12864a97f999"],
Cell[53890, 1436, 205, 4, 34, "Output",ExpressionUUID->"5ebe018f-67c6-42cb-9c43-81c7b8e351b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54132, 1445, 248, 5, 31, "Input",ExpressionUUID->"baa7b6cc-2b11-4a39-b523-2479a1f9c2f6"],
Cell[54383, 1452, 180, 3, 34, "Output",ExpressionUUID->"958725c0-5918-445c-a103-40b8f84c4bd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54600, 1460, 448, 11, 31, "Input",ExpressionUUID->"710414e1-e610-4eae-a2c9-ec98f0a60ccf"],
Cell[55051, 1473, 478, 13, 34, "Output",ExpressionUUID->"878114f6-68c0-43dd-accd-95844944a0c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55566, 1491, 534, 13, 31, "Input",ExpressionUUID->"2f2510f7-f04f-4fa8-bfd1-c897554bc8fb"],
Cell[56103, 1506, 156, 3, 34, "Output",ExpressionUUID->"38bf1358-5ebc-4655-a6b1-83b9b72c7246"]
}, Open  ]],
Cell[56274, 1512, 305, 7, 31, "Input",ExpressionUUID->"883ecb77-f093-477d-8706-1ce090e6d99c"],
Cell[56582, 1521, 287, 4, 37, "Text",ExpressionUUID->"ef92fde5-018f-472f-aabd-d8cace5b7c14"],
Cell[CellGroupData[{
Cell[56894, 1529, 2178, 56, 135, "Input",ExpressionUUID->"f9c0f799-4388-41f0-baa3-87412095dab8"],
Cell[59075, 1587, 1611, 49, 56, "Output",ExpressionUUID->"5285cc50-e7dc-432e-b787-4b840d2e0f91"]
}, Open  ]],
Cell[60701, 1639, 184, 3, 37, "Text",ExpressionUUID->"4941c31d-15f7-4062-93e1-f8ca5368dc81"],
Cell[CellGroupData[{
Cell[60910, 1646, 1782, 48, 114, "Input",ExpressionUUID->"cf72a158-5dac-4591-9965-ba48a70a1e05"],
Cell[62695, 1696, 10469, 298, 264, "Output",ExpressionUUID->"ade3543f-4f72-4aca-95e4-906a7bf68ff3"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73225, 2001, 161, 3, 75, "Chapter",ExpressionUUID->"c180eaa2-f528-4c80-9c7b-9a3ea93c95c3"],
Cell[CellGroupData[{
Cell[73411, 2008, 225, 4, 59, "Subsection",ExpressionUUID->"8445997a-408b-4a63-b9b7-1b9ad428fa5f"],
Cell[73639, 2014, 308, 6, 38, "Text",ExpressionUUID->"92561be6-9ab3-4c02-9468-4dc1fcb327a3"],
Cell[73950, 2022, 1224, 37, 71, "Input",ExpressionUUID->"74c1acf7-f8bf-47d3-860e-29a17c86686b",
 InitializationCell->True],
Cell[75177, 2061, 4081, 90, 179, "Input",ExpressionUUID->"a21c89b2-7422-41e9-bdf3-929c8e58666b"],
Cell[79261, 2153, 195569, 3211, 388, "Text",ExpressionUUID->"ead5c61f-1253-47aa-a7ed-f975987d30c0"],
Cell[274833, 5366, 3816, 91, 100, "Input",ExpressionUUID->"1ac1a2b2-1641-44bc-a15e-650bd1e424f0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[278674, 5461, 1087, 22, 31, "Input",ExpressionUUID->"0b664b0a-0314-414d-8256-2856cb2ddf8a"],
Cell[279764, 5485, 404, 6, 35, "Output",ExpressionUUID->"906803c3-aefc-48db-bcc6-39affdc8c877"]
}, Open  ]],
Cell[280183, 5494, 187, 3, 38, "Text",ExpressionUUID->"90f41181-6295-4172-ad0e-bfa828bccace"],
Cell[CellGroupData[{
Cell[280395, 5501, 865, 22, 52, "Input",ExpressionUUID->"c39289cd-7665-4dd6-b5c1-d777d1241931"],
Cell[281263, 5525, 261, 6, 35, "Output",ExpressionUUID->"0cfaba35-f5eb-4f40-bba1-edfc9e0918e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281561, 5536, 1862, 36, 52, "Input",ExpressionUUID->"da822627-ab3c-4e82-a17c-f8326007892f"],
Cell[283426, 5574, 797, 14, 35, "Output",ExpressionUUID->"50aab36b-482c-42c7-b991-193a539d3c5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284260, 5593, 2240, 53, 103, "Input",ExpressionUUID->"5eccbe4f-9f0d-4062-86cb-6d1a63463a4e"],
Cell[CellGroupData[{
Cell[286525, 5650, 185, 4, 24, "Print",ExpressionUUID->"6bfcd031-8cb0-4aea-8ee2-6d06c6b31e2d"],
Cell[286713, 5656, 185, 4, 24, "Print",ExpressionUUID->"74ceb21b-af5b-48d8-b5f8-180fa4412fb6"],
Cell[286901, 5662, 185, 4, 24, "Print",ExpressionUUID->"5614b220-c5dc-4d00-bebd-8786cd06384f"]
}, Open  ]],
Cell[287101, 5669, 458, 8, 35, "Output",ExpressionUUID->"2c188ea2-5616-416b-b8ed-7a2c853110ca"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287608, 5683, 236, 4, 41, "Subsection",ExpressionUUID->"3fef2fd9-0acd-413b-a34c-1c38f2c88645"],
Cell[287847, 5689, 1265, 35, 111, "Input",ExpressionUUID->"13bb2e22-4bc7-409b-bd4f-a0832b066347",
 InitializationCell->True],
Cell[289115, 5726, 227, 5, 37, "Text",ExpressionUUID->"4d166a88-d532-4501-afcb-48bbf1c26d8a"],
Cell[289345, 5733, 1310, 36, 94, "Input",ExpressionUUID->"2336f1c0-5304-4087-aa20-c479d336c4ac"],
Cell[CellGroupData[{
Cell[290680, 5773, 1141, 25, 31, "Input",ExpressionUUID->"b27f69e4-b07c-435d-9fa0-628bd5e6c7d1"],
Cell[291824, 5800, 509, 7, 34, "Output",ExpressionUUID->"c0352438-787c-4408-847b-10c4408dc5ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292370, 5812, 740, 19, 31, "Input",ExpressionUUID->"5d166475-92cc-4dc8-a0ce-844493b430d5"],
Cell[293113, 5833, 176, 2, 34, "Output",ExpressionUUID->"08dbea78-1eb4-4858-8b7f-77c6c068d74f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293326, 5840, 926, 24, 52, "Input",ExpressionUUID->"6b231248-5e89-4686-917b-6e3acab029fd"],
Cell[294255, 5866, 221, 4, 34, "Output",ExpressionUUID->"0305cfc7-908b-460d-b37f-8df11c1195da"]
}, Open  ]],
Cell[294491, 5873, 175, 3, 37, "Text",ExpressionUUID->"9ed0367e-4654-4cf6-a5c4-98becf02cc9c"],
Cell[CellGroupData[{
Cell[294691, 5880, 593, 14, 31, "Input",ExpressionUUID->"50e29df0-c102-4d74-92d0-7d59263cedda"],
Cell[295287, 5896, 176, 2, 34, "Output",ExpressionUUID->"f3b4c5f7-048d-47dc-9a0f-712a805e537a"]
}, Open  ]],
Cell[295478, 5901, 307, 7, 37, "Text",ExpressionUUID->"ee277e4a-eda7-4170-927c-33da2ff3d970"]
}, Closed]],
Cell[CellGroupData[{
Cell[295822, 5913, 185, 3, 41, "Subsection",ExpressionUUID->"b85b7826-bed0-4d0d-bb0d-45e913d8e184"],
Cell[296010, 5918, 200, 3, 37, "Text",ExpressionUUID->"f395d9e0-5402-4e85-80a6-7060bb01a392"],
Cell[CellGroupData[{
Cell[296235, 5925, 1122, 29, 52, "Input",ExpressionUUID->"f1fa68d4-f70a-4402-b35e-92913c8b8671"],
Cell[297360, 5956, 448, 12, 34, "Output",ExpressionUUID->"3e279baa-2655-46c8-a18c-186135c1a7f1"]
}, Open  ]],
Cell[297823, 5971, 514, 14, 48, "Input",ExpressionUUID->"54979925-3bf5-4fc0-9d66-5ad5ca46cc89",
 InitializationCell->True],
Cell[298340, 5987, 3839, 83, 135, "Input",ExpressionUUID->"11abf676-8628-4e99-b2a8-d7e06178d940"],
Cell[302182, 6072, 243, 4, 37, "Text",ExpressionUUID->"179368ad-2a71-4548-b413-6d845a6a0bee"],
Cell[CellGroupData[{
Cell[302450, 6080, 1283, 31, 52, "Input",ExpressionUUID->"e688c47f-9e70-48df-989b-d6d61b93e9dd"],
Cell[303736, 6113, 331, 5, 34, "Output",ExpressionUUID->"fa35fec3-a36a-4e13-9cc5-3020a79b51be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304104, 6123, 3250, 73, 156, "Input",ExpressionUUID->"3d4d0e29-9ccb-41df-bbb2-ce9a2ffc3802"],
Cell[307357, 6198, 225, 5, 34, "Output",ExpressionUUID->"178b2b22-201b-4245-bc7f-7c4d122ee2db"]
}, Open  ]],
Cell[307597, 6206, 628, 11, 37, "Text",ExpressionUUID->"54f3dffe-24f8-41bd-80e0-730dcc76850b"],
Cell[CellGroupData[{
Cell[308250, 6221, 1806, 45, 114, "Input",ExpressionUUID->"4bd3bac2-8926-4358-b261-10cc3e7b6022"],
Cell[310059, 6268, 321, 7, 34, "Output",ExpressionUUID->"3686aea8-2752-4126-92a5-a4b64ca7df35"]
}, Open  ]],
Cell[310395, 6278, 617, 11, 63, "Text",ExpressionUUID->"65f628f5-171e-46b2-8de6-b94bcde3b9bb"],
Cell[311015, 6291, 676, 19, 48, "Input",ExpressionUUID->"02e2ba6e-29a1-4f88-b69c-b4ca88ad0b59",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[311716, 6314, 2852, 66, 177, "Input",ExpressionUUID->"9c1ccda2-6369-4bf6-b0cb-08c023dad55d"],
Cell[314571, 6382, 644, 12, 34, "Output",ExpressionUUID->"1ac2d521-7b9e-491c-b0e9-e59b138a6c39"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[315276, 6401, 190, 3, 75, "Chapter",ExpressionUUID->"d3e1fdd1-44f0-4a2c-921f-04258e0b9dc3"],
Cell[CellGroupData[{
Cell[315491, 6408, 158, 3, 59, "Subsection",ExpressionUUID->"acb88be5-ee59-4014-adb0-01fd421312a5"],
Cell[315652, 6413, 1178, 29, 50, "Input",ExpressionUUID->"709bbd60-2d0c-40dd-bd75-cd47bc68bcb0",
 InitializationCell->True],
Cell[316833, 6444, 2041, 48, 92, "Input",ExpressionUUID->"1c995fe1-ac44-4ea8-8a9f-514ec61e4af5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[318911, 6497, 203, 3, 41, "Subsection",ExpressionUUID->"28d10bdf-393a-427f-85ca-e00258934bd6"],
Cell[319117, 6502, 294, 5, 37, "Text",ExpressionUUID->"55a7f6d0-ed1c-4f51-b0aa-e83e7ba1ad28"],
Cell[CellGroupData[{
Cell[319436, 6511, 1244, 27, 31, "Input",ExpressionUUID->"a208c1d9-6035-4420-b199-83c55ab2c2fd"],
Cell[320683, 6540, 1138, 26, 34, "Output",ExpressionUUID->"d1cc4d8c-6118-4a5c-bbe9-ef1ba09b673b"]
}, Open  ]],
Cell[321836, 6569, 282, 4, 37, "Text",ExpressionUUID->"343042e9-27f6-4f55-b7dd-93948dc1dd36"],
Cell[CellGroupData[{
Cell[322143, 6577, 2692, 67, 135, "Input",ExpressionUUID->"1905e735-2abb-4c71-b8d4-b512d133dbf4"],
Cell[324838, 6646, 367, 7, 34, "Output",ExpressionUUID->"91abf7f9-a7db-4be6-b8a4-e7fe574c1b9d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[325254, 6659, 171, 3, 41, "Subsection",ExpressionUUID->"ad4be2dd-d7ee-4299-8846-f2db365384a2"],
Cell[325428, 6664, 176, 3, 38, "Text",ExpressionUUID->"006e5f89-b21c-4998-b514-44e06a07be99"],
Cell[325607, 6669, 3036, 66, 128, "Input",ExpressionUUID->"6016ceb6-7fbc-43cf-803a-b6352826b461"],
Cell[328646, 6737, 4213, 106, 200, "Input",ExpressionUUID->"c2c7af9c-610b-4e1f-b7a8-b79f01d36348"],
Cell[332862, 6845, 276, 6, 38, "Text",ExpressionUUID->"339455be-4689-46d7-bc2b-c0534a3a7aa1"],
Cell[CellGroupData[{
Cell[333163, 6855, 1581, 41, 53, "Input",ExpressionUUID->"258b522a-7af4-4fd4-8b2a-2968020908ea"],
Cell[334747, 6898, 498, 8, 35, "Output",ExpressionUUID->"0f8ad690-d31a-4095-860e-4d21e36ba622"]
}, Open  ]],
Cell[335260, 6909, 178, 3, 38, "Text",ExpressionUUID->"965b7663-b5de-41f7-988d-72823ce4f940"],
Cell[CellGroupData[{
Cell[335463, 6916, 2455, 61, 94, "Input",ExpressionUUID->"e64679bf-917f-43a6-a151-06d2ff059e2a"],
Cell[337921, 6979, 455, 9, 35, "Output",ExpressionUUID->"c073526b-09b3-4c4e-9368-7be04c9692a7"]
}, Open  ]],
Cell[338391, 6991, 753, 13, 63, "Text",ExpressionUUID->"e9638927-0006-456c-bc53-c2a498a18434"],
Cell[CellGroupData[{
Cell[339169, 7008, 4829, 122, 137, "Input",ExpressionUUID->"b0fdc286-ce48-4615-af4e-53a28baa722f"],
Cell[344001, 7132, 63319, 1567, 918, "Output",ExpressionUUID->"30d1a625-b6d9-468c-b317-cdcd8c4f8ac5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[407369, 8705, 236, 4, 41, "Subsection",ExpressionUUID->"5e22708a-bb37-4207-be2d-2c7c0a8020d0"],
Cell[407608, 8711, 130, 3, 31, "Input",ExpressionUUID->"9fa5444d-eefb-4c69-b05a-1bc287260fa4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[407787, 8720, 171, 3, 75, "Chapter",ExpressionUUID->"f5ee0ce5-f69b-4ddb-8792-fa5332e03b90"],
Cell[CellGroupData[{
Cell[407983, 8727, 166, 3, 59, "Subsection",ExpressionUUID->"b6580819-931b-4d46-86c9-9d0aed7a5d43"],
Cell[408152, 8732, 1626, 40, 74, "Input",ExpressionUUID->"89e91dda-cc68-4b97-a1cc-ea50e6bf568d"],
Cell[409781, 8774, 449, 12, 38, "Text",ExpressionUUID->"52964ab0-c4a1-4766-b049-00975ee705be"],
Cell[CellGroupData[{
Cell[410255, 8790, 1244, 29, 32, "Input",ExpressionUUID->"ca6eaa0f-e679-4231-8a07-38f27a8684da"],
Cell[411502, 8821, 437, 7, 35, "Output",ExpressionUUID->"ad6b82e9-71b8-43ed-b83c-8efa2b8a322d"]
}, Open  ]],
Cell[411954, 8831, 421, 12, 38, "Text",ExpressionUUID->"a2e48e15-5232-4949-a717-4fc8e7637e37"],
Cell[CellGroupData[{
Cell[412400, 8847, 790, 24, 32, "Input",ExpressionUUID->"1edbfcdc-8e75-4533-bc7b-44684777ffd7"],
Cell[413193, 8873, 158, 3, 35, "Output",ExpressionUUID->"c01feed9-f9dd-4088-8335-f549285f5892"]
}, Open  ]],
Cell[413366, 8879, 2046, 58, 91, "Input",ExpressionUUID->"954cd83d-fe2a-40e1-bcc2-4243d19e148f",
 InitializationCell->True],
Cell[415415, 8939, 3291, 78, 113, "Input",ExpressionUUID->"3dfed76f-8027-4e41-abde-abc312050b0d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[418731, 9021, 996, 24, 32, "Input",ExpressionUUID->"376b090f-0ab4-4b81-9d0e-4629aaafd7a0"],
Cell[419730, 9047, 324, 5, 35, "Output",ExpressionUUID->"c2c88e39-5a39-442f-b5d8-a4ced2db2fc8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[420103, 9058, 193, 3, 41, "Subsection",ExpressionUUID->"c661b5bb-c9f5-4340-ab0f-19d597be69cc"],
Cell[CellGroupData[{
Cell[420321, 9065, 243, 5, 31, "Input",ExpressionUUID->"605b742c-bc38-4166-a99d-b58ca021e807"],
Cell[420567, 9072, 28194, 473, 379, 4796, 88, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8dd13c44-7e72-47ae-bfb3-14a601f5d08d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448798, 9550, 714, 19, 31, "Input",ExpressionUUID->"c97bd416-c34b-4acf-b392-800d28e3249d"],
Cell[449515, 9571, 2297, 45, 375, "Output",ExpressionUUID->"f40c59b3-0d31-4612-8080-73317da22bc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451849, 9621, 1028, 28, 31, "Input",ExpressionUUID->"5a1b0f23-9986-41c2-baae-80a276903dca"],
Cell[452880, 9651, 27212, 450, 354, 2686, 48, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"604a0f8a-07fd-4450-8166-c2301683b08e"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480153, 10108, 216, 4, 75, "Chapter",ExpressionUUID->"f8fe9987-5a91-465d-b7d8-531bed84a4a0"],
Cell[CellGroupData[{
Cell[480394, 10116, 164, 3, 59, "Subsection",ExpressionUUID->"819537fe-c7a8-490e-b6d8-c01a22a4e6cc"],
Cell[480561, 10121, 1103, 28, 71, "Input",ExpressionUUID->"20082caf-5450-48b3-9339-d4578c770bad",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[481689, 10153, 627, 10, 31, "Input",ExpressionUUID->"70c8c21e-f15e-4881-8ed5-eb41238f760d"],
Cell[482319, 10165, 1725, 49, 57, "Output",ExpressionUUID->"a19a97df-80b7-459c-987c-02588688c8bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484081, 10219, 522, 13, 31, "Input",ExpressionUUID->"b4d1d904-45d9-44d8-9546-24d2cc8612b5"],
Cell[484606, 10234, 218, 5, 35, "Output",ExpressionUUID->"9b4df866-d87e-48eb-9987-b263177ecb1a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[484885, 10246, 161, 3, 75, "Chapter",ExpressionUUID->"10cdb10a-fcb6-4b39-a5de-cbd41090ec92"],
Cell[CellGroupData[{
Cell[485071, 10253, 181, 3, 59, "Subsection",ExpressionUUID->"7b64984e-fc90-46d0-961e-93bea5a5e94a"],
Cell[CellGroupData[{
Cell[485277, 10260, 436, 12, 36, "Input",ExpressionUUID->"4fb58be2-7896-4e63-a796-0234cf606474"],
Cell[485716, 10274, 21491, 365, 279, 7008, 127, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"256ff58a-40cc-418b-b968-6b2668162829"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[507256, 10645, 162, 3, 41, "Subsection",ExpressionUUID->"60229359-9370-4216-b25a-68a4334c4d63"],
Cell[507421, 10650, 3302, 85, 221, "Input",ExpressionUUID->"5ae9254a-3970-4b03-bd84-006bb21f343f"],
Cell[CellGroupData[{
Cell[510748, 10739, 665, 18, 31, "Input",ExpressionUUID->"98736469-a326-42b7-bb13-ca38c5cfa281"],
Cell[511416, 10759, 62459, 1535, 1437, "Output",ExpressionUUID->"6de0b4f2-2bd7-455e-8f13-73c724adb8f4"]
}, Closed]],
Cell[CellGroupData[{
Cell[573912, 12299, 1837, 49, 90, "Input",ExpressionUUID->"cbdba720-681f-40fe-b521-15bf0971ab4b"],
Cell[575752, 12350, 287, 5, 35, "Output",ExpressionUUID->"c227e799-a177-4075-8546-af02d306c14d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

